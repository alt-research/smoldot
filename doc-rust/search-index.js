var searchIndex = JSON.parse('{\
"smoldot":{"doc":"Client for Polkadot and Substrate-compatible chains.","tn":["author","chain","chain_spec","database","executor","finality","header","identity","informant","json_rpc","libp2p","network","signature","sync","transactions","trie","verify","aura","build","runtime","Config","SlotClaim","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","current_authorities","eq","equivalent","equivalent","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","local_authorities","local_authorities_index","next_slot_claim","now_from_unix_epoch","slot_duration","slot_end_from_unix_epoch","slot_number","slot_start_from_unix_epoch","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ApplyExtrinsic","ApplyExtrinsic","ApplyExtrinsicResult","Aura","AuthoringStart","AuthoringStartConfig","Builder","BuilderAuthoring","Config","ConfigConsensus","Error","Error","Idle","InvalidHeaderGenerated","NextKey","NextKey","PrefixKeys","PrefixKeys","Ready","Runtime","Seal","Seal","StorageGet","StorageGet","TrieEntryVersion","WaitSlot","WaitSlot","add_extrinsic","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","authority_index","block_body_capacity","block_number_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consensus","finish","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","inject_key","inject_keys_ordered","inject_sr25519_signature","inject_value","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","key","main_trie_root_calculation_cache","max_log_level","new","now_from_unix_epoch","parent_hash","parent_number","parent_runtime","prefix","scale_encoded_header","slot_end_from_unix_epoch","slot_start_from_unix_epoch","start","start","to_sign","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","when","result","resume","current_authorities","local_authorities","now_from_unix_epoch","slot_duration","AncientBirthBlock","ApplyExtrinsic","ApplyExtrinsic","ApplyExtrinsicResult","Aura","Babe","BadApplyExtrinsicOutput","BadInherentExtrinsicsOutput","BadMandatory","BadOrigin","BadProof","BlockBuild","BlockHeightOverflow","Call","CannotLookup","CannotLookup","Config","ConfigPreRuntime","Custom","Custom","DispatchError","Error","ExhaustsResources","Finished","Future","InherentExtrinsicDispatchError","InherentExtrinsicTransactionValidityError","InherentExtrinsics","InherentExtrinsics","InitializeBlockNonEmptyOutput","Invalid","InvalidTransaction","MandatoryDispatch","Module","NextKey","NextKey","NoUnsignedValidator","Payment","PrefixKeys","PrefixKeys","Stale","StorageGet","StorageGet","Success","TransactionValidityError","TrieEntryVersion","Unknown","UnknownTransaction","VmInit","WasmVm","add_extrinsic","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_body_capacity","block_number_bytes","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_block","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus_digest_log_item","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","inject_inherents","inject_key","inject_keys_ordered","inject_raw_inherents_list","inject_value","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","key","logs","main_trie_root_calculation_cache","main_trie_root_calculation_cache","max_log_level","offchain_storage_changes","parent_hash","parent_number","parent_runtime","parent_runtime","prefix","scale_encoded_header","state_trie_version","storage_main_trie_changes","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","result","resume","error","index","error","error","extrinsic","extrinsic","async_tree","blocks_tree","chain_information","fork_tree","AsyncOpId","AsyncOpParams","AsyncTree","BestBlockChanged","Block","Config","Finalized","InputIterItem","NextNecessaryAsyncOp","NodeIndex","NotReady","OutputUpdate","OutputUpdateBlock","Ready","ancestors","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","async_op_blocks","async_op_failure","async_op_finished","async_op_user_data","async_op_user_data","best_block_index","block_async_user_data","block_async_user_data_mut","block_index","block_user_data","block_user_data","block_user_data_mut","blocks_capacity","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finalized_async_user_data","finalized_async_user_data","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_hash","hash","id","id","index","input_finalize","input_insert_block","input_iter_ancestry_order","input_iter_unordered","input_set_best_block","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_new_best","is_output_best","map_async_op_user_data","new","next_necessary_async_op","num_input_non_finalized_blocks","parent","partial_cmp","retry_after_failed","to_owned","to_owned","to_owned","to_owned","try_advance_output","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","when","async_op_user_data","best_block_index","best_block_index","former_finalized_async_op_user_data","former_index","pruned_blocks","user_data","BadParent","BadParent","BelowFinalized","BlockAccess","BodyInsert","BodyVerifyError","BodyVerifyRuntimeRequired","BodyVerifyStep1","BodyVerifyStep2","CommitVerifyError","Config","Consensus","ConsensusMismatch","ConsensusMismatch","Duplicate","Duplicate","EqualFinalizedHeightButInequalHash","EqualToFinalized","Error","FinalityApply","FinalityVerify","FinalityVerify","FinalityVerifyError","Finished","HeaderInsert","HeaderVerifyError","HeaderVerifySuccess","Insert","InvalidCommit","InvalidHeader","InvalidHeader","InvalidJustification","JustificationEngineMismatch","JustificationVerifyError","NonFinalizedTree","NotEnoughKnownBlocks","NotGrandpa","ParentRuntimeRequired","RuntimeCompilation","RuntimeCompilation","SetFinalizedBlockIter","SetFinalizedError","StorageGet","StorageGet","StorageNextKey","StorageNextKey","StoragePrefixKeys","StoragePrefixKeys","TooFarAhead","TrieEntryVersion","UnknownBlock","UnknownConsensusEngine","UnknownConsensusEngine","UnknownTargetBlock","VerificationFailed","VerificationFailed","VerificationFailed","abort","abort","allow_unknown_consensus_engines","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_chain_information","best_block_consensus","best_block_hash","best_block_header","block_number_bytes","block_number_bytes","block_user_data","blocks_capacity","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","chain_information","cjk_compat_variants","clear","clone","clone_into","contains_non_finalized_block","drop","drop","finality_checkpoints","finalized_block_hash","finalized_block_header","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","header","inject_key","inject_keys_ordered","inject_value","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_header","into_iter","into_user_data","is_current_best_block","is_empty","iter_ancestry_order","iter_unordered","key","key","len","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","new","next","nfc","nfd","nfkc","nfkd","non_finalized_block_by_hash","non_finalized_block_user_data","nth_ancestor","nth_ancestor","nth_ancestor","nth_ancestor","num_non_finalized_ancestors","num_non_finalized_ancestors","num_non_finalized_ancestors","num_non_finalized_ancestors","parent_block","parent_block","prefix","reserve","resume","set_finalized_block","shrink_to_fit","size_hint","stream_safe","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updates_best_block","user_data_mut","verify_body","verify_grandpa_commit_message","verify_header","verify_justification","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","chain","parent_hash","chain","error","insert","main_trie_root_calculation_cache","new_runtime","offchain_storage_changes","parent_runtime","parent_runtime","state_trie_version","storage_main_trie_changes","target_block_number","block_hash","block_number","block_to_finalize_number","justification_block_hash","justification_block_number","parent_hash","block_height","insert","is_new_best","Aura","Aura","Babe","Babe","BabeEpochInformation","BabeEpochInformationRef","BabeValidityError","ChainInformation","ChainInformationConsensus","ChainInformationConsensusRef","ChainInformationFinality","ChainInformationFinalityRef","ChainInformationRef","FinalizedZeroButNonZeroAuthoritiesSetId","Grandpa","Grandpa","InvalidBabe","InvalidConstant","MissingBabeSlotStartNumber","NoBabeFinalizedEpoch","NonLinearBabeEpochs","Outsourced","Outsourced","ScheduledGrandPaChangeBeforeFinalized","UnexpectedBabeFinalizedEpoch","UnexpectedBabeSlotStartNumber","Unknown","Unknown","ValidChainInformation","ValidChainInformationRef","ValidityError","allowed_slots","allowed_slots","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","authorities","authorities","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","c","c","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus","consensus","epoch_index","epoch_index","finality","finality","finalized_block_header","finalized_block_header","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","randomness","randomness","start_slot_number","start_slot_number","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","validate","validate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","finalized_authorities_list","finalized_block_epoch_information","finalized_next_epoch_transition","slot_duration","slots_per_epoch","finalized_authorities_list","finalized_block_epoch_information","finalized_next_epoch_transition","slot_duration","slots_per_epoch","after_finalized_block_authorities_set_id","finalized_scheduled_change","finalized_triggered_authorities","after_finalized_block_authorities_set_id","finalized_scheduled_change","finalized_triggered_authorities","AuraApiAuthorities","AuraApiSlotDuration","AuraAuthoritiesOutputDecode","AuraSlotDurationOutputDecode","BabeApiConfiguration","BabeApiCurrentEpoch","BabeApiNextEpoch","BabeConfigurationOutputDecode","BabeCurrentEpochOutputDecode","BabeNextEpochOutputDecode","ChainInformationBuild","Config","ConfigFinalizedBlockHeader","Error","Finished","Genesis","GrandpaApiAuthorities","GrandpaApiCurrentSetId","GrandpaAuthoritiesOutputDecode","GrandpaCurrentSetIdOutputDecode","InProgress","InProgress","InvalidChainInformation","MultipleConsensusAlgorithms","NextKey","NextKey","NonGenesis","RuntimeCall","StorageGet","StorageGet","WasmStart","WasmVm","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_in_progress","call_in_progress","call_in_progress","clone","clone_into","eq","equivalent","equivalent","finalized_block_header","fmt","fmt","fmt","from","from","from","from","from","from","from","from","function_name","get_hash","hash","inject_key","inject_value","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","key","new","parameter_vectored","parameter_vectored_vec","remaining_calls","runtime","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","result","virtual_machine","header","known_finality","state_trie_root_hash","call","call","error","error","ForkTree","NodeIndex","PruneAncestorsIter","PrunedNode","ancestors","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","ascend_and_descend","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clear","clone","clone_into","cmp","common_ancestor","default","drop","eq","equivalent","equivalent","find","fmt","fmt","from","from","from","from","get","get_mut","index","insert","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_ancestor","is_empty","is_prune_target_ancestor","iter_ancestry_order","iter_unordered","len","map","new","next","node_to_root_path","parent","partial_cmp","prune_ancestors","prune_uncles","reserve","root_to_node_path","shrink_to_fit","size_hint","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_data","vzip","vzip","vzip","vzip","with_capacity","Bootnode","BuildChainInformation","ChainSpec","FromGenesisStorageError","GenesisStorage","GenesisStorageItems","HeapPagesDecode","Items","LightSyncState","ParseError","Parsed","RuntimeNotFound","TrieRootHash","UnknownStorageItems","UnrecognizedFormat","VmInitialization","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_chain_information","as_chain_information","bad_blocks_hashes","block_number_bytes","boot_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_type","clone","clone","clone_into","clone_into","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fork_id","from","from","from","from","from","from","from","from_json_bytes","genesis_storage","has_live_network","id","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_genesis_items","into_trie_root_hash","iter","light_sync_state","name","properties","protocol_id","relay_chain","telemetry_endpoints","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","multiaddr","peer_id","finalized_serialize","full_sqlite","CorruptedError","as_any","as_any_mut","borrow","borrow_mut","decode_chain","encode_chain","encode_chain_storage","fmt","fmt","from","into","into_any","into_any_arc","into_any_rc","to_string","try_from","try_into","type_id","vzip","Access","Access","Access","AccessError","BadHeader","BlockHeaderCorrupted","BrokenChain","Config","ConfigTy","ConsensusAlgorithmMix","Corrupted","CorruptedError","DatabaseEmpty","DatabaseOpen","Disk","Duplicate","Empty","FinalizedAccessError","FinalizedNephew","InsertError","Internal","InternalError","InvalidBabeEpochInformation","InvalidBlockHashLen","InvalidChainInformation","InvalidFinalizedNum","InvalidNumber","InvalidTrieEntryVersion","Memory","MissingBlockHeader","MissingMetaKey","MissingParent","Obsolete","Open","RevertForbidden","SetFinalizedError","SqliteFullDatabase","UnknownBlock","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_block_hash","block_extrinsics","block_hash_by_number","block_number_bytes","block_scale_encoded_header","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","drop","finalized_block_hash","finalized_block_storage_main_trie","finalized_block_storage_main_trie_get","finalized_block_storage_main_trie_keys","finalized_block_storage_main_trie_next_key","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","initialize","insert","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","open","set_finalized","to_chain_information","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CoreVersion","CoreVersionError","CoreVersionRef","DEFAULT_HEAP_PAGES","InvalidHeapPagesError","TooLarge","WrongLen","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","host","into","into_any","into_any_arc","into_any_rc","read_only_runtime_host","runtime_host","storage_diff","storage_heap_pages_to_value","to_owned","to_string","try_from","try_into","type_id","vm","vzip","BadFormat","BadReturnValue","CallRuntimeVersion","CallRuntimeVersion","ChildTrieDefault","ChildTrieDefault","Config","CoreVersion","CoreVersion","CoreVersionError","CoreVersionRef","DataSizeOverflow","EndStorageTransaction","EndStorageTransaction","Error","Error","ExternalOffchainStorageSet","ExternalOffchainStorageSet","ExternalStorageAppend","ExternalStorageAppend","ExternalStorageClearPrefix","ExternalStorageClearPrefix","ExternalStorageGet","ExternalStorageGet","ExternalStorageNextChildTrie","ExternalStorageNextChildTrie","ExternalStorageNextKey","ExternalStorageNextKey","ExternalStorageRoot","ExternalStorageRoot","ExternalStorageSet","ExternalStorageSet","Finished","Finished","FinishedWithPendingTransaction","FreeError","GetMaxLogLevel","GetMaxLogLevel","HeapBaseNotFound","HeapPages","HostFunctionNotImplemented","HostVm","HostVmPrototype","InvalidZstd","LogEmit","LogEmit","MainTrie","MainTrie","MemoryMaxSizeTooLow","ModuleFormatError","NewErr","NoActiveTransaction","OutOfMemory","ParamDecodeError","ParamOutOfRange","ReadyToRun","ReadyToRun","ReturnedPtrOutOfRange","SignatureVerification","SignatureVerification","StartErr","StartStorageTransaction","StartStorageTransaction","StateVersionMismatch","StorageKey","TooLarge","Trap","Trie","TrieEntryVersion","UnresolvedFunctionCalled","Utf8Error","VirtualMachine","VirtualMachine","allow_unresolved_imports","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_trie","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit_changes","eq","eq","equivalent","equivalent","equivalent","equivalent","exec_hint","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","hash","hash","heap_pages","heap_pages","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_prototype","into_prototype","is_valid","key","key","key","key","key","max_keys_to_remove","max_size","message","module","new","offset","prefix","public_key","resume","resume","resume","resume","resume","resume","resume","resume","resume","resume","resume","resume","resume","resume_failed","resume_full_value","resume_success","resume_vectored","run","run","run_no_param","run_vectored","runtime_version","runtime_version","signature","state_trie_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","trie","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value","verify_and_resume","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasm_code","actual","error","function","function","function","function","function","length","memory_size","module_name","param_num","param_num","parameter","pointer","pointer","pointer","requested_size","size","specification","error","prototype","resume","rollback","child_trie","key","key","child_trie","CoreVersion","CoreVersionApi","CoreVersionApisRefIter","CoreVersionError","CoreVersionRef","CustomSectionsPresenceMismatch","Decode","FailedToParse","FindEmbeddedRuntimeVersionError","FindEncodedEmbeddedRuntimeVersionApisError","FindSections","ForbiddenHostFunction","Run","RuntimeApisDecode","RuntimeVersionDecode","Start","TrieEntryVersion","apis","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_ref","as_slice_of","authoring_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","contains_hashed","decode","encode_hex","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_embedded_runtime_version","find_encoded_embedded_runtime_version_apis","find_version","find_versions","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_slice","from_slice_no_length","get_hash","hash","hash_api_name","impl_name","impl_version","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","name_hash","next","scale_encoding_vec","spec_name","spec_version","state_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Config","Error","ErrorDetail","Finished","ForbiddenHostCall","LogsTooLong","NextKey","NextKey","RuntimeHostVm","SignatureVerification","SignatureVerification","StorageGet","StorageGet","StorageRoot","StorageRoot","Success","SuccessVirtualMachine","WasmVm","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","detail","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","function_to_call","inject_key","inject_value","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_prototype","into_prototype","is_valid","key","key","logs","max_log_level","message","parameter","prototype","public_key","resume","resume_failed","resume_success","run","signature","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","verify_and_resume","virtual_machine","virtual_machine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","logs","Config","Error","ErrorDetail","Finished","LogsTooLong","NextKey","NextKey","PrefixKeys","PrefixKeys","RuntimeHostVm","SignatureVerification","SignatureVerification","StorageGet","StorageGet","Success","SuccessVirtualMachine","TrieEntryVersion","WasmVm","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","detail","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","function_to_call","inject_key","inject_keys_ordered","inject_value","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_prototype","into_prototype","is_valid","key","key","logs","main_trie_root_calculation_cache","main_trie_root_calculation_cache","max_log_level","message","offchain_storage_changes","offchain_storage_changes","parameter","prefix","prototype","public_key","resume_failed","resume_success","run","signature","state_trie_version","storage_main_trie_changes","storage_main_trie_changes","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","verify_and_resume","virtual_machine","virtual_machine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","logs","Found","NextOf","StorageNextKey","TrieDiff","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone_into","default","diff_get","diff_insert","diff_insert_erase","diff_into_iter_unordered","diff_iter_unordered","diff_remove","empty","eq","equivalent","equivalent","fmt","from","from","from_iter","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","merge","merge_map","storage_next_key","storage_prefix_keys_ordered","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BadValueTy","CompileAheadOfTime","CouldntAllocateMemory","ExecHint","ExecOutcome","Finished","ForceWasmi","ForceWasmtime","FunctionNotFound","GlobalValueErr","HeapPages","I32","I32","I64","I64","ImportTypeNotSupported","Interrupted","Invalid","InvalidParameters","InvalidWasm","MemoryIsntMemory","MemoryNotNamedMemory","NewErr","NoMemory","NotAFunction","NotFound","Oneshot","Other","OutOfBoundsError","Poisoned","Prepare","RunErr","Signature","SignatureNotSupported","StartErr","StartFunctionNotSupported","Trap","TwoMemories","UnresolvedFunctionImport","UnsupportedTypeError","Untrusted","ValueType","VirtualMachine","VirtualMachinePrototype","WasmValue","add","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","available_engines","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_wasmtime_if_available","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","global_value","grow_memory","grow_memory","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_i32","into_i64","into_prototype","into_prototype","memory_max_pages","memory_size","memory_size","new","new","new","parameters","partial_cmp","prepare","provide","read_memory","read_memory","return_type","run","start","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_memory","write_memory","id","params","return_value","function","module_name","expected","obtained","grandpa","justification","commit","warp_sync","decode","verify","CommitMessageRef","CompactCommitRef","Error","UnsignedPrecommitRef","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","auth_data","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode_grandpa_commit","decode_partial_grandpa_commit","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","message","precommits","round_number","set_id","target_hash","target_hash","target_number","target_number","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BadAncestry","BadPublicKey","BadSetId","BadSignature","Config","DuplicateSignature","Error","Finished","FinishedUnknown","InProgress","InvalidFormat","IsAuthority","IsAuthority","IsParent","IsParent","NotAuthority","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","authority_public_key","block_hash","block_number","block_number_bytes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit","expected_authorities_set_id","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","num_authorities","randomness_seed","resume","resume","target_block_hash","target_block_number","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","EmptyProof","EmptyProof","Error","InvalidHeader","InvalidJustification","Next","NonMinimalProof","NotFinished","Success","TargetHashMismatch","Verifier","Verify","WarpSyncFragment","WrongChainAlgorithm","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","next","scale_encoded_header","scale_encoded_justification","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","header_hash","justification_target_hash","justification_target_height","chain_information_finality","scale_encoded_header","decode","verify","Error","GrandpaJustification","GrandpaJustificationRef","Precommit","PrecommitRef","PrecommitsRef","PrecommitsRefIter","VotesAncestriesIter","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","authority_public_key","authority_public_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decode_grandpa","decode_partial","decode_partial_grandpa","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","iter","next","next","precommits","precommits","round","round","signature","signature","size_hint","size_hint","target_hash","target_hash","target_hash","target_hash","target_number","target_number","target_number","target_number","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","votes_ancestries","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BadPublicKey","BadSignature","Config","DuplicateSignature","Error","NotAuthority","NotEnoughSignatures","as_any","as_any","as_any_mut","as_any_mut","authorities_list","authorities_set_id","block_number_bytes","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","justification","randomness_seed","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","Aura","AuraAuthoritiesIter","AuraAuthority","AuraAuthorityRef","AuraConsensus","AuraConsensus","AuraConsensusLog","AuraConsensusLogRef","AuraPreDigest","AuraPreDigest","AuraPreDigest","AuraSeal","AuraSeal","AuthoritiesChange","AuthoritiesChange","Babe","BabeAllowedSlots","BabeAuthoritiesIter","BabeAuthority","BabeAuthorityRef","BabeConsensus","BabeConsensus","BabeConsensusLog","BabeConsensusLogRef","BabeNextConfig","BabeNextEpoch","BabeNextEpochRef","BabePreDigest","BabePreDigest","BabePreDigest","BabePreDigestRef","BabePrimaryPreDigest","BabePrimaryPreDigestRef","BabeSeal","BabeSeal","BabeSecondaryPlainPreDigest","BabeSecondaryVRFPreDigest","BabeSecondaryVRFPreDigestRef","BadAuraAuthoritiesListLen","BadAuraConsensusRefType","BadAuraSealLength","BadBabeConsensusRefType","BadBabeNextConfigVersion","BadBabePreDigestRefType","BadBabeSealLength","BlockNumberDecodeError","Digest","DigestItem","DigestItemDecodeError","DigestItemLenDecodeError","DigestItemRef","DigestLenDecodeError","DigestRef","Error","ForcedChange","ForcedChange","GrandpaAuthoritiesIter","GrandpaAuthority","GrandpaAuthorityRef","GrandpaConsensus","GrandpaConsensus","GrandpaConsensusLog","GrandpaConsensusLogDecodeError","GrandpaConsensusLogRef","GrandpaScheduledChange","GrandpaScheduledChangeRef","Header","HeaderRef","LogsIter","MultipleAuraPreRuntimeDigests","MultipleBabeConfigDescriptors","MultipleBabeEpochDescriptors","MultipleBabePreRuntimeDigests","MutipleRuntimeEnvironmentUpdated","NextConfigData","NextConfigData","NextEpochData","NextEpochData","OnDisabled","OnDisabled","OnDisabled","OnDisabled","OnDisabled","OnDisabled","Other","Other","Pause","Pause","PowIdeologicallyNotSupported","Primary","Primary","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVrfSlots","PrimarySlots","PushSealError","Resume","Resume","RuntimeEnvironmentUpdated","RuntimeEnvironmentUpdated","ScheduledChange","ScheduledChange","Seal","SealIsntLastItem","SecondaryPlain","SecondaryPlain","SecondaryVRF","SecondaryVRF","TooLong","TooShort","UnexpectedBabeConfigDescriptor","UnknownConsensus","UnknownConsensus","UnknownDigestLogType","UnknownPreRuntime","UnknownPreRuntime","UnknownSeal","UnknownSeal","allowed_slots","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","aura_pre_runtime","aura_seal","aura_seal","authorities","authorities","authority_index","authority_index","authority_index","authority_index","authority_index","babe_epoch_information","babe_epoch_information","babe_pre_runtime","babe_pre_runtime","babe_seal","babe_seal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode_all","decode_all","decode_all_with_depth_limit","decode_all_with_depth_limit","decode_partial","decode_with_depth_limit","decode_with_depth_limit","delay","delay","digest","digest","empty","encode_to","encode_to","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extrinsics_root","extrinsics_root","extrinsics_root","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","has_any_aura","has_any_babe","has_any_grandpa","has_runtime_environment_updated","has_runtime_environment_updated","hash","hash","hash_from_scale_encoded_header","hash_from_scale_encoded_header_vectored","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_iter","is_aura","is_babe","is_grandpa","is_primary","logs","logs","new","next","next","next","next","next_authorities","next_authorities","number","number","parent_hash","parent_hash","pop_seal","public_key","public_key","public_key","public_key","public_key","public_key","push_aura_seal","push_babe_seal","randomness","randomness","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding","scale_encoding_vec","scale_encoding_vec","size_hint","size_hint","size_hint","size_hint","slot_number","slot_number","slot_number","slot_number","slot_number","slot_number","slot_number","state_root","state_root","to_keyed_vec","to_keyed_vec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vrf_output","vrf_output","vrf_output","vrf_output","vrf_proof","vrf_proof","vrf_proof","vrf_proof","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","weight","weight","weight","engine","engine","engine","opaque","opaque","opaque","engine","engine","engine","opaque","opaque","opaque","change","reset_block_height","change","reset_block_height","keystore","seed_phrase","Aura","AuthorityDiscovery","Babe","BadFormat","Grandpa","ImOnline","Io","KeyLoad","KeyLoadError","KeyNamespace","Keystore","Sign","SignError","SignVrfError","UnknownPublicKey","VrfSignature","WrongKeyAlgorithm","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","generate_ed25519","generate_sr25519","get_hash","hash","insert_sr25519_memory","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","keys","new","proof","sign","sign_sr25519_vrf","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","BadWordsCount","Bip39Decode","Bip39DecodeError","Bip39ToSeedError","DEFAULT_SEED_PHRASE","DeriveJunction","Hard","InvalidFormat","ParsePrivateKeyError","ParsedPrivateKey","Soft","WrongMnemonic","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bip39_to_seed","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","decode_ed25519_private_key","decode_sr25519_private_key","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","parse_private_key","path","seed","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","BytesDisplay","HashDisplay","InformantLine","RelayChain","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_hash","best_number","best_number","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_name","chain_name","enable_colors","finalized_hash","finalized_number","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","max_line_width","network_known_best","num_network_connections","num_peers","relay_chain","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","methods","parse","payment_info","requests_subscriptions","websocket_server","AccountId","Authority","Authority","BestBlockChanged","BestChainBlockIncluded","Block","Broadcast","Broadcasted","ChainHeadBodyEvent","ChainHeadCallEvent","ChainHeadStorageEvent","Connected","Disjoint","Disjoint","Disjoint","DispatchClass","Done","Done","Done","Dropped","Dropped","Error","Error","Error","FinalityTimeout","Finalized","Finalized","Finalized","FollowEvent","Full","Full","Future","HandshakeFinished","HashHexString","Header","HeaderDigest","HexString","InBlock","InSlotAssign","InSlotToOutSlot","InSlotUnassign","Inaccessible","Inaccessible","Inaccessible","Initialized","Invalid","Invalid","Invalid","InvalidLengthPrefix","InvalidParameter","InvalidParameterError","InvalidParametersFormat","JsonRpcParse","LengthMismatch","Light","Light","Mandatory","MaybeRuntimeSpec","Method","MethodCall","MethodError","MissingParameters","NetworkConfig","NetworkEvent","NewBlock","NodeRole","Normal","NumberAsString","Operational","OutSlotAssign","OutSlotUnassign","ParseError","Ready","RemoveMetadataLengthPrefixError","Response","Retracted","RpcMethods","RuntimeDispatchInfo","RuntimeSpec","RuntimeVersion","ServerToClient","ServerToClientResponse","StartConnect","Stop","Stop","StorageChangeSet","SubstreamOutAccept","SubstreamOutOpen","SubstreamOutStop","SystemHealth","SystemPeer","SystemPeerRole","TooManyParameters","TransactionStatus","TransactionWatchEvent","TransactionWatchEventBlock","UnknownMethod","UnknownNotification","Usurped","Valid","Validated","account_nextIndex","account_nextIndex","apis","apis","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_ref","as_slice_of","author_extrinsicUpdate","author_extrinsicUpdate","author_hasKey","author_hasKey","author_hasSessionKeys","author_hasSessionKeys","author_insertKey","author_insertKey","author_pendingExtrinsics","author_pendingExtrinsics","author_removeExtrinsic","author_removeExtrinsic","author_rotateKeys","author_rotateKeys","author_submitAndWatchExtrinsic","author_submitAndWatchExtrinsic","author_submitExtrinsic","author_submitExtrinsic","author_unwatchExtrinsic","author_unwatchExtrinsic","authoring_version","authoring_version","babe_epochAuthorship","babe_epochAuthorship","best_hash","best_number","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_json_call_object_parameters","chainHead_unstable_body","chainHead_unstable_body","chainHead_unstable_bodyEvent","chainHead_unstable_bodyEvent","chainHead_unstable_call","chainHead_unstable_call","chainHead_unstable_callEvent","chainHead_unstable_callEvent","chainHead_unstable_finalizedDatabase","chainHead_unstable_finalizedDatabase","chainHead_unstable_follow","chainHead_unstable_follow","chainHead_unstable_followEvent","chainHead_unstable_followEvent","chainHead_unstable_genesisHash","chainHead_unstable_genesisHash","chainHead_unstable_header","chainHead_unstable_header","chainHead_unstable_stopBody","chainHead_unstable_stopBody","chainHead_unstable_stopCall","chainHead_unstable_stopCall","chainHead_unstable_stopStorage","chainHead_unstable_stopStorage","chainHead_unstable_storage","chainHead_unstable_storage","chainHead_unstable_storageEvent","chainHead_unstable_storageEvent","chainHead_unstable_unfollow","chainHead_unstable_unfollow","chainHead_unstable_unpin","chainHead_unstable_unpin","chainSpec_unstable_chainName","chainSpec_unstable_chainName","chainSpec_unstable_genesisHash","chainSpec_unstable_genesisHash","chainSpec_unstable_properties","chainSpec_unstable_properties","chain_allHead","chain_allHead","chain_finalizedHead","chain_finalizedHead","chain_getBlock","chain_getBlock","chain_getBlockHash","chain_getBlockHash","chain_getFinalizedHead","chain_getFinalizedHead","chain_getHeader","chain_getHeader","chain_newHead","chain_newHead","chain_subscribeAllHeads","chain_subscribeAllHeads","chain_subscribeFinalizedHeads","chain_subscribeFinalizedHeads","chain_subscribeNewHeads","chain_subscribeNewHeads","chain_unsubscribeAllHeads","chain_unsubscribeAllHeads","chain_unsubscribeFinalizedHeads","chain_unsubscribeFinalizedHeads","chain_unsubscribeNewHeads","chain_unsubscribeNewHeads","changes","childstate_getKeys","childstate_getKeys","childstate_getStorage","childstate_getStorage","childstate_getStorageHash","childstate_getStorageHash","childstate_getStorageSize","childstate_getStorageSize","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","digest","encode_hex","encode_hex_upper","eq","equivalent","equivalent","extrinsics","extrinsics_root","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_scale_encoded_header","get_hash","grandpa_roundState","grandpa_roundState","hash","hash","header","impl_name","impl_name","impl_version","impl_version","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_syncing","justifications","logs","max_parallel","method_names","method_names","methods","name","name","network_unstable_event","network_unstable_event","network_unstable_subscribeEvents","network_unstable_subscribeEvents","network_unstable_unsubscribeEvents","network_unstable_unsubscribeEvents","number","offchain_localStorageGet","offchain_localStorageGet","offchain_localStorageSet","offchain_localStorageSet","params_to_json_object","params_to_json_object","parent_hash","parse_json_call","partial_fee","payment_queryInfo","payment_queryInfo","peer_id","peers","remove_metadata_length_prefix","roles","rpc_methods","rpc_methods","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","should_have_peers","spec_name","spec_name","spec_version","spec_version","state_call","state_call","state_getKeys","state_getKeys","state_getKeysPaged","state_getKeysPaged","state_getMetadata","state_getMetadata","state_getPairs","state_getPairs","state_getReadProof","state_getReadProof","state_getRuntimeVersion","state_getRuntimeVersion","state_getStorage","state_getStorage","state_getStorageHash","state_getStorageHash","state_getStorageSize","state_getStorageSize","state_queryStorage","state_queryStorage","state_queryStorageAt","state_queryStorageAt","state_root","state_runtimeVersion","state_runtimeVersion","state_storage","state_storage","state_subscribeRuntimeVersion","state_subscribeRuntimeVersion","state_subscribeStorage","state_subscribeStorage","state_unsubscribeRuntimeVersion","state_unsubscribeRuntimeVersion","state_unsubscribeStorage","state_unsubscribeStorage","state_version","sudo_unstable_p2pDiscover","sudo_unstable_p2pDiscover","sudo_unstable_version","sudo_unstable_version","system_accountNextIndex","system_accountNextIndex","system_addReservedPeer","system_addReservedPeer","system_chain","system_chain","system_chainType","system_chainType","system_dryRun","system_dryRun","system_health","system_health","system_localListenAddresses","system_localListenAddresses","system_localPeerId","system_localPeerId","system_name","system_name","system_networkState","system_networkState","system_nodeRoles","system_nodeRoles","system_peers","system_peers","system_properties","system_properties","system_removeReservedPeer","system_removeReservedPeer","system_version","system_version","timeout_ms","to_json_call_object_parameters","to_json_call_object_parameters","to_json_error","to_json_response","to_json_response","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","total_attempts","transaction_unstable_submitAndWatch","transaction_unstable_submitAndWatch","transaction_unstable_unwatch","transaction_unstable_unwatch","transaction_unstable_watchEvent","transaction_unstable_watchEvent","transaction_version","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","value","error","error","output","error","value","best_block_hash","block_hash","finalized_block_hash","finalized_block_runtime","finalized_blocks_hashes","new_runtime","parent_block_hash","pruned_blocks_hashes","error","spec","account","at","at","call_parameters","child_key","count","extrinsic","follow_subscription","follow_subscription","follow_subscription","follow_subscription","follow_subscription","follow_subscription","function","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","key","key","keys","list","max_size_bytes","multiaddr","name","network_config","network_config","network_config","parameters","prefix","prefix","runtime_updates","start_key","subscription","subscription","subscription","subscription","subscription","subscription","subscription","subscription","subscription","subscription","subscription","transaction","transaction","transaction","actual","error","expected","parameter_index","rpc_method","rpc_method","rpc_method","rpc_method","connection_id","connection_id","connection_id","connection_id","connection_id","multiaddr","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","protocol_name","reason","reason","substream_id","substream_id","substream_id","when","when","when","when","when","when","when","when","when","when","when","when","error","request_id","result","result","result","result","result","result","result","result","result","result","result","result","subscription","subscription","subscription","subscription","subscription","subscription","subscription","subscription","subscription","subscription","subscription","subscription","block","block","broadcasted","error","error","error","num_peers","ApplicationDefined","Call","ErrorResponse","InternalError","InvalidParams","InvalidRequest","MethodNotFound","ParseError","ParseError","ServerError","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_call","build_error_response","build_success_response","fmt","fmt","fmt","fmt","from","from","from","id_json","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","method","params_json","parse_call","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DecodeError","PAYMENT_FEES_FUNCTION_NAME","ParseError","UnknownRuntimeVersion","as_any","as_any_mut","borrow","borrow_mut","decode_payment_info","fmt","fmt","from","into","into_any","into_any_arc","into_any_rc","payment_info_parameters","to_string","try_from","try_into","type_id","vzip","AddClientError","ClientId","ClientId","ClientOrRequestIdRef","Config","ConfirmationSend","LimitReached","LimitReached","MessagesReceiver","RequestId","RequestId","RequestsSubscriptions","StartSubscriptionError","SubscriptionStart","TryQueueClientRequestError","add_client","add_client_mut","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","equivalent","equivalent","executor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","max_clients","max_requests_per_client","max_subscriptions_per_client","new","next","next_request","next_response","partial_cmp","partial_cmp","push_notification","queue_client_request","remove_client","request","respond","run_subscription_task","send","set_max_clients","set_queued_notification","start","start_subscription","subscription_send","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push_notification","try_queue_client_request","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","TasksQueue","as_any","as_any_mut","borrow","borrow_mut","fmt","from","into","into_any","into_any_arc","into_any_rc","new","push","run_one","try_from","try_into","type_id","vzip","Config","ConnectionError","ConnectionId","ConnectionOpen","Event","TextFrame","WsServer","accept","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bind_address","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone_into","close","cmp","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","get_hash","hash","index","index_mut","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","len","local_addr","max_frame_size","new","next_event","partial_cmp","queue_send","reject","send_buffer_len","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","address","connection_id","connection_id","message","user_data","user_data","Multiaddr","PeerId","async_std_connection","collection","connection","multiaddr","multihash","peer_id","peers","read_write","websocket","with_buffers","WithBuffers","advance","as_any","as_any_mut","borrow","borrow_mut","buffers","close","flush_close","fmt","from","into","into_any","into_any_arc","into_any_rc","is_closed","new","process","try_from","try_into","type_id","vzip","CleanShutdown","Config","ConfigNotifications","ConfigRequestResponse","ConfigRequestResponseIn","ConnectionId","ConnectionShutdown","ConnectionShutdown","ConnectionShutdown","ConnectionState","ConnectionToCoordinator","Continue","CoordinatorToConnection","Event","HandshakeError","HandshakeError","HandshakeFinished","HandshakeTimeout","InboundError","InboundError","MultiStreamConnectionTask","MultiStreamHandshakeKind","MultistreamSelectNoiseYamux","Network","NotificationProtocolConfig","NotificationsIn","NotificationsInClose","NotificationsInClosedErr","NotificationsInOpen","NotificationsInOpenCancel","NotificationsOutCloseDemanded","NotificationsOutErr","NotificationsOutReset","NotificationsOutResult","PeerId","PingOutFailed","PingOutSuccess","ProtocolError","QueueFull","QueueNotificationError","ReadWrite","RemoteReset","RequestError","RequestIn","RequestInCancel","RequestTooLarge","Reset","Response","Shutdown","ShutdownCause","SingleStreamConnectionTask","SingleStreamHandshakeKind","StartRequestError","StartShutdown","Substream","Substream","Substream","SubstreamFate","SubstreamId","WebRtc","accept_in_notifications","add_substream","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_out_notifications","cmp","cmp","connection_state","desired_outbound_substreams","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","established","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","handshake_timeout","hash","hash","hash","index","index_mut","inject_connection_message","inject_coordinator_message","inject_coordinator_message","insert_multi_stream","insert_single_stream","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","is_protocol_error","is_reset_called","len","max_handshake_size","max_inbound_substreams","max_notification_size","max_value","max_value","min_value","min_value","new","next_event","noise_key","noise_key","notification_protocols","notification_protocols","open_out_notifications","partial_cmp","partial_cmp","ping_protocol","protocol_name","pull_message_to_connection","pull_message_to_coordinator","pull_message_to_coordinator","queue_notification","randomness_seed","read_write","reject_in_notifications","request_response_protocols","request_response_protocols","reset","reset","reset_substream","respond_in_request","shutting_down","start_request","start_shutdown","substream_read_write","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","id","id","id","id","id","id","id","id","notification","notifications_protocol_index","outcome","peer_id","protocol_index","reason","remote_handshake","request_payload","response","result","substream_id","substream_id","substream_id","substream_id","substream_id","substream_id","substream_id","substream_id","substream_id","substream_id","user_data","was_established","local_tls_certificate_multihash","remote_tls_certificate_multihash","NoiseKey","UnsignedNoiseKey","established","multistream_select","noise","single_stream_handshake","yamux","AddRequestError","Config","ConfigNotifications","ConfigRequestResponse","ConfigRequestResponseIn","ConnectionPrototype","Continue","Empty","Error","Event","InboundError","InboundError","MultiStream","NewOutboundSubstreamsForbidden","Noise","NotificationIn","NotificationsInClose","NotificationsInClosedErr","NotificationsInOpen","NotificationsInOpenCancel","NotificationsOutCloseDemanded","NotificationsOutErr","NotificationsOutReset","NotificationsOutResult","Payload","PingOutFailed","PingOutSuccess","RequestError","RequestIn","RequestTooLarge","Reset","RespondInRequestError","Response","SingleStream","SubstreamFate","SubstreamId","Yamux","accept_in_notifications_substream","accept_in_notifications_substream","add_request","add_request","add_substream","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_notifications_substream","close_notifications_substream","cmp","deny_new_incoming_substreams","desired_outbound_substreams","eq","equivalent","equivalent","first_out_ping","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_hash","hash","inbound_allowed","inbound_config","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_connection","into_noise_state_machine","max_handshake_size","max_inbound_substreams","max_notification_size","max_response_size","max_size","max_value","min_value","name","name","notification_substream_queued_bytes","notification_substream_queued_bytes","notifications_protocols","notifications_substream_user_data_mut","notifications_substream_user_data_mut","open_notifications_substream","open_notifications_substream","partial_cmp","ping_interval","ping_protocol","ping_timeout","pull_event","randomness_seed","read_write","reject_in_notifications_substream","reject_in_notifications_substream","request_protocols","reset_substream","respond_in_request","respond_in_request","substream","substream_read_write","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","webrtc","write_notification_unbounded","write_notification_unbounded","max_size","handshake","id","id","id","id","id","id","id","id","id","notification","outcome","protocol_index","protocol_index","request","response","result","user_data","user_data","Event","HandshakeRecvError","InboundError","InboundError","InboundNegotiated","InboundTy","NegotiationError","NegotiationError","NegotiationError","NotificationIn","Notifications","NotificationsInClose","NotificationsInClosedErr","NotificationsInError","NotificationsInOpen","NotificationsInOpenCancel","NotificationsInUnexpectedEof","NotificationsOutCloseDemanded","NotificationsOutErr","NotificationsOutReset","NotificationsOutResult","Ping","PingOutError","PingOutSuccess","ProtocolError","ProtocolNotAvailable","ProtocolNotAvailable","RefusedHandshake","Request","RequestError","RequestIn","RequestInExpectedEof","RequestInLebError","RespondInRequestError","Response","ResponseLebError","Substream","SubstreamClosed","SubstreamClosed","SubstreamReset","SubstreamReset","SubstreamReset","Timeout","Timeout","accept_in_notifications_substream","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close_notifications_substream","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","ingoing","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_protocol_error","notification_substream_queued_bytes","notifications_out","notifications_substream_user_data_mut","ping_out","queue_ping","read_write","reject_in_notifications_substream","request_out","request_substream_user_data_mut","reset","respond_in_request","set_inbound_ty","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_notification_unbounded","handshake","notification","num_pings","outcome","protocol_index","protocol_index","request","response","result","user_data","user_data","error","protocol_index","protocol_index","max_handshake_size","protocol_index","protocol_index","request_max_size","BadHandshake","Config","Dialer","Error","Frame","Handshake","InProgress","InProgress","InvalidCommand","Listener","Ls","LsResponse","MessageOut","Negotiation","NotAvailable","ProtocolNa","ProtocolOk","ProtocolRequest","ReadClosed","Success","UnexpectedProtocolRequestAnswer","WriteClosed","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_write_protocol_data","clone","clone","clone","clone_into","clone_into","clone_into","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bytes","new","new","read_write","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_out","requested_protocol","supported_protocols","Cipher","CipherError","Config","HandshakeError","HandshakeInProgress","InProgress","InvalidKey","Noise","NoiseHandshake","NoiseKey","PROTOCOL_NAME","PayloadDecode","PayloadDecodeError","ReadClosed","SignatureVerificationFailed","Success","UnexpectedPayload","UnsignedNoiseKey","WriteClosed","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consume_inbound_data","decoded_inbound_data","encrypt","encrypt_size_conv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","inject_inbound_data","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_initiator","is_initiator","key","libp2p_public_ed25519_key","new","new","new","payload_to_sign","payload_to_sign_as_vec","prologue","random","read_write","sign","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","cipher","remote_peer_id","EncryptionMultistreamSelect","Handshake","HandshakeError","Healthy","HealthyHandshake","MultiplexingMultistreamSelect","NoEncryptionProtocol","NoMultiplexingProtocol","Noise","NoiseHandshake","NoiseKeyRequired","NoiseKeyRequired","Success","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","noise_yamux","noise_yamux","read_write","resume","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","connection","remote_peer_id","ClosedGracefully","Config","CreditsExceeded","DataFrame","DataWithRst","DeadSubstreamTy","Error","ExtractOut","GoAway","GoAwayErrorCode","HeaderDecode","IncomingDataDetail","IncomingDataOutcome","IncomingSubstream","InternalError","LocalCreditsOverflow","NormalTermination","PROTOCOL_NAME","PingResponse","PingResponseNotMatching","ProtocolError","Reset","StreamClosed","StreamReset","SubstreamId","SubstreamMut","SubstreamRef","UnexpectedSyn","WriteAfterFin","Yamux","accept_pending_substream","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_read","can_receive","can_receive","can_send","can_send","capacity","clone","clone","clone","clone_into","clone_into","clone_into","close","cmp","dead_substreams","detail","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract_out","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","goaway_queued_or_sent","goaway_sent","hash","id","id","incoming_data","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_user_data","into_user_data","is_empty","is_initiator","len","max_value","min_value","new","next","num_inbound","open_substream","partial_cmp","queue_ping","queued_bytes","queued_bytes","randomness_seed","received_goaway","reject_pending_substream","remove_dead_substream","reserve_window","reset","send_goaway","substream_by_id","substream_by_id_mut","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","user_data","user_data_mut","user_datas","user_datas_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","yamux","code","reset_substreams","start_offset","substream_id","substream_id","substream_id","Certhash","Dns","Dns4","Dns6","DnsAddr","DomainNameRef","FromVecError","InvalidBase64","InvalidDomainName","InvalidIp","InvalidMemoryPayload","InvalidMultiaddr","InvalidMultibase","InvalidMultihash","InvalidPort","Ip4","Ip6","Memory","Multiaddr","NotBase58","P2p","ParseError","ProtocolRef","Quic","Tcp","Tls","Udp","UnexpectedEof","UnrecognizedProtocol","WebRtcDirect","Ws","Wss","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_byte_slice","as_bytes","as_ref","as_ref","as_slice_of","as_slice_of","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","empty","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","from_str","from_str_parts","get_hash","get_hash","hash","hash","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","iter","partial_cmp","partial_cmp","pop","push","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","DecodeError","FromBytesError","MultihashRef","as_any","as_any","as_any_mut","as_any_mut","as_bytes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","data","fmt","fmt","fmt","fmt","from","from","from_bytes","from_bytes_partial","hash_algorithm_code","identity","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","to_string","to_string","to_vec","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BadEd25519Key","Bs58","Bs58DecodeError","DecodeError","Ed25519","FromBytesError","FromProtobufEncodingError","InvalidMultihashAlgorithm","InvalidPublicKey","NotPeerId","ParseError","PeerId","ProtobufDecodeError","PublicKey","SignatureVerifyFailed","UnknownAlgorithm","UnsupportedAlgorithm","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_bytes","as_ref","as_slice_of","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_protobuf_encoding","from_public_key","from_str","get_hash","hash","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bytes","into_peer_id","partial_cmp","to_base58","to_owned","to_owned","to_protobuf_encoding","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Config","ConfigRequestResponse","ConfigRequestResponseIn","Connection","Connection","ConnectionId","ConnectionState","ConnectionToCoordinator","CoordinatorToConnection","Desired","DesiredReset","DesiredState","DuplicateNotificationsSubstream","Established","Event","HandshakeFinished","InNotificationAcceptError","InRequestId","InboundError","InboundError","IngoingHandshake","MultiStreamConnectionTask","MultiStreamHandshakeKind","NotDesired","NotificationProtocolConfig","NotificationsIn","NotificationsInClose","NotificationsInClosedErr","NotificationsInOpen","NotificationsInOpenCancel","NotificationsOutClose","NotificationsOutErr","NotificationsOutResult","Obsolete","Open","OpenOrPending","OutPingTimeout","OutRequestId","OutgoingHandshake","Peers","Pending","QueueFull","QueueNotificationError","ReadWrite","RequestError","RequestIn","RequestInCancel","Response","Shutdown","ShutdownCause","ShutdownPeer","SingleStreamConnectionTask","SingleStreamHandshakeKind","StartRequestError","StartShutdown","SubstreamId","add_multi_stream_incoming_connection","add_multi_stream_outgoing_connection","add_single_stream_incoming_connection","add_single_stream_outgoing_connection","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_notification","can_queue_notification","can_start_requests","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_out_notification","cmp","cmp","connection_state","connections_capacity","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","established","established_peer_connections","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","fulfilled_undesired_outbound_substreams","get_hash","get_hash","handshake_timeout","handshaking_peer_connections","hash","hash","in_notification_accept","in_notification_refuse","index","index_mut","inject_connection_message","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","max_inbound_substreams","new","next_event","noise_key","noise_key","notification_protocols","notification_protocols","num_outgoing_substreams","open_out_notification","opened_out_notifications","outbound","partial_cmp","partial_cmp","peers_capacity","peers_list","ping_protocol","pull_message_to_connection","queue_notification","randomness_seed","request_response_protocols","request_response_protocols","respond_in_request","set_peer_desired","set_peer_notifications_out_desired","shutting_down","start_request","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfulfilled_desired_outbound_substream","unfulfilled_desired_peers","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","connection_id","connection_id","connection_id","connection_id","connection_id","error","expected_peer_id","handshake","id","id","id","notification","notifications_protocol_index","notifications_protocol_index","notifications_protocol_index","notifications_protocol_index","notifications_protocol_index","num_healthy_peer_connections","outcome","peer","peer","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","protocol_index","reason","request_id","request_id","request_payload","response","result","user_data","notifications_protocol_index","expected_peer_id","num_healthy_peer_connections","peer_id","IncomingBytes","ReadWrite","advance_read","advance_write","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","close_write_if_empty","discard_all_incoming","from","from","incoming_buffer","incoming_buffer_available","incoming_bytes_iter","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_iter","is_dead","next","now","outgoing_buffer","outgoing_buffer_available","read_bytes","read_bytes","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wake_up_after","wake_up_after","write_from_vec_deque","write_out","written_bytes","Config","Connection","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","from","from","host","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","poll_close","poll_flush","poll_read","poll_write","tcp_socket","try_from","try_from","try_into","try_into","type_id","type_id","url","vzip","vzip","websocket_client_handshake","kademlia","protocol","service","Kademlia","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","kbuckets","new","try_from","try_into","type_id","vzip","Connected","Disconnected","Entry","Full","Full","InsertError","KBuckets","LocalKey","LocalKey","Occupied","OccupiedEntry","OrInsertError","PeerState","Vacant","VacantEntry","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","closest_entries","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get_mut","get_mut","insert","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_occupied","iter_mut_ordered","iter_ordered","local_key","new","or_insert","set_state","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Ascending","Authority","BadMultiaddr","BadPeerId","BadResponseTy","BadResponseTy","BlockAnnounceRef","BlockAnnouncesHandshakeDecodeError","BlockAnnouncesHandshakeRef","BlockData","BlocksRequestConfig","BlocksRequestConfigStart","BlocksRequestDirection","BlocksRequestFields","BodyDecodeError","CallProof","CallProofRequestConfig","CatchUp","CatchUpRef","CatchUpRequest","CatchUpRequest","ChildTrieDefault","Commit","CommitMessageRef","DecodeBlockAnnounceError","DecodeBlockRequestError","DecodeBlockResponseError","DecodeFindNodeResponseError","DecodeGrandpaNotificationError","DecodeGrandpaWarpSyncResponseError","DecodeIdentifyResponseError","DecodeStateResponseError","DecodeStorageCallProofResponseError","Descending","Full","GrandpaNotificationRef","GrandpaWarpSyncResponse","GrandpaWarpSyncResponseFragment","Hash","IdentifyResponse","InvalidBlockHashLength","InvalidBlockNumber","InvalidDirection","InvalidHashLength","InvalidJustifications","InvalidMultiaddr","InvalidPublicKey","Light","MainTrie","MessageRef","MissingStartBlock","Neighbor","NeighborPacket","Number","Precommit","Prevote","PrevoteRef","PrimaryPropose","PrimaryProposeRef","ProofDecodeError","ProtobufDecode","ProtobufDecode","ProtobufDecode","ProtobufDecode","ProtobufDecode","ProtobufDecode","ProtobufDecodeError","Role","StateRequest","StateRequestStart","StorageOrCallProof","StorageProof","StorageProofRequestConfig","UnknownFieldBits","UnsignedPrecommitRef","UnsignedPrevoteRef","Vote","VoteMessageRef","ZeroBlocksRequested","agent_version","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","authority_public_key","authority_public_key","base_hash","base_number","best_hash","best_number","block_hash","block_hash","block_hash","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_block_request","build_block_response","build_call_proof_request","build_find_node_request","build_identify_response","build_state_request","build_storage_proof_request","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit_finalized_height","decode_block_announce","decode_block_announces_handshake","decode_block_request","decode_block_response","decode_find_node_response","decode_grandpa_notification","decode_grandpa_warp_sync_response","decode_identify_response","decode_state_response","decode_storage_or_call_proof_response","desired_count","direction","ed25519_public_key","encode_block_announce","encode_block_announces_handshake","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragments","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","genesis_hash","get_hash","get_hash","hash","hash","hash","header","header","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_best","is_finished","justifications","justifications","keys","listen_addrs","message","method","observed_addr","parameter_vectored","precommits","prevotes","protocol_version","protocols","role","round_number","round_number","round_number","round_number","scale_encoded_header","scale_encoded_header","scale_encoded_justification","scale_encoding","scale_encoding","scale_encoding","set_id","set_id","set_id","set_id","signature","signature","start","start_key","target_hash","target_hash","target_hash","target_number","target_number","target_number","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","child_trie","key","BadBlockAnnounce","BadBlockAnnouncesHandshake","BadBlocksRequest","BadGrandpaNotification","BadIdentifyRequest","BlockAnnounce","Blocks","BlocksRequestError","BlocksRequestIn","BlocksRequestResponseEntryError","CallProof","CallProofRequestError","ChainConfig","ChainConnectAttemptFailed","ChainConnected","ChainDisconnected","ChainNetwork","Config","Connected","ConnectionId","ConnectionToCoordinator","CoordinatorToConnection","Decode","Decode","Decode","Decode","Decode","DecodeError","Disconnected","DiscoveryError","EmptyResponse","EncodedBlockAnnounce","EncodedBlockAnnounceHandshake","EncodedGrandpaCommitMessage","EncodedGrandpaWarpSyncResponse","EncodedMerkleProof","EncodedStateResponse","Entry","Event","FindNode","GenesisMismatch","GrandpaCommitMessage","GrandpaNeighborPacket","GrandpaState","GrandpaWarpSync","GrandpaWarpSyncRequestError","IdentifyRequestIn","InRequestId","Inbound","InboundError","InboundError","InboundSlotAssigned","InvalidExtrinsicsRoot","InvalidHash","InvalidHeader","InvalidStart","KademliaDiscoveryResult","KademliaFindNode","KademliaFindNodeError","KademliaOperationId","MissingField","MultiStreamConnectionTask","MultiStreamHandshakeKind","NoPeer","NotVerifiable","NotificationsOutErr","OutRequestId","Outbound","PendingId","ProtocolError","ProtocolError","ReadWrite","RemoteCouldntAnswer","RemoteCouldntAnswer","Request","Request","Request","Request","Request","RequestFailed","RequestInCancel","RequestResult","RequestResult","SingleStreamConnectionTask","SingleStreamHandshakeKind","SlotTy","StartConnect","StartRequestError","State","StateRequestError","StorageProof","StorageProofRequestError","Substream","add_multi_stream_incoming_connection","add_single_stream_incoming_connection","allow_inbound_block_requests","announce_transaction","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_encoded","as_encoded","assign_out_slot","best_hash","best_number","block_number_bytes","block_number_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_send_block_announces","can_start_requests","chains","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","commit_finalized_height","connections_capacity","decode","decode","decode","decode","decode","decode","discover","discovered_nodes","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expected_peer_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork_id","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","genesis_hash","get_hash","get_hash","get_hash","grandpa_protocol_config","handshake_timeout","hash","hash","hash","id","in_slots","inject_connection_message","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_encoded","is_network_problem","max_addresses_per_peer","multiaddr","new","next_event","next_start_connect","noise_key","noise_key","now","num_chains","num_established_connections","num_peers","opened_transactions_substream","out_slots","partial_cmp","partial_cmp","partial_cmp","peers_capacity","peers_list","pending_outcome_err","pending_outcome_ok_multi_stream","pending_outcome_ok_single_stream","pull_message_to_connection","randomness_seed","respond_blocks","respond_identify","role","round_number","send_block_announce","set_id","set_local_best_block","set_local_grandpa_state","slots_to_assign","start_blocks_request","start_blocks_request_unchecked","start_call_proof_request","start_grandpa_warp_sync_request","start_kademlia_discovery_round","start_kademlia_find_node","start_state_request","start_storage_proof_request","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unassign_slot","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","index","calculated","in_header","announce","best_hash","best_number","chain_index","chain_index","chain_index","chain_index","chain_index","chain_index","chain_index","chain_index","chain_indices","config","error","error","message","operation_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","peer_id","request_id","request_id","request_id","request_id","response","result","role","slot_ty","state","unassigned_slot_ty","unassigned_slot_ty","local_genesis","remote_genesis","all","all_forks","optimistic","para","warp_sync","AllAlreadyInChain","AllSync","AllSync","AlreadyFinalized","AlreadyInChain","Block","BlockAnnounceOutcome","BlockFull","BlockRequestSuccessBlock","BlockStorage","BlockVerification","BlockVerificationError","BlocksRequest","BlocksRequest","Config","ConfigFull","ConsensusMismatch","DesiredRequest","Discarded","Discarded","Error","Error","FinalityProofVerify","FinalityProofVerifyOutcome","FinalizedStorageGet","FinalizedStorageNextKey","FinalizedStoragePrefixKeys","GrandpaCommitError","GrandpaCommitMessageOutcome","GrandpaCommitPending","GrandpaWarpSync","GrandpaWarpSync","GrandpaWarpSyncResponseFragment","HeaderBodyError","HeaderBodyVerify","HeaderError","HeaderVerify","HeaderVerify","HeaderVerifyError","HeaderVerifyOutcome","InvalidHeader","InvalidHeader","JustificationError","NewFinalized","NotFinalizedChain","NotFinalizedChain","Outdated","ProcessOne","Queued","Queued","RequestDetail","RequestId","ResponseOutcome","RuntimeCallMerkleProof","RuntimeCallMerkleProof","RuntimeCompilation","RuntimeCompilation","SourceId","Status","StorageGet","StorageGet","StorageGetMerkleProof","StorageNextKey","StoragePrefixKeys","StoredForLater","Success","Success","Sync","TooOld","TrieEntryVersion","UnknownConsensusEngine","VerificationFailed","VerifyBodyHeader","VerifyFinalityProof","VerifyHeader","VerifyWarpSyncFragment","WarpSyncChainInformation","WarpSyncError","WarpSyncFinished","WarpSyncFragment","WarpSyncFragmentError","WarpSyncFragmentVerify","WarpSyncFragments","add_request","add_source","allow_unknown_consensus_engines","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_chain_information","best_block_consensus","best_block_hash","best_block_header","best_block_number","best_block_storage","block_announce","block_number_bytes","block_number_bytes","blocks_capacity","blocks_request_response","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","call_proof_response","chain_information","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","desired_requests","download_ahead_blocks","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finalized_block_header","finalized_runtime","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","full","full","get","get_hash","get_hash","grandpa_commit_message","grandpa_warp_sync_response_err","grandpa_warp_sync_response_ok","hash","hash","hash","hash","header","height","height","index","index_mut","inject_key","inject_keys_ordered","inject_value","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_near_head_of_chain_heuristic","justifications","key","key","knows_non_finalized_block","max_disjoint_headers","max_requests_per_block","new","non_finalized_blocks_ancestry_order","non_finalized_blocks_unordered","num_blocks_clamp","num_blocks_clamp","obsolete_requests","offchain_storage_changes","partial_cmp","partial_cmp","perform","perform","perform","prefix","prefix_keys_ordered","process_one","proof_sender","remove_source","runtime","scale_encoded_extrinsics","scale_encoded_header","scale_encoded_header","scale_encoded_header","scale_encoded_justification","scale_encoded_justifications","source_best_block","source_knows_non_finalized_block","source_num_ongoing_requests","sources","sources_capacity","start","state_trie_version","status","storage_get_response","storage_main_trie_changes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_add_known_block_to_source","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_num_blocks_clamp","with_num_blocks_clamp","announce_block_height","finalized_block_height","error","is_new_best","sync","sync","user_data","ascending","block_hash","block_hash","first_block_hash","first_block_height","function_name","keys","num_blocks","parameter_vectored","request_bodies","request_headers","request_justification","state_trie_root","sync_start_block_hash","finalized_blocks","updates_best_block","error","is_new_best","sync","sync","user_data","error","finalized_block_runtime","finalized_storage_code","finalized_storage_heap_pages","sync","sync","ascending","block_hash","block_hash","first_block_hash","first_block_height","function_name","keys","num_blocks","parameter_vectored","request_bodies","request_headers","request_justification","sync_start_block_hash","discarded_unverified_block_headers","finalized_block_hash","finalized_block_hash","finalized_block_number","finalized_block_number","source","source","AddBlock","AddBlockOccupied","AddBlockVacant","AddSource","AddSourceKnown","AddSourceOldBlock","AddSourceUnknown","AllForksSync","AllSync","AlreadyFinalized","AlreadyInChain","AlreadyInChain","AlreadyPending","AncestrySearchResponseError","AnnouncedBlockKnown","AnnouncedBlockUnknown","BestBlockAlreadyVerified","BestBlockPendingVerification","BlockAnnounceOutcome","BlockBodyVerify","Config","ConsensusMismatch","Error","FinalityProofVerify","FinalityProofVerify","FinalityProofVerifyOutcome","FinishAncestrySearch","GrandpaCommitError","GrandpaCommitMessageOutcome","GrandpaCommitPending","HeaderVerify","HeaderVerify","HeaderVerifyError","HeaderVerifyOutcome","InvalidHeader","InvalidHeader","JustificationError","Known","NewFinalized","NotFinalizedChain","OldBestBlock","ParseError","ProcessOne","Queued","RequestId","RequestParams","SourceId","Success","TooOld","TooOld","UnexpectedBlock","Unknown","UnknownBestBlock","UnknownBlock","UnknownConsensusEngine","VerificationFailed","add_block","add_known_block_to_source","add_request","add_source","add_source","add_source_and_insert_block","allow_unknown_consensus_engines","ancestry_search_failed","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_chain_information","best_block_hash","best_block_header","best_block_number","block_announce","block_number_bytes","block_number_bytes","block_user_data","block_user_data_mut","blocks_capacity","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","cancel","cancel","cancel","chain_information","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","desired_requests","eq","eq","equivalent","equivalent","equivalent","equivalent","finalized_block_header","finish","finish_ancestry_search","first_block_hash","first_block_height","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","full","get_hash","get_hash","grandpa_commit_message","hash","hash","hash","height","index","index_mut","insert","insert_and_update_source","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","knows_non_finalized_block","max_disjoint_headers","max_requests_per_block","new","non_finalized_blocks_ancestry_order","non_finalized_blocks_unordered","num_blocks","obsolete_requests","partial_cmp","partial_cmp","perform","perform","prepare_add_source","process_one","remove_source","replace","source_best_block","source_knows_non_finalized_block","source_num_ongoing_requests","sources","sources","sources_capacity","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_source_and_block","user_data_mut","user_data_mut","user_data_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","discarded_unverified_block_headers","announce_block_height","finalized_block_height","finalized_blocks","updates_best_block","error","is_new_best","sync","sync","sync","AllForksSources","SourceId","add_known_block","add_known_block_and_set_best","add_source","as_any","as_any","as_any_mut","as_any_mut","best_block","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","contains","eq","equivalent","equivalent","finalized_block_height","fmt","fmt","from","from","get_hash","hash","index","index_mut","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_empty","keys","knows_non_finalized_block","len","new","num_blocks","partial_cmp","remove","remove_known_block","set_finalized_block_height","source_knows_non_finalized_block","source_remove_known_block","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_data_iter_mut","vzip","vzip","Block","BlockFull","BlockStorage","BlockVerification","BlockVerify","Config","ConfigFull","Disassemble","DisassembleSource","Finalized","FinalizedStorageGet","FinalizedStorageNextKey","FinalizedStoragePrefixKeys","FinishRequestOutcome","HeaderBodyError","HeaderError","Idle","InvalidHeader","JustificationVerification","JustificationVerify","NewBest","NonCanonical","Obsolete","OptimisticSync","ProcessOne","Queued","RequestDetail","RequestId","RequestSuccessBlock","RequestsDrain","Reset","Reset","ResetCause","RuntimeCompilation","RuntimeCompilation","SourceId","StorageGet","StorageNextKey","StoragePrefixKeys","TrieEntryVersion","VerifyBlock","VerifyJustification","add_source","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_chain_information","best_block_consensus","best_block_hash","best_block_header","best_block_number","best_block_number","best_block_storage","block_height","block_number_bytes","block_number_bytes","blocks_capacity","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","chain_information","chain_information","clone","clone","clone_into","clone_into","cmp","cmp","desired_requests","disassemble","download_ahead_blocks","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","finalized_block_header","finalized_runtime","finish_request_failed","finish_request_success","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","full","full","get","get_hash","get_hash","hash","hash","hash","header","height","id","index","index_mut","inject_key","inject_keys_ordered","inject_value","insert_request","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","is_full_verification","justifications","key","key","max_value","min_value","multiunzip","new","next","non_finalized_blocks_ancestry_order","non_finalized_blocks_unordered","num_blocks","obsolete_requests","offchain_storage_changes","partial_cmp","partial_cmp","perform","prefix","prefix_keys_ordered","process_one","raise_source_best_block","remove_source","requests","runtime","scale_encoded_extrinsics","scale_encoded_header","scale_encoded_header","scale_encoded_justifications","size_hint","source_best_block","source_id","source_num_ongoing_requests","sources","sources","sources_capacity","start","state_trie_version","storage_main_trie_changes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","user_data","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","new_best_hash","new_best_number","previous_best_height","reason","sync","sync","error","finalized_blocks","previous_best_height","sync","Error","Free","Included","OccupiedCoreAssumption","PERSISTED_VALIDATION_FUNCTION_NAME","PersistedValidationDataRef","TimedOut","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode_persisted_validation_data_return_value","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","get_hash","hash","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","max_pov_size","parent_head","persisted_validation_data_parameters","relay_parent_number","relay_parent_storage_root","scale_encoded","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BuildChainInformation","BuildChainInformation","BuildRuntime","BuildRuntime","ChainInformation","ChainInformationBuild","Config","DesiredRequest","Error","Finished","FragmentError","Fragments","Idle","InProgress","InProgressWarpSync","InvalidHeapPages","InvalidMerkleProof","MerkleProofEntriesMissing","MissingCode","NextKeyUnimplemented","NotGrandpa","ProcessOne","RequestDetail","RequestId","RuntimeBuild","RuntimeCallMerkleProof","RuntimeCallMerkleProof","SourceId","Status","StorageGetMerkleProof","StorageGetMerkleProof","Success","UnknownConsensus","VerifyWarpSyncFragment","VerifyWarpSyncFragment","WarpSync","WarpSyncFragment","WarpSyncInitError","WarpSyncRequest","WarpSyncRequest","add_request","add_source","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_chain_information","block_number_bytes","block_number_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","chain_information","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","desired_requests","eq","eq","equivalent","equivalent","equivalent","equivalent","fail_request","finalized_runtime","finalized_storage_code","finalized_storage_heap_pages","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","hash","hash","in_progress_requests","index","index_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","partial_cmp","partial_cmp","process_one","proof_sender","remove_source","requests_capacity","runtime_call_merkle_proof_success","sources","sources","sources_capacity","start_chain_information","start_warp_sync","status","storage_get_success","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warp_sync_request_success","block_hash","block_hash","block_hash","function_name","keys","parameter_vectored","state_trie_root","block_hash","block_hash","block_hash","function_name","keys","parameter_vectored","finalized_block_hash","finalized_block_hash","finalized_block_number","finalized_block_number","source","source","light_pool","pool","validate","Config","LightPool","PruneBodyFinalized","RemovedTransaction","SetBestBlock","TransactionId","add_block","add_unvalidated","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_block_hash","block_hash","block_user_data","block_user_data_mut","blocks_capacity","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","eq","eq","equivalent","equivalent","equivalent","equivalent","finalized_block_hash","find_transaction","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_hash","has_block","hash","id","included_transactions","included_transactions","index_in_block","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invalid_transactions_best_block","invalid_transactions_finalized_block","is_included_best_chain","is_valid_against_best_block","missing_block_bodies","new","num_transactions","oldest_block_finality_lag","partial_cmp","prune_finalized_with_body","remove_transaction","retracted_transactions","scale_encoding","scale_encoding","set_best_block","set_block_body","set_finalized_block","set_validation_result","to_owned","to_owned","to_owned","transaction_user_data","transaction_user_data_mut","transactions_capacity","transactions_iter","transactions_iter_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unvalidated_transactions","user_data","user_data","vzip","vzip","vzip","vzip","vzip","vzip","AppendBlock","AppendBlockTransaction","Config","NonIncludedUpdated","Pool","TransactionId","Unknown","Vacant","add_unvalidated","append_block","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","best_block_height","block_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clone","clone_into","cmp","eq","equivalent","equivalent","finalized_block_height","find","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_hash","hash","included_block_height","inclusion_order","insert","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_empty","iter","iter_mut","len","new","partial_cmp","remove","remove_included","retract_blocks","scale_encoding","set_validation_result","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unvalidated_transactions","user_data","user_data_mut","vzip","vzip","vzip","vzip","vzip","vzip","id","user_data","AncientBirthBlock","BadMandatory","BadProof","Call","CannotLookup","Config","Custom","Custom","DecodeError","EmptyProvidedTags","Error","ExhaustsResources","External","Finished","Future","InBlock","Invalid","InvalidHeader","InvalidTransaction","Local","MandatoryDispatch","NextKey","NextKey","NoUnsignedValidator","OutputDecodeError","Payment","PrefixKeys","PrefixKeys","Query","Stale","StorageGet","StorageGet","TransactionSource","TransactionValidityError","TrieEntryVersion","Unknown","UnknownApiVersion","UnknownTransaction","VALIDATION_FUNCTION_NAME","ValidTransaction","WasmStart","WasmVmReadOnly","WasmVmReadWrite","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_number_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode_validate_transaction_return_value","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","inject_key","inject_keys_ordered","inject_value","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_prototype","key","key","longevity","max_log_level","prefix","priority","propagate","provides","requires","runtime","scale_encoded_header","scale_encoded_transaction","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_transaction","validate_transaction_runtime_parameters_v2","validate_transaction_runtime_parameters_v3","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","result","virtual_machine","BytesToNibbles","Nibble","NibbleFromU8Error","TooLarge","TrieEntryVersion","V0","V1","all_nibbles","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes_to_nibbles","calculate_root","clone","clone","clone_into","clone_into","empty_trie_merkle_value","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","get_hash","hash","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_iter","next","nibbles_to_bytes_suffix_extend","ordered_root","prefix_proof","proof_decode","proof_encode","size_hint","to_owned","to_owned","to_string","trie_node","trie_root","trie_structure","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AllKeys","AllKeys","CalculationCache","Finished","RootMerkleValueCalculation","StorageValue","StorageValue","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","empty","fmt","from","from","from","from","inject","inject","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","prefix_remove_update","root_merkle_value","storage_value_update","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","cache","hash","Config","Error","InProgress","InvalidProof","MissingProofEntry","PrefixScan","ResumeOutcome","Success","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","prefix","prefix_scan","requested_keys","resume","to_owned","to_string","trie_root_hash","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","keys","AbsentFromProof","Child","Children","Config","DecodedTrieProof","DuplicateProofEntry","Error","HashKnownValueMissing","InProof","InvalidFormat","InvalidNodeValue","Known","NoChild","None","ProofEntry","StorageValue","TrieNodeInfo","TrieRootNotFound","UnexpectedHashedNode","UnusedProofEntry","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child","children","children","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode_and_verify_proof","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","has_child","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","iter_ordered","iter_runtime_context_ordered","node_value","proof","storage_value","storage_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trie_node_info","trie_node_info","trie_root_hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unhashed_storage_value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","child_key","inline","value","Nibble","ProofBuilder","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","build","build_to_vec","clone","clone_into","cmp","default","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","get_hash","hash","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","make_coherent","missing_node_values","new","partial_cmp","set_node_value","to_owned","trie_root_hash","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_nodes_capacity","ChildLenDecode","ChildTooLarge","ChildrenBitmapTooShort","ChildrenTooShort","Decoded","DecodedPartialKey","Empty","EmptyTrieWithPartialKey","EncodeError","Error","Hashed","InvalidHeaderBits","InvalidPartialKeyPadding","MerkleValueOutput","None","PartialKeyButNoChildrenNoStorageValue","PartialKeyLenOverflow","PartialKeyLenTooShort","PartialKeyTooShort","StorageValue","StorageValueLenDecode","StorageValueTooShort","TooLong","Unhashed","ZeroChildrenBitmap","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_ref","as_slice_of","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_merkle_value","children","children_bitmap","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","encode","encode_hex","encode_hex_upper","encode_to_vec","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes_skip_first","get_hash","hash","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","next","partial_key","size_hint","storage_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Branch","BranchAlsoRemoved","BranchNodeAccess","Entry","NodeAccess","NodeIndex","Occupied","One","PrepareInsert","PrepareInsertOne","PrepareInsertTwo","Remove","SingleRemoveChild","SingleRemoveNoChild","Storage","StorageNodeAccess","StorageToBranch","TrieNowEmpty","TrieStructure","Two","Vacant","Vacant","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch_node_key","capacity","child","child","child","child_user_data","child_user_data","child_user_data","clone","clone","clone_into","clone_into","default","eq","equivalent","equivalent","existing_node","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","full_key","full_key","full_key","get_hash","has_storage_value","hash","insert","insert","insert","insert_storage_value","insert_storage_value","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_child","into_child","into_child","into_first_child","into_first_child","into_first_child","into_next_sibling","into_next_sibling","into_next_sibling","into_occupied","into_parent","into_parent","into_parent","into_storage","into_vacant","is_empty","is_root_node","is_root_node","is_root_node","iter_unordered","len","new","node","node_by_index","node_full_key_by_index","node_index","node_index","node_index","parent","parent","parent","partial_key","partial_key","partial_key","remove","remove_prefix","root_node","root_user_data","shrink_to_fit","structure_equal","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","user_data","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","branch_user_data","child","parent","sibling","storage_user_data","user_data","user_data","user_data","aura","babe","header_body","header_only","inherents","BadPublicKey","BadSignature","EmptyAuthorities","MissingPreRuntimeDigest","MissingSeal","ParentIsntAuraConsensus","SlotNumberNotIncreasing","TooFarInFuture","VerifyConfig","VerifyError","VerifySuccess","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","authorities_change","block_number_bytes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current_authorities","fmt","fmt","fmt","from","from","from","header","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","now_from_unix_epoch","parent_block_header","slot_duration","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_header","vzip","vzip","vzip","BadSecondarySlotAuthor","BadSignature","BadVrfProof","ForbiddenSlotType","InvalidAuthorityIndex","InvalidBabeParametersChange","MissingEpochChangeLog","MissingPreRuntimeDigest","MissingSeal","OverPrimaryClaimThreshold","ParentIsntBabeConsensus","SlotNumberNotIncreasing","UnexpectedEpochChangeLog","VerifyConfig","VerifyError","VerifySuccess","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block_number_bytes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","epoch_transition_target","fmt","fmt","fmt","from","from","from","header","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","now_from_unix_epoch","parent_block_epoch","parent_block_header","parent_block_next_epoch","slot_number","slots_per_epoch","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_header","vzip","vzip","vzip","Aura","Aura","AuraVerification","Babe","Babe","BabeVerification","CheckInherentsError","CheckInherentsOutputParseFailure","CodeKeyErased","Config","ConfigConsensus","Error","Finished","HeapPagesOnlyModification","HeapPagesParseError","MultipleConsensusEngines","NewRuntimeCompilationError","NonEmptyOutput","RuntimeCompilation","RuntimeCompilation","StorageGet","StorageGet","StorageNextKey","StorageNextKey","StoragePrefixKeys","StoragePrefixKeys","Success","SuccessConsensus","TrieEntryVersion","UnknownConsensusEngine","Verify","WasmStart","WasmVm","allow_unknown_consensus_engines","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_body","block_header","block_number_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","consensus","consensus","fmt","fmt","from","from","from","from","from","from","from","from","from","from","inject_key","inject_keys_ordered","inject_value","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","key","logs","main_trie_root_calculation_cache","main_trie_root_calculation_cache","max_log_level","new_runtime","now_from_unix_epoch","offchain_storage_changes","parent_block_header","parent_runtime","parent_runtime","prefix","state_trie_version","storage_main_trie_changes","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","current_authorities","parent_block_epoch","parent_block_next_epoch","slot_duration","slots_per_epoch","engine","errors","authorities_change","epoch_transition_target","slot_number","Aura","Aura","AuraVerification","Babe","Babe","BabeVerification","BadParentHash","Config","ConfigConsensus","ConfigFinality","Error","FinalityEngineMismatch","Grandpa","GrandpaChangesOverlap","MultipleConsensusEngines","NonSequentialBlockNumber","Outsourced","Success","UnknownConsensusEngine","allow_unknown_consensus_engines","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_header","block_number_bytes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","consensus","finality","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","parent_block_header","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","current_authorities","now_from_unix_epoch","now_from_unix_epoch","parent_block_epoch","parent_block_next_epoch","slot_duration","slots_per_epoch","engine","authorities_change","epoch_transition_target","slot_number","InherentData","as_any","as_any_mut","as_raw_list","borrow","borrow_mut","fmt","from","into","into_any","into_any_arc","into_any_rc","timestamp","try_from","try_into","type_id","vzip"],"q":["smoldot","","","","","","","","","","","","","","","","","smoldot::author","","","smoldot::author::aura","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::author::build","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::author::build::BuilderAuthoring","","smoldot::author::build::ConfigConsensus","","","","smoldot::author::runtimesmoldot::author::runtime::BlockBuild","","smoldot::author::runtime::DispatchError","","smoldot::author::runtime::Error","","","","smoldot::chain","","","","smoldot::chain::async_treesmoldot::chain::async_tree::NextNecessaryAsyncOp","smoldot::chain::async_tree::OutputUpdate","","","","","","","smoldot::chain::blocks_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::chain::blocks_tree::BodyVerifyStep1","","smoldot::chain::blocks_tree::BodyVerifyStep2","","","","","","","","","","smoldot::chain::blocks_tree::CommitVerifyError","smoldot::chain::blocks_tree::FinalityVerifyError","","","","","smoldot::chain::blocks_tree::HeaderVerifyError","smoldot::chain::blocks_tree::HeaderVerifySuccess","","","smoldot::chain::chain_informationsmoldot::chain::chain_information::ChainInformationConsensus","","","","","smoldot::chain::chain_information::ChainInformationConsensusRef","","","","","smoldot::chain::chain_information::ChainInformationFinality","","","smoldot::chain::chain_information::ChainInformationFinalityRef","","","smoldot::chain::chain_information::build","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::chain::chain_information::build::ChainInformationBuild","","smoldot::chain::chain_information::build::ConfigFinalizedBlockHeader","","","smoldot::chain::chain_information::build::Error","","","","smoldot::chain::fork_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::chain_spec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::chain_spec::Bootnode","","smoldot::database","","smoldot::database::finalized_serialize","","","","","","","","","","","","","","","","","","","","smoldot::database::full_sqlitesmoldot::executor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::executor::hostsmoldot::executor::host::Error","","","","","","","","","","","","","","","","","","","smoldot::executor::host::HostVm","","","","smoldot::executor::host::StorageKey","","","smoldot::executor::host::Trie","smoldot::executor::host::runtime_versionsmoldot::executor::read_only_runtime_hostsmoldot::executor::read_only_runtime_host::ErrorDetail","","smoldot::executor::runtime_hostsmoldot::executor::runtime_host::ErrorDetail","","smoldot::executor::storage_diff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::executor::vmsmoldot::executor::vm::ExecOutcome","","","smoldot::executor::vm::NewErr","","smoldot::executor::vm::RunErr","","smoldot::finality","","smoldot::finality::grandpa","","smoldot::finality::grandpa::commit","","smoldot::finality::grandpa::commit::decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::finality::grandpa::commit::verify","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::finality::grandpa::warp_sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::finality::grandpa::warp_sync::Error","","","smoldot::finality::grandpa::warp_sync::Next","","smoldot::finality::justification","","smoldot::finality::justification::decodesmoldot::finality::justification::verify","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::headersmoldot::header::DigestItem","","","","","","smoldot::header::DigestItemRef","","","","","","smoldot::header::GrandpaConsensusLog","","smoldot::header::GrandpaConsensusLogRef","","smoldot::identity","","smoldot::identity::keystore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::identity::seed_phrase","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::informant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc","","","","","smoldot::json_rpc::methods","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::methods::ChainHeadBodyEvent","smoldot::json_rpc::methods::ChainHeadCallEvent","","","smoldot::json_rpc::methods::ChainHeadStorageEvent","","smoldot::json_rpc::methods::FollowEvent","","","","","","","","smoldot::json_rpc::methods::MaybeRuntimeSpec","","smoldot::json_rpc::methods::MethodCall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::methods::MethodError","","","","","","","","smoldot::json_rpc::methods::NetworkEvent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::methods::ParseError","","smoldot::json_rpc::methods::ServerToClient","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::methods::TransactionWatchEvent","","","","","","","smoldot::json_rpc::parse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::payment_info","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::requests_subscriptionssmoldot::json_rpc::requests_subscriptions::executor","","","","","","","","","","","","","","","","","","smoldot::json_rpc::websocket_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::json_rpc::websocket_server::Event","","","","","","smoldot::libp2p","","","","","","","","","","","smoldot::libp2p::async_std_connection","smoldot::libp2p::async_std_connection::with_buffers","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::collectionsmoldot::libp2p::collection::Event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::collection::MultiStreamHandshakeKind","","smoldot::libp2p::connection","","","","","","","smoldot::libp2p::connection::establishedsmoldot::libp2p::connection::established::ConfigRequestResponseIn","smoldot::libp2p::connection::established::Event","","","","","","","","","","","","","","","","","","","smoldot::libp2p::connection::established::substreamsmoldot::libp2p::connection::established::substream::Event","","","","","","","","","","","smoldot::libp2p::connection::established::substream::InboundError","","","smoldot::libp2p::connection::established::substream::InboundTy","","","","smoldot::libp2p::connection::multistream_select","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::connection::multistream_select::Config","","smoldot::libp2p::connection::noise","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::connection::noise::NoiseHandshake","","smoldot::libp2p::connection::single_stream_handshake","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::connection::single_stream_handshake::Handshake","","smoldot::libp2p::connection::yamuxsmoldot::libp2p::connection::yamux::IncomingDataDetail","","","","","","smoldot::libp2p::multiaddrsmoldot::libp2p::multihash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::peer_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::peerssmoldot::libp2p::peers::Event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::peers::InboundError","smoldot::libp2p::peers::ShutdownPeer","","","smoldot::libp2p::read_write","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::libp2p::websocket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::network","","","smoldot::network::kademlia","","","","","","","","","","","","","","","","","smoldot::network::kademlia::kbuckets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::network::protocolsmoldot::network::protocol::StateRequestStart","","smoldot::network::servicesmoldot::network::service::BlocksRequestError","","smoldot::network::service::BlocksRequestResponseEntryError","","smoldot::network::service::Event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::network::service::NotificationsOutErr","","smoldot::sync","","","","","smoldot::sync::allsmoldot::sync::all::BlockAnnounceOutcome","","smoldot::sync::all::BlockVerification","","","","","smoldot::sync::all::DesiredRequest","","","","","","","","","","","","","","smoldot::sync::all::FinalityProofVerifyOutcome","","smoldot::sync::all::HeaderVerifyOutcome","","","","","smoldot::sync::all::ProcessOne","","","","","","smoldot::sync::all::RequestDetail","","","","","","","","","","","","","smoldot::sync::all::ResponseOutcome","smoldot::sync::all::Status","","","","","","smoldot::sync::all_forkssmoldot::sync::all_forks::AncestrySearchResponseError","smoldot::sync::all_forks::BlockAnnounceOutcome","","smoldot::sync::all_forks::FinalityProofVerifyOutcome","","smoldot::sync::all_forks::HeaderVerifyOutcome","","","","smoldot::sync::all_forks::ProcessOne","smoldot::sync::all_forks::sources","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::sync::optimisticsmoldot::sync::optimistic::BlockVerification","","","","","","smoldot::sync::optimistic::JustificationVerification","","","smoldot::sync::optimistic::ProcessOne","smoldot::sync::para","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::sync::warp_syncsmoldot::sync::warp_sync::DesiredRequest","","","","","","","smoldot::sync::warp_sync::RequestDetail","","","","","","smoldot::sync::warp_sync::Status","","","","","","smoldot::transactions","","","smoldot::transactions::light_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::transactions::pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::transactions::pool::AppendBlockTransaction","","smoldot::transactions::validatesmoldot::transactions::validate::Query","","smoldot::trie","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::calculate_root","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::calculate_root::RootMerkleValueCalculation","","smoldot::trie::prefix_proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::prefix_proof::ResumeOutcome","smoldot::trie::proof_decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::proof_decode::Child","smoldot::trie::proof_decode::StorageValue","","smoldot::trie::proof_encode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::trie_node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::trie::trie_structuresmoldot::trie::trie_structure::Remove","","","","","","","","smoldot::verify","","","","","smoldot::verify::aura","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::verify::babe","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::verify::header_bodysmoldot::verify::header_body::ConfigConsensus","","","","","smoldot::verify::header_body::Error","","smoldot::verify::header_body::SuccessConsensus","","","smoldot::verify::header_only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot::verify::header_only::ConfigConsensus","","","","","","","smoldot::verify::header_only::Error","smoldot::verify::header_only::Success","","","smoldot::verify::inherents","","","","","","","","","","","","","","","",""],"d":["","Data structures describing a chain of blocks.","Substrate chain configuration.","Persistent data storage.","WebAssembly runtime code execution.","Finality consists is declaring a block as irreversible. It …","Parsing SCALE-encoded header.","Substrate-based chains make frequent use of asynchronous …","Information string printed out.","JSON-RPC servers. Trusted access to the blockchain.","Low-level peer-to-peer networking.","","","Syncing, short for synchronizing, consists in …","Transactions handling.","Radix-16 Merkle-Patricia trie.","Methods that verify whether a block is correct.","","","Block generation system.","Configuration for <code>next_slot_claim</code>.","Slot happening now or in the future and that can be …","","","","","","","","","","","List of the Aura authorities allowed to produce a block. …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Iterator to the list of Sr25519 public keys available …","Index within <code>Config::local_authorities</code> of the authority …","Calculates the earliest one of the authorities in …","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Duration, in milliseconds, of an Aura slot.","UNIX time when the slot ends. Always superior to the value …","Slot number of the claim. Used when building the block.","UNIX time when the slot starts. Can be inferior to the …","","","","","","","","","","More transactions can be added.","Block building is ready to accept extrinsics.","Result of the previous call to …","Chain is using the Aura consensus algorithm.","Ready to start producing blocks.","Configuration to pass when the actual block authoring is …","Current state of the block building process.","Current state of the block building process.","Configuration for a block generation.","Extension to <code>Config</code>.","Error that can happen during the block production.","Error happened during the generation.","None of the authorities available locally are allowed to …","Runtime has generated an invalid block header.","Fetching the key that follows a given one in the parent …","Fetching the key that follows a given one in the parent …","Fetching the list of keys with a given prefix from the …","Fetching the list of keys with a given prefix from the …","Block production is ready to start.","Error while producing the block in the runtime.","Block has been produced and must now be sealed.","Block has been produced by the runtime and must now be …","Loading a storage value from the parent storage is …","Loading a storage value from the parent storage is …","","Block production is idle, waiting for a slot.","Block production is idle, waiting for a slot.","Adds a SCALE-encoded extrinsic and resumes execution.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the index within the list of authorities of the …","Capacity to reserve for the number of extrinsics. Should …","Number of bytes used to encode block numbers in the header.","","","","","","","","","","","","","","","","","","","","","","","","","","","Consensus-specific configuration.","Indicate that no more extrinsics will be added, and resume …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the Sr25519 signature of the hash of the …","Injects the corresponding storage value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Optional cache corresponding to the storage trie root hash …","Maximum log level of the runtime.","Initializes a new builder.","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Hash of the parent of the block to generate.","Height of the parent of the block to generate.","Runtime used to check the new block. Must be built using …","Returns the prefix whose keys to load.","Returns the SCALE-encoded header whose hash must be signed.","Returns when the authoring slot ends, as a UNIX timestamp …","Returns when the authoring slot start, as a UNIX timestamp …","Start producing the block.","Start the block production.","Returns the data to sign. This is the hash of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns when block production can begin, as a UNIX …","Result of the previous call to …","Object to use to continue trying to push other …","List of the Aura authorities allowed to produce a block. …","Iterator to the list of Sr25519 public keys available …","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Duration, in milliseconds, of an Aura slot.","The transaction birth block is ancient.","More transactions can be added.","Block building is ready to accept extrinsics.","Result of the previous call to …","Chain uses the Aura consensus algorithm.","Chain uses the Babe consensus algorithm.","Error while parsing output of <code>BlockBuilder_apply_extrinsic</code>.","Error while parsing output of …","An extrinsic with a Mandatory dispatch resulted in Error. …","A bad origin.","General error to do with the transaction’s proofs (e.g. …","Current state of the block building process.","Overflow when incrementing block height.","The call of the transaction is not expected.","Could not lookup some information that is required to …","Failed to lookup some data.","Configuration for a block generation.","Extra configuration depending on the consensus algorithm.","Any other custom invalid validity that is not covered by …","Any other custom unknown validity that is not covered by …","Reason why a dispatch call failed.","Error that can happen during the block production.","The transaction would exhaust the resources of current …","Block generation is over.","General error to do with the transaction not yet being …","Applying an inherent extrinsic has returned a <code>DispatchError</code>…","Applying an inherent extrinsic has returned a …","The list of inherent extrinsics are needed in order to …","The inherent extrinsics are required in order to continue.","<code>Core_initialize_block</code> has returned a non-empty output.","The transaction is invalid.","An invalid transaction validity.","A transaction with a mandatory dispatch. This is invalid; …","A custom error in a module.","Fetching the key that follows a given one in the parent …","Fetching the key that follows a given one in the parent …","No validator found for the given unsigned transaction.","General error to do with the inability to pay some fees …","Fetching the list of keys with a given prefix from the …","Fetching the list of keys with a given prefix from the …","General error to do with the transaction being outdated …","Loading a storage value from the parent storage is …","Loading a storage value from the parent storage is …","Block successfully verified.","Errors that can occur while checking the validity of a …","","Transaction validity can’t be determined.","An unknown transaction validity.","Error while initializing the Wasm virtual machine.","Error while executing the Wasm virtual machine.","Adds a SCALE-encoded extrinsic and resumes execution.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Capacity to reserve for the number of extrinsics. Should …","Number of bytes used to encode block numbers in the header.","Body of the produced block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start a block building process.","","","","","","","","","Consensus-specific item to put in the digest of the header …","","","","","","","","","","","","","Indicate that no more extrinsics will be added, and resume …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Injects the inherents extrinsics and resumes execution.","Injects the key.","Injects the list of keys ordered lexicographically.","Injects a raw list of inherents and resumes execution.","Injects the corresponding storage value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Concatenation of all the log messages printed by the …","Optional cache corresponding to the storage trie root hash …","Cache used for calculating the main trie root of the new …","Maximum log level of the runtime.","List of changes to the off-chain storage that this block …","Hash of the parent of the block to generate.","Height of the parent of the block to generate.","Runtime used to check the new block. Must be built using …","Runtime that was passed by <code>Config</code>.","Returns the prefix whose keys to load.","SCALE-encoded header of the produced block.","State trie version indicated by the runtime. All the …","List of changes to the storage main trie that the block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Result of the previous call to …","Object to use to continue trying to push other …","Module specific error value.","Module index, matching the metadata module index.","Error returned by the runtime.","Error returned by the runtime.","Extrinsic that triggered the problem.","Extrinsic that triggered the problem.","Data structure containing trees of nodes.","Finalized block header, plus tree of authenticated …","Data structures containing the finalized state of the …","Data structure containing trees of nodes.","Identifier for an asynchronous operation in the <code>AsyncTree</code>.","Information about an operation that must be started.","","The output best block has been modified.","A new block has been added to the list of output …","Configuration for <code>AsyncTree::new</code>.","A non-finalized block has been finalized in the output.","See <code>AsyncTree::input_iter_unordered</code> and …","","","","See <code>AsyncTree::try_advance_output</code>.","See <code>OutputUpdate</code>.","","Returns the ancestors of the given node. The iterator …","","","","","","","","","","","","","","","","","Returns the blocks targeted by this asynchronous operation.","Injects into the state of the state machine a failed …","Injects into the state of the data structure a completed …","User data of the asynchronous operation of this block.","User data associated to the <code>async</code> operation of this block.","Returns the <code>NodeIndex</code> of the current “output” best …","Returns the asynchronous operation user data associated to …","Returns the asynchronous operation user data associated to …","Index of the block to perform the operation against.","Returns the user data associated to the given block.","User data of the block to perform the operation against.","Returns the user data associated to the given block.","Number of elements to initially allocate to store blocks.","","","","","","","","","","","","","","","","","Returns the list of children that have the given node as …","","","","","","","","","","","","","","","","","","","","","","Returns the outcome of the asynchronous operation for the …","Outcome of the asynchronous operation of the finalized …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Identifier to later provide when calling …","Index of the block.","Index of the node within the data structure.","Updates the state machine to take into account that the …","Inserts a new block in the state machine.","Returns the list of all non-finalized blocks that have …","Returns the list of all non-finalized blocks that have …","Updates the state machine to take into account that the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","True if this block is considered as the best block of the …","Whether this block is considered as the best block of the …","Replaces all asynchronous operation user data with new …","Returns a new empty <code>AsyncTree</code>.","Examines the state of <code>self</code> and, if a block’s …","Returns the number of non-finalized blocks.","Returns the parent of the given node. Returns <code>None</code> if the …","","After an asynchronous operation fails, retry after this …","","","","","Tries to update the output blocks to follow the input.","","","","","","","","","","","","","","","","","","","","","","","","","User data associated to this block that was passed to …","User data associated to this block.","","","","","","","","","","User data associated to the <code>async</code> operation of this block.","Index of the best block after the finalization. <code>None</code> if …","Index of the best block after the finalization. <code>None</code> if …","User data associated to the <code>async</code> operation of the …","Index of the node within the data structure. This index is …","Blocks that were a descendant of the former finalized …","User data associated to this block.","The parent of the block isn’t known.","The parent of the block isn’t known.","The target block height is strictly inferior to the …","Access to a block’s information and hierarchy.","Holds the <code>NonFinalizedTree</code> and allows insert a …","Error while verifying a block body.","Verification is pending. In order to continue, a …","Block verification, either just finished or still in …","Block verification, either just finished or still in …","Error that can happen when verifying a Grandpa commit.","Configuration for the <code>NonFinalizedTree</code>.","Error during the consensus-related check.","Block uses a different consensus than the rest of the …","Block uses a different consensus than the rest of the …","Block is already known.","Block is already known.","The target block height is the same as the finalized …","The target block height and hash are the same as the block …","Verification has failed. The block is invalid.","Returned by <code>NonFinalizedTree::verify_justification</code> and …","Error while verifying the finality in the context of the …","Error while verifying the finality in the context of the …","Error that can happen when verifying a proof of finality.","Verification is over.","Mutably borrows the <code>NonFinalizedTree</code> and allows insert a …","Error that can happen when verifying a block header.","","Block wasn’t known and is ready to be inserted.","Error while decoding the commit.","Error while decoding the header.","Error while decoding the header.","Error while decoding the justification.","Type of the justification doesn’t match the finality …","Error that can happen when verifying a justification.","Holds state about the current state of the chain for the …","Not enough blocks are known by the tree to verify this …","Chain doesn’t use the GrandPa algorithm.","Verification is pending. In order to continue, a …","A new runtime must be compiled.","A new runtime must be compiled.","Iterator producing the newly-finalized blocks removed from …","Error that can happen when setting the finalized block.","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","Fetching the list of keys with a given prefix is required …","Fetching the list of keys with a given prefix is required …","There exists a block in-between the latest finalized block …","","Block must have been passed to …","Block can’t be verified as it uses an unknown consensus …","Block can’t be verified as it uses an unknown consensus …","Finality proof targets a block that isn’t in the chain.","The justification verification has failed. The …","The commit verification has failed. The commit is invalid …","The block verification has failed. The block is invalid …","Abort the verification and return the unmodified tree.","Destroys the object without inserting the block in the …","If <code>false</code>, blocks containing digest items with an unknown …","Applies the justification, finalizing the given block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>chain_information::ChainInformationRef</code> struct …","Returns consensus information about the current best block …","Returns the hash of the best block.","Returns the header of the best block.","Returns the value that was initially passed in …","Number of bytes used when encoding/decoding the block …","Returns the user data of the block about to be justified.","Pre-allocated size of the chain, in number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs the runtime compilation.","Information about the latest finalized block and its …","","Removes all non-finalized blocks from the tree.","","","Returns true if the block with the given hash is in the …","","","Returns a list of blocks (by their height and hash) that …","Returns the hash of the latest finalized block.","Returns the header of the latest finalized block.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the block header about to be inserted.","Returns the header of the block about to be inserted.","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","Inserts the block with the given user data.","Inserts the block with the given user data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Destroys the object without inserting the block in the …","","","Returns true if the block to be finalized is the current …","Returns true if there isn’t any non-finalized block in …","Returns the header of all known non-finalized blocks in …","Returns the header of all known non-finalized blocks in …","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Returns the number of non-finalized blocks in the chain.","","","","","","","","","","","","","","Initializes a new queue.","","","","","","Gives access to a block stored by the <code>NonFinalizedTree</code>, …","Gives access to the user data of a block stored by the …","Access to the Nth ancestor’s information and hierarchy. …","Access to the Nth ancestor’s information and hierarchy. …","Access to the Nth ancestor’s information and hierarchy. …","Access to the Nth ancestor’s information and hierarchy. …","Returns the number of non-finalized blocks in the tree …","Returns the number of non-finalized blocks in the tree …","Returns the number of non-finalized blocks in the tree …","Returns the number of non-finalized blocks in the tree …","Access to the parent block’s information and hierarchy. …","Access to the parent block’s information and hierarchy. …","Returns the prefix whose keys to load.","Reserves additional capacity for at least <code>additional</code> new …","Resume the verification process by passing the requested …","Sets the latest known finalized block. Trying to verify a …","Shrink the capacity of the chain as much as possible.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the finalization process modifies the best …","","Verifies the given block.","Verifies the given Grandpa commit message.","Verifies the given block.","Verifies the given justification.","","","","","","","","","","","","","","","","","","","","","","","Hash of the parent block in question.","Chain yielded back.","Error that happened during the verification.","Use to insert the block in the chain.","Cache of calculation for the storage trie of the best …","Contains <code>Some</code> if and only if …","List of changes to the off-chain storage that this block …","Value that was passed to <code>BodyVerifyRuntimeRequired::resume</code>.","Value that was passed to <code>BodyVerifyRuntimeRequired::resume</code>.","State trie version indicated by the runtime. All the …","List of changes to the storage main trie that the block …","Block number that the commit targets.","Hash of the block that isn’t in the chain.","Number of the block that isn’t in the chain.","Number of the block to finalize first.","Hash of the block contained in the justification.","Number of the block contained in the justification.","Hash of the parent block in question.","Height of the verified block.","Use this struct to insert the block in the chain after its …","True if the verified block will become the new “best” …","Chain is using the Aura consensus engine.","Chain is using the Aura consensus engine.","Chain is using the Babe consensus engine.","Chain is using the Babe consensus engine.","Information about a Babe epoch.","Information about a Babe epoch.","Error when checking the validity of a Babe epoch.","Information about the latest finalized block and state …","Extra items that depend on the consensus engine.","Extra items that depend on the consensus engine.","Extra items that depend on the finality engine.","Extra items that depend on the finality engine.","Equivalent to a <code>ChainInformation</code> but referencing an …","The finalized block is block number 0, but the GrandPa …","Chain uses the Grandpa finality algorithm.","See equivalent variant in <code>ChainInformationFinality</code>.","Error in a Babe epoch information.","Babe constant should be a fraction where the numerator is …","Missing Babe slot start number for Babe epoch number other …","Finalized block is not number 0, but no Babe epoch …","Next Babe epoch number does not immediately follow current …","Blocks themselves don’t contain any information …","See equivalent variant in <code>ChainInformationFinality</code>.","Scheduled GrandPa authorities change is before finalized …","Finalized block is block number 0, and a Babe epoch …","Found a Babe slot start number for future Babe epoch …","Any node on the chain is allowed to produce blocks.","See <code>ChainInformationConsensus::Unknown</code>.","Information about the latest finalized block and state …","Information about the latest finalized block and state …","Error when turning a <code>ChainInformation</code> into a …","Types of blocks allowed for this epoch.","See equivalent field in <code>BabeEpochInformation</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Gives access to the information.","Gives access to the information.","List of authorities allowed to author blocks during this …","See equivalent field in <code>BabeEpochInformation</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Build the chain information of a chain given its runtime.","Value of the constant that allows determining the chances …","See equivalent field in <code>BabeEpochInformation</code>.","","","","","","","","","","","","","","","","","","","","","Extra items that depend on the consensus engine.","Extra items that depend on the consensus engine.","Index of the epoch.","See equivalent field in <code>BabeEpochInformation</code>.","Extra items that depend on the finality engine.","Extra items that depend on the finality engine.","Header of the highest known finalized block.","See equivalent field in <code>ChainInformation</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Randomness value for this epoch.","See equivalent field in <code>BabeEpochInformation</code>.","Slot at which the epoch starts.","See equivalent field in <code>BabeEpochInformation</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether the fields in this struct make sense.","Checks whether the information is coherent.","Checks whether the fields in this struct make sense.","","","","","","","","","","","","","List of authorities that must validate children of the …","Babe epoch information about the epoch the finalized block …","Babe epoch information about the epoch right after the one …","Duration, in milliseconds, of an Aura slot.","Number of slots per epoch. Configured at the genesis block …","See equivalent field in <code>ChainInformationConsensus</code>.","See equivalent field in <code>ChainInformationConsensus</code>.","See equivalent field in <code>ChainInformationConsensus</code>.","See equivalent field in <code>ChainInformationConsensus</code>.","See equivalent field in <code>ChainInformationConsensus</code>.","Grandpa authorities set ID of the block right after …","Change in the GrandPa authorities list that has been …","List of GrandPa authorities that need to finalize the …","See equivalent field in <code>ChainInformationFinality</code>.","See equivalent field in <code>ChainInformationFinality</code>.","See equivalent field in <code>ChainInformationFinality</code>.","","","Failed to decode the output of the <code>AuraApi_authorities</code> …","Failed to decode the output of the <code>AuraApi_slot_duration</code> …","","","","Failed to decode the output of the <code>BabeApi_configuration</code> …","Failed to decode the output of the <code>BabeApi_current_epoch</code> …","Failed to decode the output of the <code>BabeApi_next_epoch</code> …","Current state of the operation.","Configuration to provide to <code>ChainInformationBuild::new</code>.","See <code>Config::finalized_block_header</code>.","Problem encountered during the chain building process.","Fetching the chain information is over.","The block is the genesis block of the chain.","","","Failed to decode the output of the <code>GrandpaApi_authorities</code> …","Failed to decode the output of the …","Chain information building is still in progress.","Still in progress.","The combination of the information retrieved from the …","Multiple consensus algorithms have been detected.","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","The block is not the genesis block of the chain.","Function call to perform or being performed.","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Error while starting the Wasm virtual machine.","Error while running the Wasm virtual machine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the runtime call currently being made.","Returns the runtime call currently being made.","Returns the runtime call currently being made.","","","","","","Header of the finalized block, whose chain information is …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Name of the runtime function corresponding to this call.","","","Injects the key.","Injects the corresponding storage value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Starts a new chain information build process.","Returns the list of parameters to pass when making the …","Returns the list of parameters to pass when making the …","Returns the list of runtime calls that will be performed. …","Runtime of the finalized block. Must be built using the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The result of the computation.","Value of <code>Config::runtime</code> passed back.","Header of the block.","Can be used to pass information about the finality of the …","Hash of the root of the state trie of the genesis.","","","","","Tree of nodes. Each node contains a value of type <code>T</code>.","Index of a node within a <code>ForkTree</code>. Never invalidated …","Iterator of elements removed when pruning ancestors.","Node removed by <code>ForkTree::prune_ancestors</code>.","Returns the ancestors of the given node. The iterator is …","","","","","","","","","Returns two iterators: the first iterator enumerates the …","","","","","","","","","Returns the list of children that have the given node as …","Removes all elements in the tree, leaving it empty.","","","","Returns the common ancestor between <code>node1</code> and <code>node2</code>, if …","","","","","","Finds the first node in the tree that matches the given …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value of the node with the given index.","Returns the value of the node with the given index.","Former index of the node. This index is no longer valid.","Inserts a new node in the tree.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns true if <code>maybe_ancestor</code> is an ancestor of …","Returns true if there isn’t any element in the tree.","True if this node is an ancestor of the target of the …","Returns an iterator to all the node values. The returned …","Returns an iterator to all the node values without any …","Returns the number of elements in the tree.","Modifies all the block user datas and returns a new map.","Initializes a new <code>ForkTree</code>.","","Enumerates all the nodes, starting from the the given …","Returns the parent of the given node. Returns <code>None</code> if the …","","Removes from the tree:","Removes from the tree any node that isn’t either an …","Reserves additional capacity for at least <code>additional</code> new …","Same as <code>ForkTree::node_to_root_path</code>, but gives the path in …","Shrink the capacity of the tree as much as possible.","","","","","","","","","","","","","","","Value that was passed to <code>ForkTree::insert</code>.","","","","","Initializes a new <code>ForkTree</code> with a certain pre-allocated …","See <code>ChainSpec::boot_nodes</code>.","Error while building the chain information.","A configuration of a chain. Can be used to build a genesis …","Error when building the chain information from the genesis …","See <code>ChainSpec::genesis_storage</code>.","See <code>GenesisStorage</code>.","Failed to decode heap pages from the storage.","The items of the genesis storage are known.","","Error that can happen when parsing a chain spec JSON.","The address of the bootnode is valid.","Runtime couldn’t be found in the storage.","The items of the genesis storage are unknown, but we know …","Chain specification doesn’t contain the list of storage …","The address of the bootnode couldn’t be parsed.","Error when initializing the virtual machine.","","","","","","","","","","","","","","","","Builds the <code>ChainInformation</code> corresponding to the genesis …","Returns a list of hashes of block headers that should …","Returns the number of bytes that the “block number” …","Returns the list of bootnode addresses found in the chain …","","","","","","","","","","","","","","","Returns a string indicating the type of chain.","","","","","","","","","","","","","Returns the “fork id” of the chain. This is arbitrary …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Parse JSON content into a <code>ChainSpec</code>.","Gives access to what is known about the storage of the …","Returns true if the chain is of a type for which a live …","Returns the identifier of the chain. Similar to the name, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns <code>Some</code> for <code>GenesisStorage::Items</code>, and <code>None</code> otherwise.","Returns <code>Some</code> for <code>GenesisStorage::TrieRootHash</code>, and <code>None</code> …","Returns the list of storage keys and values of the genesis …","","Returns the name of the chain. Meant to be displayed to …","Returns a list of arbitrary properties contained in the …","Returns the network protocol id that uniquely identifies a …","","Returns the list of libp2p multiaddresses of the default …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the genesis storage value for a specific key.","","","","","","","","String representation of the multiaddress that can be used …","Bytes representation of the libp2p peer id of the bootnode.","Serializing/deserializing a …","Filesystem-backed database containing all the information …","Opaque error indicating a corruption in the data stored in …","","","","","Deserializes the information about the chain.","Serializes the given chain information as a JSON string.","Serializes the given chain information and finalized block …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Error accessing the database.","Error accessing the database.","Error accessing the database.","Error while accessing some information.","Error when decoding the header to import.","The header of a block in the database has failed to decode.","The parent of a block in the database couldn’t be found …","Configuration for the database.","Type of database.","Multiple different consensus algorithms are mixed within …","Database could be accessed, but its content is invalid.","Error in the content of the database.","An open database. Holds file descriptors.","Either existing database or database prototype.","Store the database on disk. Path to the directory …","Block was already in the database.","Either a database has just been created, or there existed …","Error while accessing the storage of the finalized block.","Block isn’t a descendant of the latest finalized block.","Error while calling <code>SqliteFullDatabase::insert</code>.","","Low-level database error, such as an error while accessing …","The information about a Babe epoch found in the database …","A block hash is expected to be 32 bytes. This isn’t the …","Values in the database are all well-formatted, but are …","Finalized block number stored in the database doesn’t …","Block numbers are expected to be 64 bits.","The version information about a storage entry has failed …","Store the database in memory. The database is discarded on …","Some parts of the database refer to a block by its hash, …","Missing a key in the <code>meta</code> table.","Parent of the block to insert isn’t in the database.","Block hash passed as parameter is no longer the finalized …","A database already existed and has now been opened.","New finalized block must be a child of the previous …","Error while calling <code>SqliteFullDatabase::set_finalized</code>.","An open database. Holds file descriptors.","New finalized block isn’t in the database.","","","","","","","","","","","","","","","","","","","","","","","Returns the hash of the block in the database whose …","Returns the list of extrinsics of the given block, or <code>None</code> …","Returns the hashes of the blocks given a block number.","Number of bytes used to encode the block number.","Returns the SCALE-encoded header of the given block, or …","","","","","","","","","","","","","","","","","","","","","","","","Returns the hash of the finalized block in the database.","Returns all the keys and values in the storage of the …","Returns the value associated to a key in the storage of …","Returns the list of keys of the storage of the finalized …","Returns the key in the storage of the finalized block that …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Inserts the given <code>chain_information::ChainInformationRef</code> …","Insert a new block in the database.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opens the database using the given <code>Config</code>.","Changes the finalized block to the given one.","Returns a <code>chain_information::ChainInformation</code> struct …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of database.","","","","","","","","","","","","","","","","","","","","","","","","","","Default number of heap pages if the storage doesn’t …","Error potentially returned by <code>storage_heap_pages_to_value</code>.","Number of heap pages is too large.","Storage value has the wrong length.","","","","","","","","","Returns the argument unchanged.","Wasm virtual machine specific to the Substrate/Polkadot …","Calls <code>U::from(self)</code>.","","","","Wasm virtual machine, with automatic storage overlay and …","Wasm virtual machine, with automatic storage overlay and …","“Diff” between a trie and the next.","Converts a value of the key <code>:heappages</code> found in the …","","","","","","General-purpose WebAssembly virtual machine.","","Error in the format of the runtime code.","A non-<code>i64</code> value has been returned by the Wasm entry point.","Must provide the runtime version obtained by calling the …","Need to call <code>Core_version</code> on the given Wasm code and …","","","Configuration for <code>HostVmPrototype::new</code>.","","Error while calling <code>Core_version</code> to determine the runtime …","","","The size of the input data is too large.","Declares the end of a transaction.","Ends a storage transaction. All changes made to the …","Reason why the Wasm blob isn’t conforming to the runtime …","The Wasm blob did something that doesn’t conform to the …","Must set the value of the off-chain storage.","Must the set value of an off-chain storage entry.","Must load a storage value, treat it as if it was a …","See documentation of <code>ExternalStorageAppend</code>.","Must remove from the storage keys which start with a …","Must remove all the storage values starting with a certain …","Must provide the value of a storage entry.","Must load an storage value.","Must provide the child trie that follows, in lexicographic …","Need to provide the first child trie or the child trie …","Must provide the storage key that follows, in …","Need to provide the storage key that follows a specific …","Must provide the trie root hash of the storage.","Need to provide the trie root of the storage.","Must set the value of a storage entry.","Must set an storage value.","Function execution has succeeded. Contains the return …","Function execution has succeeded. Contains the return …","Execution has finished while a transaction started with …","Called <code>ext_allocator_free_version_1</code> with an invalid …","Queries the maximum log level.","Need to provide the maximum log level.","Couldn’t find the <code>__heap_base</code> symbol in the Wasm code.","","The host function isn’t implemented.","Running virtual machine.","Prototype for an <code>HostVm</code>.","The data is zstandard-compressed, but the data is in an …","Report about a log entry being emitted.","Runtime has emitted a log entry.","","","Maximum size of the Wasm memory found in the module is too …","Error possibly returned when decoding a zstd-compressed …","Error that can happen when initializing a VM.","Called <code>ext_storage_rollback_transaction_version_1</code> or …","Error when allocating memory for a return type.","Failed to decode a SCALE-encoded parameter.","One parameter is expected to point to a buffer, but the …","Virtual machine is ready to run.","Wasm virtual machine is ready to be run. Call …","The pointer and size returned by the Wasm entry point …","Must verify whether a signature is correct.","Need to verify whether a signature is valid.","Error that can happen when starting a VM.","Declares the start of a transaction.","Declares the start of a storage transaction. See …","Mismatch between the state trie version provided as …","","The size of the code exceeds the maximum allowed length.","Error in the Wasm code execution.","","","Called a function that is unknown to the host.","One parameter is expected to point to a UTF-8 string, but …","Error while initializing the virtual machine.","Error while starting the virtual machine.","If <code>true</code>, no <code>vm::NewErr::UnresolvedFunctionImport</code> error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the child trie whose following child trie must be …","","","","","","","","","","","","","","","If this function returns <code>true</code>, then the provided root hash …","","","","","","","Hint used by the implementation to decide which kind of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the number of heap pages that were passed to …","Number of pages of heap available to the virtual machine.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns the virtual machine back into a prototype.","Cancels execution of the virtual machine and returns back …","Verify the signature. Returns <code>true</code> if it is valid.","Returns the key whose value must be provided back with …","Returns the key whose value must be set.","Returns the key whose value must be set.","Returns the key whose following key must be returned.","Returns the key whose value must be set.","Returns the maximum number of keys to remove. <code>None</code> means …","Maximum size of the value to pass back.","Returns the message that the signature is expected to sign.","Bytes of the WebAssembly module.","Creates a new <code>HostVmPrototype</code>. Parses and potentially JITs …","Offset within the value that is requested.","Returns the prefix whose keys must be removed.","Returns the public key the signature is against.","Writes the storage value in the Wasm VM’s memory and …","Resumes execution after having set the value.","Resumes execution after having set the value.","Resumes execution after having cleared the values.","Writes the trie root hash to the Wasm VM and prepares it …","Writes the follow-up key in the Wasm VM memory and …","Writes the follow-up child trie in the Wasm VM memory and …","Writes the SCALE-encoded runtime version to the memory and …","Resumes execution after having set the value.","Resumes execution after having set the value.","Resumes execution after indicating the maximum log level.","Resumes execution after having acknowledged the event.","Resumes execution after having acknowledged the event.","Resume the execution assuming that the signature is …","Same as <code>ExternalStorageGet::resume</code>, but passes the full …","Resume the execution assuming that the signature is valid.","Similar to <code>ExternalStorageGet::resume</code>, but allows passing …","Runs the virtual machine until something important happens.","Starts the VM, calling the function passed as parameter.","Same as <code>HostVmPrototype::run</code>, except that the function …","Same as <code>HostVmPrototype::run</code>, except that the function …","Wasm runtimes can optionally contain a custom section (as …","Returns the runtime version found in the module.","Returns the signature.","Returns the state trie version indicated by the runtime.","","","","","","","","","","","","","Returns the trie whose root hash must be provided.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value the called function has returned.","Returns the value to set.","Returns the value to append.","Returns the value to set.","Verify the signature and resume execution.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the Wasm code whose runtime version must be …","Type that has actually gotten returned. <code>None</code> for “void”…","Decoding error that happened.","Name of the function that was unresolved.","Name of the function being called where a type mismatch …","Name of the function being called where a type mismatch …","Name of the function being called.","Name of the function being called.","Expected length of the buffer.","Size of the virtual memory.","Name of module associated with the unresolved function.","Index of the invalid parameter. The first parameter has …","Index of the invalid parameter. The first parameter has …","The version passed as parameter.","Pointer that got returned.","Pointer passed as parameter.","Pointer that was expected to be freed.","Size of the requested allocation.","Size that got returned.","The version in the specification.","Error that happened.","Virtual machine ready to be used again.","Object used to resume execution.","If true, changes must be rolled back.","","","","","Buffer storing the SCALE-encoded core version.","One API that the runtime supports.","Iterator to a list of APIs. See <code>CoreVersionRef::apis</code>.","Error while executing <code>Core_version</code>.","Runtime specification, once decoded.","Only one of the two desired custom sections is present.","Error while decoding the output.","Failed to parse Wasm binary.","Error returned by <code>find_embedded_runtime_version</code>.","Error returned by …","Error while finding the custom section.","<code>Core_version</code> used a host function that is forbidden in …","Error during the execution of the <code>Core_version</code> function.","Error while decoding the runtime APIs.","Error while decoding the runtime version.","Error while starting the execution of the <code>Core_version</code> …","","List of “API“s that the runtime supports.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this iterator contains the API with the …","Similar to <code>CoreVersionApisRefIter::contains</code>, but allows …","","","","","","","","","","","","","","","","Tries to find the custom section containing the runtime …","Tries to find the custom sections containing the runtime …","Tries to find within this iterator the given API, and if …","Similar to <code>CoreVersionApisRefIter::find_version</code>, but …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Decodes a SCALE-encoded list of APIs.","","","Hashes the name of an API in order to be able to compare …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","BLAKE2 hash of length 8 of the name of the API.","","Returns the SCALE encoding of this data structure.","","","Version number of the state trie encoding version.","","","","","","","","","","","Arbitrary version number corresponding to the transactions …","","","","","","","","","","","","","","","","","","","","","","Version of the module. Typical values are <code>1</code>, <code>2</code>, <code>3</code>, …","","","","","","","","Configuration for <code>run</code>.","Error that can happen during the execution.","See <code>Error::detail</code>.","Execution is over.","","Size of the logs generated by the runtime exceeds the …","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","Current state of the execution.","Verifying whether a signature is correct is required in …","Verifying whether a signature is correct is required in …","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Fetching the storage trie root is required in order to …","Fetching the storage trie root is required in order to …","Execution is successful.","Function execution has succeeded. Contains the return …","Error while executing the Wasm virtual machine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exact error that happened.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Name of the function to be called.","Injects the key.","Injects the corresponding storage value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Turns the virtual machine back into a prototype.","Cancels execution of the virtual machine and returns back …","Verify the signature. Returns <code>true</code> if it is valid.","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Concatenation of all the log messages printed by the …","Maximum log level of the runtime.","Returns the message that the signature is expected to sign.","Parameter of the call, as an iterator of bytes. The …","Prototype of the virtual machine that was passed through …","Returns the public key the signature is against.","Writes the trie root hash to the Wasm VM and prepares it …","Resume the execution assuming that the signature is …","Resume the execution assuming that the signature is valid.","Start running the WebAssembly virtual machine.","Returns the signature.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value the called function has returned.","Verify the signature and resume execution.","Virtual machine to be run.","Contains the output value of the runtime, and the virtual …","","","","","","","","","","","Error that happened.","Concatenation of all the log messages printed by the …","Configuration for <code>run</code>.","Error that can happen during the execution.","See <code>Error::detail</code>.","Execution is over.","Size of the logs generated by the runtime exceeds the …","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","Fetching the list of keys with a given prefix is required …","Fetching the list of keys with a given prefix is required …","Current state of the execution.","Verifying whether a signature is correct is required in …","Verifying whether a signature is correct is required in …","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Execution is successful.","Function execution has succeeded. Contains the return …","","Error while executing the Wasm virtual machine.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exact error that happened.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Name of the function to be called.","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Turns the virtual machine back into a prototype.","Cancels execution of the virtual machine and returns back …","Verify the signature. Returns <code>true</code> if it is valid.","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Concatenation of all the log messages printed by the …","Optional cache of the trie root calculation to use. Must …","Cache used for calculating the main trie root.","Maximum log level of the runtime.","Returns the message that the signature is expected to sign.","Initial state of <code>Success::offchain_storage_changes</code>. The …","List of changes to the off-chain storage that this block …","Parameter of the call, as an iterator of bytes. The …","Returns the prefix whose keys to load.","Prototype of the virtual machine that was passed through …","Returns the public key the signature is against.","Resume the execution assuming that the signature is …","Resume the execution assuming that the signature is valid.","Start running the WebAssembly virtual machine.","Returns the signature.","State trie version indicated by the runtime. All the …","Initial state of <code>Success::storage_main_trie_changes</code>. The …","List of changes to the storage main trie that the block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value the called function has returned.","Verify the signature and resume execution.","Virtual machine to be run.","Contains the output value of the runtime, and the virtual …","","","","","","","","","","","Error that happened.","Concatenation of all the log messages printed by the …","","","","","","","","","","","","","Removes all the entries within this diff.","","","","Returns the diff entry at the given key.","Inserts the given key-value combination in the diff.","Inserts in the diff an entry at the given key that delete …","Returns an iterator to all the entries in the diff.","Returns an iterator to all the entries in the diff.","Removes from the diff the entry corresponding to the given …","Builds a new empty diff.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Applies the given diff on top of the current one.","Applies the given diff on top of the current one.","Returns the storage key that immediately follows the …","Takes as parameter a list (<code>in_parent_ordered</code>) of all the …","","","","","","","","","","Passed a wrong value back.","The WebAssembly code will be instantiated once and run …","Failed to allocate memory for the virtual machine.","Hint used by the implementation to decide which kind of …","Outcome of the <code>run</code> function.","The execution has finished.","Forces using the <code>wasmi</code> backend.","Forces using the <code>wasmtime</code> backend.","Couldn’t find the requested function.","Error that can happen when calling …","Number of heap pages available to the Wasm code.","A 32-bits integer. There is no fundamental difference …","A 32-bits integer. Used for both signed and unsigned …","A 32-bits integer. There is no fundamental difference …","A 64-bits integer. Used for both signed and unsigned …","The Wasm module requires importing a global or a table, …","The virtual machine has been paused due to a call to a …","Requested symbol isn’t a <code>u32</code>.","The types of the provided parameters don’t match the …","Error while compiling the WebAssembly code.","If a “memory” symbol is provided, it must be a memory.","Wasm module imports a memory that isn’t named “memory…","Error that can happen when initializing a …","Wasm module doesn’t contain any memory.","The requested function has been found in the list of …","Couldn’t find requested symbol.","The WebAssembly code is expected to be only run once.","Other error. This error is unfortunately necessary due to …","Error while reading memory.","The state machine is poisoned.","","Error that can happen when resuming the execution of a …","Low-level Wasm function signature.","The requested function has a signature that isn’t …","Error that can happen when calling <code>Prepare::start</code>.","Smoldot doesn’t support wasm runtime that have a start …","Opaque error that happened during execution, such as an …","Wasm module both imports and exports a memory.","Failed to resolve a function imported by the module.","Error used in the conversions between VM implementation …","The WebAssembly code running through this VM is untrusted.","Type of a value passed as parameter or returned by a …","","<strong>Note</strong>: This struct implements <code>Clone</code>. Cloning a …","Value that a Wasm function can accept or produce.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator of all the <code>ExecHint</code> values …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>ForceWasmtime</code> if it is available on the current …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the value of a global that the module exports.","Increases the size of the memory by the given number of …","Increases the size of the memory by the given number of …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwraps <code>WasmValue::I32</code> into its value.","Unwraps <code>WasmValue::I64</code> into its value.","Turns back this virtual machine into a prototype.","Turns back this virtual machine into a prototype.","Returns the maximum number of pages that the memory can …","Returns the size of the memory, in bytes.","Returns the size of the memory, in bytes.","Creates a new process state machine from the given module. …","","Creates a <code>Signature</code> from the given parameter types and …","Returns a list of all the types of the parameters.","","Prepares the prototype for running a function.","","Copies the given memory range into a <code>Vec&lt;u8&gt;</code>.","Copies the given memory range into a <code>Vec&lt;u8&gt;</code>.","Returns the type of the return type of the function. <code>None</code> …","Starts or continues execution of this thread.","Turns this prototype into an actual virtual machine. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type corresponding to this value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write the data at the given memory location.","Write the data at the given memory location.","Identifier of the function to call. Corresponds to the …","Parameters of the function call.","Return value of the function.","Name of the function that was unresolved.","Name of module associated with the unresolved function.","Type of the value that was expected.","Type of the value that was actually passed.","","Justifications contain a proof of the finality of a block.","GrandPa commits contain a proof of the finality of a block.","","","","","","Error potentially returned by <code>decode_grandpa_commit</code>.","","","","","","","","","","List of Ed25519 signatures and public keys.","","","","","","","","","","","","","","","Attempt to decode the given SCALE-encoded Grandpa commit.","Attempt to decode the given SCALE-encoded commit.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commit contains a vote for a block that isn’t a …","One of the public keys is invalid.","The authorities set id of the commit doesn’t match the …","One of the signatures can’t be verified.","Configuration for a commit verification process.","One authority has produced two signatures.","Error that can happen while verifying a commit.","Verification is finished. Contains an error if the commit …","Verification is finished, but <code>IsParent::resume</code> has been …","Commit verification in progress.","Failed to decode the commit message.","Must return whether a certain public key is in the list of …","See <code>IsAuthority</code>.","Must return whether a certain block is a descendant of the …","See <code>IsParent</code>.","One of the public keys isn’t in the list of authorities.","","","","","","","","","","","Public key to verify.","Hash of the block to check.","Height of the block to check.","Number of bytes used for encoding the block number in the …","","","","","","","","","","","SCALE-encoded commit to verify.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Number of authorities that are allowed to emit …","Seed for a PRNG used for various purposes during the …","Resumes the verification process.","Resumes the verification process.","Hash of the block that must be the ancestor of the block …","Height of the block that must be the ancestor of the block …","","","","","","","","","","","","","","","","","Verifies that a commit is valid.","","","","","","","","","","","","","","","","","","Fragment to be verified.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Header of a block in the chain.","Justification that proves the finality of …","","","","","","","","","","","","","","","","","","","","","","","","","Potential error when decoding a justification.","Decoded justification.","Decoded justification.","","","","","Iterator towards the headers of the vote ancestries.","","","","","","","","","","","","","","","","","Authority that signed the precommit. Must be part of the …","Authority that signed the precommit. Must be part of the …","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to decode the given SCALE-encoded justification.","Decodes a SCALE-encoded precommit.","Attempt to decode the given SCALE-encoded justification.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ed25519 signature made with …","Ed25519 signature made with …","","","","","Hash of the block concerned by the pre-commit.","Hash of the block concerned by the pre-commit.","","","Height of the block concerned by the pre-commit.","Height of the block concerned by the pre-commit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","One of the public keys is invalid.","One of the signatures can’t be verified.","Configuration for a justification verification process.","One authority has produced two signatures.","Error that can happen while verifying a justification.","One of the public keys isn’t in the list of authorities.","Justification doesn’t contain enough authorities …","","","","","List of authorities that are allowed to emit pre-commits …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Justification to verify.","Seed for a PRNG used for various purposes during the …","","","","","","","","Verifies that a justification is valid.","","","","List of authorities in an AURA context.","","","","","A consensus log item for AURA.","A consensus log item for AURA.","AURA slot number pre-digest.","","","Block signature made using the AURA consensus engine.","Block signature made using the AURA consensus engine.","List of authorities has changed.","List of authorities has changed.","","Types of allowed slots.","List of authorities in a BABE context.","","","","","A consensus log item for BABE.","A consensus log item for BABE.","Information about the next epoch config, if changed. This …","Information about the next epoch. This is broadcast in the …","Information about the next epoch. This is broadcast in the …","A BABE pre-runtime digest. This contains all data required …","","","A BABE pre-runtime digest. This contains all data required …","Raw BABE primary slot assignment pre-digest.","Raw BABE primary slot assignment pre-digest.","Block signature made using the BABE consensus engine.","Block signature made using the BABE consensus engine.","BABE secondary slot assignment pre-digest.","BABE secondary deterministic slot assignment with VRF …","BABE secondary deterministic slot assignment with VRF …","","","Bad length of an AURA seal.","","","","Bad length of a BABE seal.","Error while decoding the block number.","Generic header digest.","","Error while decoding a digest item.","Error while decoding a digest log item length.","","Error while decoding the digest length.","Generic header digest.","Potential error when decoding a header.","Force an authority set change.","Force an authority set change.","List of authorities in a GrandPa context.","","","","","A consensus log item for GrandPa.","","A consensus log item for GrandPa.","A scheduled change of authority set.","A scheduled change of authority set.","Header of a block, after decoding.","Header of a block, after decoding.","Iterator towards the digest log items.","There are multiple Aura pre-runtime digests in the block …","There are multiple Babe configuration descriptor digests …","There are multiple Babe epoch descriptor digests in the …","There are multiple Babe pre-runtime digests in the block …","There are multiple runtime environment updated digests in …","The epoch has changed, and the epoch after the current one …","The epoch has changed, and the epoch after the current one …","The epoch has changed. This provides information about the …","The epoch has changed. This provides information about the …","Disable the authority with given index.","Disable the authority with given index.","Disable the authority with given index.","Disable the authority with given index.","Note that the authority with given index is disabled until …","Note that the authority with given index is disabled until …","Some other thing. Always ignored.","Some other thing. Always ignored.","A signal to pause the current authority set after the …","A signal to pause the current authority set after the …","Proof-of-work consensus algorithm is intentionally not …","A primary VRF-based slot assignment.","A primary VRF-based slot assignment.","Allow primary and secondary plain slot claims.","Allow primary and secondary VRF slot claims.","Only allow primary slot claims.","Error potentially returned when pushing a seal at the end …","A signal to resume the current authority set after the …","A signal to resume the current authority set after the …","Runtime of the chain has been updated in this block. This …","Runtime of the chain has been updated in this block. This …","Schedule an authority set change.","Schedule an authority set change.","Seal popped using <code>DigestRef::pop_seal</code>.","Found a seal that isn’t the last item in the list.","A secondary deterministic slot assignment.","A secondary deterministic slot assignment.","A secondary deterministic slot assignment with VRF outputs.","A secondary deterministic slot assignment with VRF outputs.","Header is too long.","Header is not long enough.","Found a Babe configuration change digest without an epoch …","Consensus item with an engine that hasn’t been …","See <code>DigestItemRef::UnknownConsensus</code>.","Digest log item with an unrecognized type.","Pre-runtime item with a consensus engine that hasn’t …","See <code>DigestItemRef::UnknownPreRuntime</code>.","Seal using a consensus engine that hasn’t been …","See <code>DigestItemRef::UnknownSeal</code>.","Value of <code>allowed_slots</code> in <code>BabeEpochConfiguration</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the Aura pre-runtime digest item, if any.","Returns the Aura seal digest item, if any.","Returns the Aura seal digest item, if any.","The authorities.","The authorities.","Authority index","Authority index","Authority index","Authority index","Authority index","Returns the Babe epoch information stored in the header, …","Returns the Babe epoch information stored in the header, …","Returns the Babe pre-runtime digest item, if any.","Returns the Babe pre-runtime digest item, if any.","Returns the Babe seal digest item, if any.","Returns the Babe seal digest item, if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value of <code>c</code> in <code>BabeEpochConfiguration</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to decode the given SCALE-encoded header.","Decodes a list of authorities from a SCALE-encoded blob of …","","","","","","","Attempt to decode the given SCALE-encoded header.","","","The number of blocks to delay.","The number of blocks to delay.","List of auxiliary data appended to the block header.","List of auxiliary data appended to the block header.","Returns a digest with empty logs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value appropriate for <code>Header::extrinsics_root</code>. …","The Merkle root of the extrinsics.","The Merkle root of the extrinsics.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Decodes a <code>AuraConsensusLogRef</code> from a slice of bytes.","Builds an iterator corresponding to the given slice.","Decodes a <code>AuraPreDigest</code> from a slice of bytes.","Decodes a <code>BabeConsensusLogRef</code> from a slice of bytes.","Decodes a <code>BabePreDigestRef</code> from a slice of bytes.","Builds a new <code>BabeAuthoritiesIter</code> iterating over the given …","Decodes a <code>BabeNextConfig</code> from a slice of bytes.","Decodes a <code>BabeAllowedSlots</code> from a slice of bytes.","Decodes a <code>BabePreDigestRef</code> from a slice of bytes.","Decodes a <code>BabePrimaryPreDigestRef</code> from a slice of bytes.","Decodes a <code>BabeSecondaryPlainPreDigest</code> from a slice of …","Decodes a <code>BabeSecondaryVRFPreDigestRef</code> from a slice of …","Decodes a <code>GrandpaConsensusLogRef</code> from a slice of bytes.","Turns an already-decoded list of items into a <code>DigestRef</code>.","Returns true if the list has any item that belong to the …","Returns true if the list has any item that belong to the …","Returns true if the list has any item that belong to the …","Returns <code>true</code> if there is a …","Returns <code>true</code> if there is a …","Builds the hash of the header.","Builds the hash of the header.","Returns a hash of a SCALE-encoded header.","Returns a hash of a SCALE-encoded header.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the item is relevant to the Aura consensus engine.","True if the item is relevant to the Babe consensus engine.","True if the item is relevant to the Grandpa finality …","Returns <code>true</code> for <code>BabePreDigestRef::Primary</code>.","Returns an iterator to the log items in this digest.","Returns an iterator to the log items in this digest.","Returns an iterator corresponding to the given slice.","","","","","The new authorities after the change, along with their …","The new authorities after the change, along with their …","Block number stored in the header.","Block number stored in the header.","Hash of the parent block stored in the header.","Hash of the parent block stored in the header.","If the last element of the list is a seal, removes it from …","Sr25519 public key.","Sr25519 public key.","Sr25519 public key.","Sr25519 public key.","Ed25519 public key.","Ed25519 public key.","Pushes an Aura seal at the end of the list. Returns an …","Pushes a Babe seal at the end of the list. Returns an …","The value of randomness to use for the slot-assignment.","The value of randomness to use for the slot-assignment.","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","Equivalent to <code>HeaderRef::scale_encoding</code> but returns the …","Equivalent to <code>Header::scale_encoding</code> but returns the data …","","","","","Returns the slot number stored in the header.","Slot number when the block was produced.","Slot number","Slot number","Slot number","Slot number","Slot number","The state trie Merkle root","The state trie Merkle root","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","VRF output","VRF output","VRF output","VRF output","VRF proof","VRF proof","VRF proof","VRF proof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Arbitrary number indicating the weight of the authority.","Arbitrary number indicating the weight of the authority.","Arbitrary number indicating the weight of the authority.","Arbitrary number indicating the weight of the authority.","Name of the consensus engine.","Name of the consensus engine.","Name of the consensus engine.","Smoldot doesn’t interpret the content of the log item.","Smoldot doesn’t interpret the content of the log item.","Smoldot doesn’t interpret the content of the log item.","Name of the consensus engine.","Name of the consensus engine.","Name of the consensus engine.","Smoldot doesn’t interpret the content of the log item.","Smoldot doesn’t interpret the content of the log item.","Smoldot doesn’t interpret the content of the log item.","","","","","Data structure containing cryptographic key pairs.","","","","","Content of the file is invalid. Contains a human-readable …","","","Error reported by the operating system.","Error while accessing the file containing the secret key. …","","Namespace of the key.","Collection of key pairs.","","","","The given <code>(namespace, public key)</code> combination is unknown …","","","Returns all existing variants of <code>KeyNamespace</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Generates a new Ed25519 key and inserts it in the keystore.","Generates a new Sr25519 key and inserts it in the keystore.","","","Inserts an Sr25519 private key in the keystore.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the list of all keys known to this keystore.","Initializes a new keystore.","","Signs the given payload using the private key associated …","Note that the labels must be <code>&#39;static</code> due to requirements …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of mnemonic phrase words isn’t supported by the …","Failed to decode the provided BIP39 seed phrase.","Invalid BIP39 mnemonic phrase.","Failed to decode BIP39 mnemonic phrase.","Default seed phrase used when decoding a private key in …","","","Couldn’t parse the string in any meaningful way.","Error in <code>parse_private_key</code>.","Successful outcome of <code>parse_private_key</code>.","","Invalid BIP39 mnemonic phrase.","","","","","","","","","","","Turns a BIP39 seed phrase into a 32 bytes cryptographic …","","","","","","","","","","","","","Decodes a human-readable private key (a.k.a. a seed …","Decodes a human-readable private key (a.k.a. a seed …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Turns a human-readable private key (a.k.a. a seed phrase) …","Derivation path found in the secret phrase.","Base seed phrase. Must be derived through …","","","","","","","","","","","","","","","","","","","","","","","","","Implements <code>fmt::Display</code> and displays a number of bytes in …","Implements <code>fmt::Display</code> and displays hashes in a nice way.","Values used to build the informant line. Implements the …","Extra fields if a relay chain exists.","","","","","","","","","Hash of the best block that we have locally.","Number of the best block that we have locally.","Number of the best block that we have locally.","","","","","","","","","Name of the chain.","Name of the chain.","If true, ANSI escape characters will be written out.","Hash of the latest finalized block we have locally.","Number of the latest finalized block we have locally.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Maximum number of characters of the informant line.","Best block currently being propagated on the peer-to-peer. …","Number of network connections we are having with the rest …","Number of gossiping substreams open with nodes of the same …","Extra fields related to the relay chain.","","","","","","","","","","","","","","","","","","","","List of requests and how to answer them.","Parse JSON-RPC method calls and notifications, and build …","","The <code>RequestsSubscriptions</code> state machine holds a list of …","WebSocket server.","Contains the public key of an account.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The length prefix at the beginning of the metadata is …","One of the parameters of the function call is invalid.","The parameter of a function call is invalid.","Format the parameters is plain invalid.","Could not parse the body of the message as a valid …","Length indicated by the length prefix doesn’t match the …","","","","","JSON-RPC request is valid, but there is a problem related …","","See <code>ParseError::Method</code>.","The parameters of the function call are missing.","","Unstable event. See …","","","","","","","","Error produced by <code>parse_json_call</code>.","","Error potentially returned by <code>remove_metadata_length_prefix</code>…","","","","","","","","","","","","","","","","","","","Too many parameters have been passed to the function.","","","","Call concerns a method that isn’t recognized.","Call concerns a notification that isn’t recognizeduilds a JSON call, to send it to a JSON-RPC servereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Header</code> from a SCALE-encoded header.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of justifications. Each justification is made of a …","","","Returns a list of RPC method names of all the methods in …","Returns a list of RPC method names of all the methods in …","","Returns the name of the method.","Returns the name of the method.","","","","","","","","","","","","Returns an JSON object containing the list of the …","Returns an JSON object containing the list of the …","","Parses a JSON call (usually received from a JSON-RPC …","","","","","","Removes the length prefix at the beginning of <code>metadata</code>. …","","Returns a list of all JSON-RPC methods that are available.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the Base58 encoding of the network identity of the …","","Returns, as an opaque string, the name of the client …","","","","","","","","","","","","Returns, as an opaque string, the version of the client …","","","Builds a JSON call, to send it to a JSON-RPC server.","Builds a JSON call, to send it to a JSON-RPC server.","Turns the error into a JSON string representing the error …","Serializes the response into a JSON string.","Serializes the response into a JSON stringumber of parameters actually received.","Reason why it failed.","Number of parameters that are expected to be received.","0-based index of the parameter whose format is invalid.","Name of the JSON-RPC method that was attempted to be …","Name of the JSON-RPC method that was attempted to be …","Name of the JSON-RPC method that was attempted to be …","Name of the JSON-RPC method that was attempted to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Problem that happens.","Identifier of the request sent by the user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Method-specific error. Contains a more precise error code …","Decoded JSON-RPC call.","Error that can be reported to the JSON-RPC client.","Internal JSON-RPC error.","Invalid method parameter(s).","The JSON sent is not a valid Request object.","The method does not exist / is not available.","Error while parsing a call.","Invalid JSON was received by the server.","Other internal server error. Contains a more precise error …","","","","","","","","","","","","","Builds a JSON call.","Builds a JSON response.","Builds a JSON response.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","JSON-formatted identifier of the request. <code>None</code> for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Name of the method that is being called.","JSON-formatted list of parameters. <code>None</code> iff the <code>params</code> …","Parses a JSON-encoded RPC method call or notification.","","","","","","","","","","","","","","Potential error when decoding payment information runtime …","Name of the runtime function to call in order to obtain …","Failed to parse the return value of …","The <code>TransactionPaymentApi</code> API uses a version that smoldot …","","","","","Attempt to decode the output of the runtime call.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Produces the input to pass to the …","","","","","","Error returned by <code>RequestsSubscriptions::add_client</code> and …","","","","Configuration to pass to <code>RequestsSubscriptions::new</code>.","Provided by the <code>MessagesReceiver</code> in the context of a …","Reached maximum number of allowed clients.","Reached maximum number of subscriptions allowed per user.","Provided when a subscription is started. Allows receiving …","","","","Error returned by <code>RequestsSubscriptions::start_subscription</code>…","Returned by <code>RequestsSubscriptions::start_subscription</code> when …","Error returned by …","Adds a new client to the state machine. A new <code>ClientId</code> is …","Similar to <code>RequestsSubscriptions::add_client</code>, but …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","FIFO queue of futures.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum number of clients that can be added at the same …","For each client, the maximum number of JSON-RPC requests …","Maximum number of active subscriptions that each client …","Creates a new empty state machine.","Waits for the next message to be available.","Waits until a request has been queued using …","Waits until a message is available in the queue of …","","","Adds the given notification to the queue of notifications …","Waits until a slot in the queue of requests is available, …","Removes from the state machine the client with the given …","Original request, passed as parameter to the function.","Sets the response to a request previously returned by …","Waits until a subscription task is ready to be polled, and …","Sends the confirmation.","Changes the maximum number of allowed clients.","Overwrites the notification whose index is <code>index</code> in the …","Starts the subscription.","Adds a new subscription to the state machine, associated …","Sends a message to the receiver that was provided when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds the given notification to the queue of notifications …","Similar to <code>RequestsSubscriptions::queue_client_request</code>, …","","","","","","","","","","","","","","","","","","","","","","","See the module-level documentation.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Creates a new empty queue.","Pushes a task to the end of the queue.","Pops a task from the head of the queue and polls it.","","","","","Configuration for a <code>WsServer</code>.","An error has happened on a connection. The connection is …","Identifier for a connection with regard to a <code>WsServer</code>.","A new TCP connection has arrived on the listening socket.","Event that has happened on a <code>WsServer</code>.","A text frame has been received on a connection.","Listening socket and list of open connections.","Accepts the pending connection.","","","","","","","","","IP address to try to bind to.","","","","","","","","","Pre-allocated capacity for the list of connections.","","","Destroys a connection.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns <code>true</code> if there isn’t any active healthy …","Returns the number of active healthy connections.","Address of the local TCP listening socket, as provided by …","Maximum size, in bytes, of a frame sent by the remote.","Try opening a TCP listening socket.","Returns the next event happening on the server.","","Queues a text frame to be sent on the given connection.","Reject the pending connection.","Number of pending messages to buffer up for sending before …","","","","","","","","","","","","","","","","","","Address of the remote, as provided by the operating system.","Identifier of the connection. This identifier might be …","Identifier of the connection that sent the frame.","Message sent by the remote. Its content is entirely …","User data associated with the connection.","User data associated with the connection.","","","","Collection of libp2p connections.","Module containing everything related to the processing of …","","A multihash is a small data structure containing a code …","","Network of peers.","","Implementation of a WebSocket client that wraps around an …","Augments an implementation of <code>AsyncRead</code> and <code>AsyncWrite</code> …","Holds an implementation of <code>AsyncRead</code> and <code>AsyncWrite</code>, …","Advances the cursors of the buffers.","","","","","Returns a buffer containing data read from the socket, and …","Indicate that the writing side of the connection must be …","Wait until the socket has been properly closed.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","True if <code>WithBuffers::close</code> has been called earlier.","Initializes a new <code>WithBuffers</code> with the given socket.","Waits either for data to be received or for data to be …","","","","","Shutdown was demanded by the remote and performed cleanly.","Configuration for a <code>Network</code>.","","","","Identifier of a connection spawned by the <code>Network</code>.","Request has been canceled because the connection as a …","Opening has been interrupted because the connection as a …","Substream has been closed because the connection as a …","See <code>Network::connection_state</code>.","Message from a connection task destined to the coordinator.","Substream remains open.","Message from the coordinator destined to a connection task.","Event generated by <code>Network::next_event</code>.","","Error in the protocol of the handshake.","Handshake of the given connection has completed.","Handshake phase took too long.","","Received an incoming substream, but this substream has …","State machine dedicated to a single multi-stream …","What kind of handshake to perform on the newly-added …","Use the multistream-select protocol to negotiate the Noise …","Data structure containing the list of all connections, …","Configuration for a specific overlay network.","Received a notification on a notifications substream of a …","The remote has closed an incoming notifications substream.","","The remote would like to open a notifications substream.","The remote has canceled the opening an incoming …","Remote has closed an outgoing notifications substream, …","","A previously open outbound substream has been closed, by …","Outcome of trying to open a substream with …","","An outgoing ping has failed. This event is generated …","An outgoing ping has succeeded. This event is generated …","Error in the connection protocol of a fully established …","Queue of notifications with that peer is full.","Error potentially returned by <code>Network::queue_notification</code>.","","Remote has abruptly reset the connection.","","Received a request from a request-response protocol.","Request received earlier has been canceled by the remote.","Size of the request is over maximum allowed by the …","Substream is now considered dead and has been removed from …","Outcome of a request started using <code>Network::start_request</code>.","A transport-level connection (e.g. a TCP socket) has been …","Reason why a connection is shutting down. See …","State machine dedicated to a single single-stream …","What kind of handshake to perform on the newly-added …","Error potentially returned when starting a request.","A transport-level connection (e.g. a TCP socket) is …","Error happened in the context of the substream.","Error happened in the context of the substream.","Error happened in the context of the substream.","Whether a substream should remain open or be killed.","Identifier of a request, or an inbound substream, or an …","The connection is a WebRTC connection.","Accepts a request for an inbound notifications substream …","Notifies the state machine that a new substream has been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of connections containers should initially allocate …","","","","","","","","","","","","","","","","","Start closing a previously-open notifications substream, …","","","Returns the state of the given connection.","Returns the number of new outbound substreams that the …","","","","","","","","","","","","","If <code>true</code>, the connection has finished its handshaking phase.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Amount of time after which a connection handshake is …","","","","","","Injects into the state machine a message generated by …","Injects a message that has been pulled from the …","Injects a message that has been pulled from the …","Adds a new multi-stream connection to the collection.","Adds a new single-stream connection to the collection.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the collection doesn’t contain any …","Returns <code>true</code> if the error is caused by a faulty behavior …","Returns <code>true</code> if <code>SingleStreamConnectionTask::reset</code> has been …","Returns the number of connections in the collection.","Maximum size, in bytes, of the handshake that can be …","Maximum number of substreams that each remote can have …","Maximum size, in bytes, of a notification that can be …","Returns the value that compares superior or equal to any …","Returns the value that compares superior or equal to any …","Returns the value that compares inferior or equal to any …","Returns the value that compares inferior or equal to any …","Initializes a new network data structure.","Returns the next event produced by the service. Returns …","Returns the Noise key originally passed as …","Key used for the encryption layer. This is a Noise static …","Returns the list the overlay networks originally passed as …","","Start opening a notifications substream.","","","Name of the ping protocol on the network.","Name of the protocol negotiated on the wire.","Pulls a message that must be sent to a connection.","Pulls a message to send back to the coordinator.","Pulls a message to send back to the coordinator.","Adds a notification to the queue of notifications to send …","Seed for the randomness within the networking state …","Reads data coming from the connection, updates the …","Rejects a request for an inbound notifications substream …","Returns the list the request-response protocols originally …","","Sets the state of the connection to “reset”.","Sets the state of the connection to “reset”.","Immediately destroys the substream with the given …","Responds to an incoming request. Must be called in …","If <code>true</code>, the connection is shutting down.","Sends a request to the given peer.","Switches the connection to a state where it will shut down …","Reads/writes data on the substream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error that happened.","Identifier of the connection whose handshake is finished.","Identifier of the connection that is starting its shutdown.","Identifier of the connection that has finished its …","Identifier of the connection that has received the …","Identifier of the connection that has received the request.","Identifier of the connection that has received the …","","","Notification that the remote has sent. The meaning of this …","Index of the negotiated protocol within …","Reason why the substream has been closed.","Identity of the peer on the other side of the connection.","Index of the negotiated protocol within …","Reason why the connection is starting its shutdown. …","Handshake that has been sent by the remote. Its …","Payload that has been sent by the remote. Its …","If the request is successful, contains the response sent …","If <code>Ok</code>, contains the handshake sent back by the remote. Its …","Substream that was returned by <code>Network::start_request</code>.","Substream on which the request has been received. Must be …","","","","","Newly-generated identifier for the substream on which the …","Substream that has been closed. Guaranteed to match a …","Substream on which the notification has been received. …","Substream that has been closed. Guaranteed to match a …","User data that was stored in the state machine for this …","<code>true</code> if the connection was in its established phase before …","Multihash encoding of the TLS certificate used by the …","Multihash encoding of the TLS certificate used by the …","","","","Multistream-select is a protocol whose purpose is to …","Noise protocol libp2p layer.","State machine handling the handshake with a TCP or …","Yamux multiplexing protocol.","Error potentially returned when starting a request.","Configuration to turn a <code>ConnectionPrototype</code> into a …","Configuration for a notifications protocol.","Configuration for a request-response protocol.","See <code>ConfigRequestResponse::inbound_config</code>.","Successfully negotiated connection. Ready to be turned …","Substream remains open.","Request must be completely empty, not even a length prefix.","Error during a connection. The connection should be shut …","Event that happened on the connection. See …","","Received an incoming substream, but this substream has …","State machine of a fully-established connection where …","The connection is now in a mode where opening new …","Error in the noise cipher. Data has most likely been …","Remote has sent a notification on an inbound notifications …","Remote has closed an inbound notifications substream.Can …","","Remote has opened an inbound notifications substream.","Remote has canceled an inbound notifications substream …","Remote has closed an outgoing notifications substream, …","","Remote has reset an outgoing notifications substream. The …","Outcome of trying to open a substream with …","Request must contain a length prefix plus a potentially …","An outgoing ping has failed. This event is generated …","An outgoing ping has succeeded. This event is generated …","","Received a request in the context of a request-response …","Size of the request is over maximum allowed by the …","Substream is now considered dead and has been removed from …","","Received a response to a previously emitted request on a …","State machine of a fully-established connection.","Whether a substream should remain open or be killed.","Identifier of a request or a notifications substream.","Error in the Yamux multiplexing protocol.","Accepts an inbound notifications protocol. Must be called …","Accepts an inbound notifications protocol. Must be called …","Sends a request to the remote.","Sends a request to the remote.","Notifies the state machine that a new substream has been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes a notifications substream opened after a successful …","Closes a notifications substream opened after a successful …","","Close the incoming substreams, automatically denying any …","Returns the number of new outbound substreams that the …","","","","When to start the first outgoing ping.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","If true, incoming substreams are allowed to negotiate this …","Configuration related to sending out requests through this …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns this prototype into an actual connection.","Extracts the Noise state machine from this prototype.","Maximum size, in bytes, of the handshake that can be …","Maximum number of substreams that the remote can have …","Maximum size, in bytes, of a notification that can be …","","Returns the maximum allowed size of a request.","Returns the value that compares superior or equal to all …","Returns the value that compares inferior or equal to all …","Name of the protocol transferred on the wire.","Name of the protocol transferred on the wire.","Returns the number of bytes waiting to be sent out on that …","Returns the number of bytes waiting to be sent out on that …","List of notifications protocols supported for incoming …","Returns the user data associated to a notifications …","Returns the user data associated to a notifications …","Opens a outgoing substream with the given protocol, …","Opens a outgoing substream with the given protocol, …","","Interval between two consecutive outgoing ping attempts.","Name of the ping protocol on the network.","Time after which an outgoing ping is considered failed.","Removes an event from the queue of events and returns it.","Entropy used for the randomness specific to this …","Reads data coming from the socket, updates the internal …","Rejects an inbound notifications protocol. Must be called …","Rejects an inbound notifications protocol. Must be called …","List of request-response protocols supported for incoming …","Immediately destroys the substream with the given …","Responds to an incoming request. Must be called in …","Responds to an incoming request. Must be called in …","Individual substream within an established connection.","Reads/writes data on the substream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new connection from the given configuration.","Queues a notification to be written out on the given …","Queues a notification to be written out on the given …","Maximum allowed size for the payload in bytes.","Handshake sent by the remote. Its interpretation is out of …","Identifier of the request. Needs to be provided back when …","Identifier of the request. Value that was returned by …","Identifier of the substream. Needs to be provided back …","Identifier of the substream.","Identifier of the substream.","Identifier of the substream.","Identifier of the substream. Value that was returned by …","Identifier of the substream. Value that was returned by …","Identifier of the substream. Value that was returned by …","Notification sent by the remote.","If <code>Ok</code>, the substream has been closed gracefully. If <code>Err</code>, a …","Index of the request-response protocol the request was …","Index of the notifications protocol concerned by the …","Bytes of the request. Its interpretation is out of scope …","Bytes of the response. Its interpretation is out of scope …","If <code>Ok</code>, contains the handshake sent back by the remote. Its …","Value that was passed to <code>SingleStream::add_request</code> or …","Value that was passed to …","Event that happened on the connection. See …","Error while receiving the remote’s handshake.","Error that can happen while processing an inbound …","Error while receiving an inbound substream.","An inbound substream has successfully negotiated a …","Type of inbound protocol.","Error during protocol negotiation.","Error during protocol negotiation.","Error during the multistream-select handshake.","Remote has sent a notification on an inbound notifications …","","Remote has closed an inbound notifications substream …","Reason why an inbound notifications substream has been …","Error while receiving an inbound notifications substream …","Remote has opened an inbound notifications substream.","Remote has canceled an inbound notifications substream …","Unexpected end of file while receiving an inbound …","Remote has closed an outgoing notifications substream, …","Error that can happen when trying to open an outbound …","Remote has reset an outgoing notifications substream. The …","Remote has accepted or refused a substream opened with …","","Remote has failed to answer one or more pings.","A ping has been successfully answered by the remote.","Error in the protocol.","Remote doesn’t support this protocol.","Remote has indicated that it doesn’t support the …","Remote has refused the handshake by closing the substream.","","Error that can happen during a request in a …","Received a request in the context of a request-response …","Unexpected end of file while receiving an inbound request.","Error while receiving an inbound request.","Error potentially returned by <code>Substream::respond_in_request</code>…","Received a response to a previously emitted request on a …","Error while receiving the response.","State machine containing the state of a single substream …","Remote has decided to close the substream. This most …","The substream has already been closed.","Remote has decided to <code>RST</code> the substream. This most likely …","Substream has been reset during the negotiation.","Substream has been reset.","Remote hasn’t answered in time.","Remote took too long to perform the handshake.","Accepts an inbound notifications protocol. Must be called …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes a notifications substream opened after a successful …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initializes an new <code>ingoing</code> substream.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the error is caused by a faulty behavior …","Returns the number of bytes waiting to be sent out on that …","Initializes an outgoing notifications substream.","Returns the user data associated to a notifications …","Initializes an outgoing ping substream.","Queues a ping on the given substream. Must be passed a …","Reads data coming from the socket, updates the internal …","Rejects an inbound notifications protocol. Must be called …","Initializes an outgoing request substream.","Returns the user data associated to a request substream.","","Responds to an incoming request. Must be called in …","Call after an <code>Event::InboundNegotiated</code> has been emitted in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Queues a notification to be written out on the given …","Handshake sent by the remote. Its interpretation is out of …","Notification sent by the remote.","Number of pings that the remote has failed to answer.","If <code>Ok</code>, the substream has been closed gracefully. If <code>Err</code>, a …","Index of the request-response protocol the request was …","Index of the notifications protocol concerned by the …","Bytes of the request. Its interpretation is out of scope …","Bytes of the response. Its interpretation is out of scope …","If <code>Ok</code>, contains the handshake sent back by the remote. Its …","Value that was passed to <code>Substream::request_out</code>.","Value that was passed to <code>Substream::notifications_out</code>.","Error that happened.","Index of the protocol that was passed in the …","Index of the protocol that was passed in the …","","","","Maximum allowed size of the request. If <code>None</code>, then no data …","Unknown handshake or unknown multistream-select protocol …","Configuration of a multistream-select protocol.","Local node is the dialing side and requests the specific …","Error that can happen during the negotiation.","Error while decoding a frame length, or frame size limit …","","Negotiation in progress.","Negotiation is still in progress. Use the provided …","Received empty command.","Local node is the listening side.","","","Message on the multistream-select protocol.","Current state of a multistream-select negotiation.","Negotiation has ended, but there isn’t any protocol in …","","","","Reading side of the connection is closed. The handshake can…","Negotiation has ended successfully. A protocol has been …","Received answer to protocol request that doesn’t match …","Writing side of the connection is closed. The handshake can…","","","","","","","","","","","","","","","","","","","","","If this function returns true, then the multistream-select …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the bytes representation of this message, as a …","Initializes a new handshake state machine.","Shortcut method for <code>InProgress::new</code> and wrapping the …","Feeds data coming from a socket, updates the internal …","","","","","","","","","","","","","","","","","","","","","","","","","Write to the given <code>ReadWrite</code> as many bytes of the message …","Name of the protocol to try negotiate. The …","List of protocol names that are supported. In case of …","Error in the decryption state machine.","Error while decoding data.","Configuration for a Noise handshake.","Potential error during the noise handshake.","Handshake still in progress. More data needs to be sent or …","Handshake still in progress. More data needs to be sent or …","Key passed as part of the payload failed to decode into a …","State of the noise encryption/decryption cipher.","State of a Noise handshake.","The noise key is the key exchanged during the noise …","Name of the protocol, typically used when negotiated it …","Failed to decode the payload as the …","Error while decoding the handshake.","Reading side of the connection is closed. The handshake can…","Signature of the noise public key by the libp2p key failed.","Noise handshake has successfully completed.","Received a payload as part of a handshake message when …","Prototype for a <code>NoiseKey</code>.","Writing side of the connection is closed. The handshake can…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reads data from <code>payload</code> and writes it to <code>destination</code>. …","Returns the size of unencrypted data that fits a buffer of …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Feeds data received from the wire.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the local side has opened the connection.","<code>true</code> if this side of the handshake has initiated the …","Key to use during the handshake.","Returns the libp2p public key associated to the signature …","Generates a new private and public key pair signed with …","Initializes a new noise handshake state machine.","Shortcut function that calls <code>HandshakeInProgress::new</code> and …","Returns the data that has to be signed.","Returns the data that has to be signed.","Prologue data. The prologue data must be identical on both …","Generates a new private and public key pair.","Feeds data coming from a socket and outputs data to write …","Turns this <code>UnsignedNoiseKey</code> into a <code>NoiseKey</code> after signing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Object to use to encrypt and decrypt all further …","<code>PeerId</code> of the remote.","Protocol error during the multistream-select negotiation …","Current state of a connection handshake.","Error during a connection handshake. The connection should …","Connection handshake in progress.","Connection handshake in progress.","Protocol error during the multistream-select negotiation …","No encryption protocol in common with the remote.","No multiplexing protocol in common with the remote.","Error in the noise cipher. Data has most likely been …","Protocol error during the noise handshake.","Connection handshake has reached the noise handshake, and …","Connection handshake has reached the noise handshake, and …","Handshake has succeeded. Connection is now open.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Initializes a new state machine for a Noise + Yamux …","Shortcut for <code>HealthyHandshake::noise_yamux</code> wrapped in a …","Feeds data coming from a socket and writes back data to …","Turn this <code>NoiseKeyRequired</code> back into a <code>HealthyHandshake</code> by …","","","","","","","","","","","","","","","","","","Prototype for the connection.","Network identity of the remote.","","Configuration for a new <code>Yamux</code>.","Remote tried to send more data than it was allowed to.","Received data corresponding to a substream.","Remote has sent a data frame containing data at the same …","","Error while decoding the Yamux stream.","","Received a “go away” request. This means that it is …","","Failed to decode an incoming Yamux header.","Details about the incoming data.","","Remote has requested to open a new substream.","","Number of credits allocated to the local node has …","","Name of the protocol, typically used when negotiated it …","Received a response to a ping that has been sent out …","Remote has sent a ping response, but its opaque data didn…","","","Remote has closed its writing side of the substream.","Remote has asked to reset a substream.","Identifier of a substream in the context of a connection.","Reference to a substream within the <code>Yamux</code>.","Reference to a substream within the <code>Yamux</code>.","Received a SYN flag with a known substream ID.","Remote sent additional data on a substream after having …","","Accepts an incoming substream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of bytes read from the incoming buffer. These bytes …","Returns <code>false</code> if the remote has closed their writing side …","Returns <code>false</code> if the remote has closed their writing side …","Returns <code>false</code> if <code>SubstreamMut::close</code> or <code>SubstreamMut::reset</code>…","Returns <code>false</code> if <code>SubstreamMut::close</code> or <code>SubstreamMut::reset</code>…","Expected number of substreams simultaneously open, both …","","","","","","","Marks the substream as closed. It is no longer possible to …","","Returns the list of all substreams that have been closed …","Detail about the incoming data. <code>None</code> if nothing of …","","","","","","","","","","Returns an object that provides an iterator to a list of …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns <code>true</code> if <code>Yamux::send_goaway</code> has been called in the …","Returns <code>true</code> if <code>Yamux::send_goaway</code> has been called in the …","","Identifier of the substream.","Identifier of the substream.","Process some incoming data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user data associated to this substream.","Returns the user data associated to this substream.","Returns <code>true</code> if there is no substream in the state machine.","<code>true</code> if the local machine has initiated the connection. …","Returns the number of substreams in the Yamux state …","Returns the value that compares superior or equal to all …","Returns the value that compares inferior or equal to all …","Initializes a new Yamux state machine.","Builds the next buffer to send out and returns it.","Returns the number of inbound substreams in the Yamux …","Opens a new substream.","","Queues sending out a ping to the remote.","Returns the number of bytes queued for writing on this …","Returns the number of bytes queued for writing on this …","Seed used for the randomness. Used to avoid HashDoS attack …","Returns <code>Some</code> if a <code>IncomingDataDetail::GoAway</code> event has …","Rejects an incoming substream.","Removes a dead substream from the state machine.","Allow the remote to send up to <code>bytes</code> bytes at once in the …","Abruptly shuts down the substream. Sends a frame with the …","Queues a <code>GoAway</code> frame, requesting the remote to no longer …","Returns a reference to a substream by its ID. Returns <code>None</code> …","Returns a reference to a substream by its ID. Returns <code>None</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user data associated to this substream.","Returns the user data associated to this substream.","Returns the user data associated to this substream.","Returns an iterator to the list of all substream user …","Returns an iterator to the list of all substream user …","","","","","","","","","","","","Appends data to the buffer of data to send out on this …","Yamux object on which <code>Yamux::incoming_data</code> has been called.","Error code sent by the remote.","List of all outgoing substreams that haven’t been …","Offset in the buffer passed to <code>Yamux::incoming_data</code> where …","Substream the data belongs to. Guaranteed to be valid.","Substream that got closed.","Substream that has been reset.","Contains the multihash of the TLS certificate.","","","","","Domain name. Guarantees that the domain name has a valid …","","","","","","A multiaddress must always start with <code>/</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator to a list of buffers that, when …","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new empty <code>Multiaddr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Attempts to extract a protocol from an iterator of <code>/</code>…","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the list of components of the multiaddress.","","","Pops the last protocol from the list.","Pushes a protocol at the end of this <code>Multiaddr</code>.","Shrinks the memory used by the underlying container to its …","","","","","","","","","","","Returns the serialized version of this <code>Multiaddr</code>.","","","","","","","","","","","","","","","","","","","","","","","The multihash is invalid.","Error when turning bytes into a <code>MultihashRef</code>.","A multihash made of a code and a slice of data.","","","","","Returns an iterator to a list of buffers that, when …","","","","","","","Returns the data stored in this multihash.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Checks whether <code>input</code> is a valid multihash.","Checks whether <code>input</code> is a valid multihash.","Returns the code stored in this multihash.","Builds a multihash from the “identity” hash algorithm …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Turns this multihash into a <code>Vec&lt;u8&gt;</code>.","","","","","","","","","","Ed25519 key doesn’t have a correct length.","Error decoding the Base58 encoding.","Error when decoding Base58 encoding.","Failed to decode bytes into a multihash.","An Ed25519 public key.","Error when turning bytes into a <code>PeerId</code>.","Error potentially returned by …","The algorithm used in the multihash isn’t identity or …","Multihash uses the identity algorithm, but the data isn’…","Decoded bytes aren’t a valid <code>PeerId</code>.","Error when parsing a string to a <code>PeerId</code>.","Identifier of a node of the network.","Error decoding the Protobuf message.","Public key of a node’s identity.","Call to <code>PublicKey::verify</code> has failed. No reason is …","Public key algorithm unknown.","Algorithms other than Ed25519 aren’t supported.","","","","","","","","","","","","","","","","Returns a raw bytes representation of this <code>PeerId</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Checks whether <code>data</code> is a valid <code>PeerId</code>.","Decode a public key from a Protobuf structure, e.g. read …","Builds the <code>PeerId</code> corresponding to a public key.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns a raw bytes representation of this <code>PeerId</code>.","Convert the <code>PublicKey</code> into the corresponding <code>PeerId</code>.","","Returns a base-58 encoded string of this <code>PeerId</code>.","","","Encode the public key into a Protobuf structure for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies whether the given signature is valid for the …","","","","","","","","Configuration for a <code>Peers</code>.","","","Problem on the connection level.","Error at the connection level.","","See <code>Peers::connection_state</code>.","","","Substream is now desired. If the state was already “…","Substream is now desired. If the peer has refused this …","See <code>Peers::set_peer_notifications_out_desired</code>.","Refused a notifications substream because we already have …","Connection was fully established.","Event happening over the network. See <code>Peers::next_event</code>.","Connection has finished its handshake.","Error potentially returned by <code>Peers::in_notification_accept</code>…","See <code>Event::RequestIn</code>.","Error that can happen while processing an inbound …","Received an incoming substream, but this substream has …","Connection was still handshaking and was incoming.","State machine dedicated to a single multi-stream …","","Substream is no longer desired. Close any existing …","","Received a notification on a notifications substream of a …","Remote has closed a previously-open inbound notifications …","","A peer would like to open a notifications substream with …","A previously-emitted <code>Event::NotificationsInOpen</code> is now …","A previously open outbound substream has been closed by …","","A handshaking outbound substream has been accepted by the …","The request is now obsolete, either because the connection …","","","Remote hasn’t responded in time to a ping.","See <code>Peers::start_request</code>.","Connection was still handshaking and was outgoing.","","","Queue of notifications with that peer is full.","Error potentially returned by <code>Peers::queue_notification</code>.","","","Received a request from a request-response protocol.","A previously-emitted <code>Event::RequestIn</code> is now obsolete.","Outcome of a request started using <code>Peers::start_request</code>.","A connection has stopped.","Reason why a connection is shutting down. See …","See <code>Event::StartShutdown</code> and <code>Event::Shutdown</code>.","State machine dedicated to a single single-stream …","","","","","Inserts a multi-stream incoming connection in the state …","Inserts a multi-stream outgoing connection in the state …","Inserts a single-stream incoming connection in the state …","Inserts a single-stream outgoing connection in the state …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Equivalent to calling <code>Peers::queue_notification</code> for all …","Returns <code>true</code> if it is allowed to call …","Returns <code>true</code> if if it possible to send requests (i.e. …","","","","","","","","","","","","","","","Close an existing outgoing substream to the given peer, or …","","","Returns the state of the given connection.","Capacity to initially reserve to the list of connections.","","","","","","","","","","","","","","","","","","","If <code>true</code>, the connection has finished its handshaking phase.","Returns all the non-handshaking connections that are …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the list of peer-substream combinations not marked …","","","Amount of time after which a connection handshake is …","Returns all the handshaking connections that are expected …","","","Responds to a <code>Event::NotificationsInOpen</code> by accepting the …","Responds to a <code>Event::NotificationsInOpen</code> by refusing the …","","","Injects into the state machine a message generated by …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum number of substreams that each remote can have …","Creates a new <code>Peers</code>.","Returns the next event produced by the service.","Returns the Noise key originally passed as …","Key used for the encryption layer. This is a Noise static …","Returns the list the overlay networks originally passed as …","","Returns the number of connections we have a substream with.","Open a new outgoing substream to the given peer. The …","Returns the list of peers for which we have a fully …","<code>true</code> if the connection is outgoing.","","","Capacity to initially reserve to the list of peers.","Returns an iterator to the list of <code>PeerId</code>s that we have an …","Name of the ping protocol on the network.","Pulls a message that must be sent to a connection.","Adds a notification to the queue of notifications to send …","Seed for the randomness within the networking state …","Returns the list the request-response protocols originally …","","Responds to a previously-emitted <code>Event::RequestIn</code>.","Sets the “desired” flag of the given <code>PeerId</code>.","Sets the given combinations of notification protocol and …","If <code>true</code>, the connection is shutting down.","Sends a request to the given peer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the list of peer-substream combinations marked as …","Returns the list of <code>PeerId</code>s that have been marked as …","","","","","","","","","","","","","","Identifier of the connection that has finished its …","Identifier of the connection that has started shutting …","Identifier of the connection that has started shutting …","Identifier of the connection on which the problem happened.","Identifier of the connection that has sent the request.","Error that happened.","Identity of the peer that was expected to be reached.","Handshake of the request sent by the peer. Opaque to this …","Identifier for this request.","Identifier for this request. Must be passed back when …","Identifier for this request.","Payload of the notification. Opaque to this state machine.","Notifications protocol the substream is about.","Notifications protocol the substream is about.","Notifications protocol the substream is about.","Notifications protocol the substream is about.","Notifications protocol the substream is about.","Number of established not-shutting-down connections with …","If <code>Ok</code>, the substream has been closed gracefully. If <code>Err</code>, a …","State of the connection and identity of the remote.","State of the connection and identity of the remote.","Identity of the peer on the other side of the connection.","Peer which opened the substream.","Peer which sent the request.","Peer which tries to open an inbound substream.","Peer the substream is open with.","Peer the substream is no longer open with.","Peer that sent the notification.","Peer the substream is no longer with.","Request-response protocol the request is about.","Reason for the shutdown.","Identifier for this request. Was returned by …","Identifier for this request. Must be passed back when …","Payload of the request, opaque to this state machine.","","If <code>Ok</code>, contains the handshake sent back by the remote. Its …","User data that was associated to this connection.","Notifications protocol the substream is about.","Identity of the peer that was expected to be reached after …","Number of other established not-shutting-down connections …","Identity of the peer on the other side of the connection.","See <code>ReadWrite::incoming_bytes_iter</code>.","","Discards the first <code>num</code> bytes of <code>ReadWrite::incoming_buffer</code> …","Discards the first <code>num</code> bytes of <code>ReadWrite::outgoing_buffer</code> …","","","","","","","","","Sets the writing side of the connection to closed.","Shortcut to <code>ReadWrite::advance_read</code>, passing as parameter …","Returns the argument unchanged.","Returns the argument unchanged.","Pointer to a buffer of socket data ready to be processed.","Returns the size of the data available in the incoming …","Returns an iterator that pops bytes from …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns true if the connection should be considered dead. …","","","Pointer to two consecutive buffers of uninitialized data. …","Returns the size of the available outgoing buffer.","Extracts a certain number of bytes from …","Total number of bytes that have been read from …","","","","","","","","","","Sets <code>ReadWrite::wake_up_after</code> to <code>min(wake_up_after, after)</code>.","If <code>Some</code>, the socket must be waken up after the given <code>TNow</code> …","Copies as much as possible from the content of <code>data</code> to …","Copies the content of <code>data</code> to <code>ReadWrite::outgoing_buffer</code> …","Total number of bytes that have been written to …","Configuration for <code>websocket_client_handshake</code>.","Negotiated WebSocket connection.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Values to pass for the <code>Host</code> HTTP header. Example values …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Socket to negotiate WebSocket on top of.","","","","","","","URL to pass to the server during the HTTP handshake. …","","","Negotiates the WebSocket protocol (including the HTTP-like …","","Substrate/Polkadot-specific protocols on top of libp2p.","","Data structure containing the k-buckets and the state of …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","K-buckets are a collection used to store a partial view of …","Initializes a new empty data structure with empty …","","","","","","","","K-bucket is full.","K-bucket is full.","Error that can happen in <code>VacantEntry::insert</code>.","K-buckets, as popularized by the Kademlia algorithm, and …","Requested key is the same as local key. The local key is …","Can’t insert the local key into the k-buckets.","","","Error that can happen in <code>Entry::or_insert</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the list of entries in the k-buckets, ordered by …","Inserts or updates an entry in the buckets.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value corresponding to the given key. Returns …","Returns the value corresponding to the given key. Returns …","","Inserts the entry in the vacant slot. Returns an error if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","If <code>self</code> is <code>Entry::Occupied</code>, returns the inner <code>OccupiedEntry</code>…","Iterates over all the peers in the k-buckets.","Iterates over all the peers in the k-buckets.","Returns the local key that was passed to <code>KBuckets::new</code>.","","","Updates the state of this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks should be returned in ascending number, starting …","Authorities author blocks and participate in the consensus.","Error while parsing a <code>multiaddr::Multiaddr</code> in the response.","Error while parsing a <code>peer_id::PeerId</code> in the response.","Response isn’t a response to a find node request.","Response isn’t a response to a storage proof request.","Decoded block announcement notification.","Error potentially returned by …","Decoded handshake sent or received when opening a block …","Block sent in a block response.","Description of a block request that can be sent to a peer.","Which block the remote must return first.","Whether the first block should be the one with the highest …","Which fields should be present in the response.","","","Description of a call proof request that can be sent to a …","","","","","Start iterating at a key in a child trie.","","","Error potentially returned by …","Error potentially returned by <code>decode_block_request</code>.","Error potentially returned by <code>decode_block_response</code>.","Error potentially returned by <code>decode_find_node_response</code>.","Error potentially returned by <code>decode_grandpa_notification</code>.","Error potentially returned by …","Error potentially returned by <code>decode_identify_response</code>.","Error potentially returned by <code>decode_state_response</code>.","Error potentially returned by …","Blocks should be returned in descending number, starting …","Full nodes store the state of the chain. They are part of …","","Response to a GrandPa warp sync request.","Response to a GrandPa warp sync request.","Hash of the block.","Description of a response to an identify request.","Block hash length isn’t correct.","Invalid block number passed.","Value in the direction field is invalid.","Hash length isn’t of the correct length.","List of justifications isn’t in a correct format.","Couldn’t decode one of the multiaddresses.","Couldn’t decode the public key of the remote.","Light nodes are the lowest priority nodes.","Start iterating at a key in the main trie.","","Start block field is missing.","","","Number of the block, where 0 would be the genesis block.","","","","","","Failed to decode response as a storage proof.","Error while decoding the Protobuf encoding.","Error while decoding the Protobuf encoding.","Error while decoding the Protobuf encoding.","Error while decoding the Protobuf encoding.","Error while decoding the Protobuf encoding.","Error while decoding the Protobuf encoding.","Error while decoding the Protobuf encoding.","Role a node reports playing on the network.","Description of a state request that can be sent to a peer.","See <code>StateRequest::start_key</code>.","Passed as parameter to …","","Description of a storage proof request that can be sent to …","Requested fields contains bits that are unknown.","","","","","Zero blocks requested.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Authority that signed the pre-vote. Must be part of the …","","","Hash of the best block according to this node.","Height of the best block according to this node.","Hash of the block to make the request against.","Hash of the block to request the storage of.","Hash of the block to request the storage of.","","Block body, if requested. Each item (each <code>Vec&lt;u8&gt;</code>) is a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the bytes corresponding to a block request.","Builds the bytes corresponding to a block response.","Builds the bytes corresponding to a call proof request.","Builds a wire message to send on the Kademlia …","Builds the bytes corresponding to a block request.","Builds the bytes corresponding to a state request.","Builds the bytes corresponding to a storage proof request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decodes a block announcement.","Decodes a SCALE-encoded block announces handshake.","Decodes a blocks request.","Decodes a response to a block request.","Decodes a response to a request built using …","Attempt to decode the given SCALE-encoded Grandpa …","Decodes a SCALE-encoded GrandPa warp sync response.","Decodes a response to an identify request.","Decodes a response to a state request.","Decodes a response to a storage proof request or a call …","Number of blocks to request. The remote is free to return …","Whether the first block should be the one with the highest …","Ed25519 public key of the local node.","Turns a block announcement into its SCALE-encoding ready …","Turns a block announces handshake into its SCALE-encoding …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which fields should be present in the response.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of fragments that consist in the proof.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Hash of the genesis block according to this node.","","","","","Block hash.","","SCALE-encoded block header, if requested.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the block is the new best block of the announcer.","If <code>true</code>, the last fragment corresponds to the highest …","","List of justifications, if requested and available.","List of storage keys to query.","List of addresses the local node is listening on. This …","","Name of the runtime function to call.","Address of the sender of the identify request, as seen …","Iterator to buffers of bytes to be concatenated then …","","","","Names of the protocols supported by the local node.","Role a node reports playing on the network.","","","","","SCALE-encoded header in the announce.","Header of a block in the chain.","Justification that proves the finality of …","Returns the SCALE encoding of this enum. Always guaranteed …","Returns an iterator to list of buffers which, when …","Returns an iterator to list of buffers which, when …","","","","","","Ed25519 signature made with …","First block that the remote must return.","Response shouldn’t contain any key lexicographically …","","","Hash of the block concerned by the pre-vote.","","","Height of the block concerned by the pre-voteey of the child trie.","Key within the child trie.","Error while decoding a received block announce.","Error while decoding the handshake of the block announces …","Error while decoding a received blocks request.","Error while decoding a received Grandpa notification.","Received an invalid identify request.","Received a new block announce from a peer.","","Error returned by <code>ChainNetwork::start_blocks_request</code>.","A remote has sent a request for blocks.","See <code>BlocksRequestError</code>.","","Error returned by <code>ChainNetwork::start_call_proof_request</code>.","Configuration for a specific overlay network.","An attempt has been made to open the given chain, but a …","","","Data structure containing the list of all connections, …","Configuration for a <code>ChainNetwork</code>.","Established a transport-level connection (e.g. a TCP …","","","","Error while decoding the response returned by the peer.","","","","","Failed to decode the response.","A transport-level connection (e.g. a TCP socket) has been …","Error during <code>ChainNetwork::start_kademlia_discovery_round</code>.","Response returned by the remote doesn’t contain any …","Undecoded but valid block announce.","Undecoded but valid block announce handshake.","Undecoded but valid GrandPa commit message.","Undecoded but valid GrandPa warp sync response.","Undecoded but valid Merkle proof.","Undecoded but valid state response.","Error at a specific index in the response.","Event generated by <code>ChainNetwork::next_event</code>.","Error during the request.","Mismatch between the genesis hash of the remote and the …","Received a GrandPa commit message from the network.","Received a  GrandPa neighbor packet from the network. This …","","","Error returned by …","A remote has sent a request for identification information.","","","","Error in an incoming substream.","The given peer has opened a block announces substream with …","The header has an extrinsics root that doesn’t match the …","The hash of the header doesn’t match the hash provided …","The header has an invalid format.","Start of the response doesn’t correspond to the …","","","Error during <code>ChainNetwork::start_kademlia_find_node</code>.","Identifier for a Kademlia iterative query.","One of the requested fields is missing from the block.","State machine dedicated to a single multi-stream …","","Not currently connected to any other node.","Block request doesn’t request headers, and as such its …","Error that can happen when trying to open an outbound …","","","Identifier of a pending connection requested by the …","See <code>Event::ProtocolError</code>.","Error in the protocol in a connection, such as failure to …","","The remote is incapable of answering this specific request.","The remote is incapable of answering this specific request.","Error while waiting for the response from the peer.","","","","","Error during the request.","","Response to an outgoing request.","","State machine dedicated to a single single-stream …","","","User must start connecting to the given multiaddress.","","","Error returned by <code>ChainNetwork::start_state_request</code>.","","Error returned by <code>ChainNetwork::start_storage_proof_request</code>…","Error in the underlying protocol.","Adds a multi-stream incoming connection to the state …","Adds a single-stream incoming connection to the state …","<code>true</code> if incoming block requests are allowed.","Must be passed the SCALE-encoded transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the encoded bytes of the commit message.","Returns the encoded bytes of the warp sync message.","","Hash of the best block according to the local node.","Height of the best block according to the local node.","Returns the value passed as <code>ChainConfig::block_number_bytes</code>…","Number of bytes of the block number in the networking …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if it is allowed to call …","Returns <code>true</code> if if it possible to send requests (i.e. …","List of blockchain peer-to-peer networks to be connected …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the highest block considered final by the node.","Capacity to initially reserve to the list of connections.","Returns the decoded version of the handshake.","Returns the decoded version of the announcement.","Returns the decoded version of the commit message.","Returns the SCALE-encoded Merkle proof.","Returns the decoded version of the warp sync message.","Returns the Merkle proof of the state response.","Inserts the given list of nodes into the list of known …","Returns a list of nodes (their <code>PeerId</code> and multiaddresses) …","","","","","","","","","","<code>PeerId</code> that is expected to be reached with this connection …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optional identifier to insert into the networking protocol …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Hash of the genesis block (i.e. block number 0) according …","","","","If <code>Some</code>, the chain uses the GrandPa networking protocol.","Amount of time after which a connection handshake is …","","","","Identifier of this connection request. Must be passed back …","","Injects into the state machine a message generated by …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the encoded bytes of the commit message.","Returns <code>true</code> if this is caused by networking issues, as …","Maximum number of addresses kept in memory per network …","Address to attempt to connect to.","Initializes a new <code>ChainNetwork</code>.","Returns the next event produced by the service.","Allocates a <code>PendingId</code> and returns a <code>StartConnect</code> …","Returns the Noise key originally passed as …","Key used for the encryption layer. This is a Noise static …","Time at the moment of the initialization of the service.","Returns the number of chains. Always equal to the length …","Returns the number of established TCP connections, both …","Returns the number of peers we have a substream with.","Returns the list of peers for which we have a fully …","","","","","Capacity to initially reserve to the list of peers.","Returns an iterator to the list of <code>PeerId</code>s that we have an …","After calling <code>ChainNetwork::next_start_connect</code>, notifies …","After calling <code>ChainNetwork::next_start_connect</code>, notifies …","After calling <code>ChainNetwork::next_start_connect</code>, notifies …","","Seed for the randomness within the networking state …","Queue the response to send back.","This function might generate a message destined a …","","","This function might generate a message destined a …","Set of authorities that will be used by the node to try …","Modifies the best block of the local node. See …","Update the state of the local node with regards to GrandPa …","","Sends a blocks request to the given peer.","Sends a blocks request to the given peer.","Sends a call proof request to the given peer.","This function might generate a message destined a …","Performs a round of Kademlia discovery.","Sends a Kademlia “find node” request to a single peer, …","Sends a state request to a peer.","Sends a storage request to the given peer.","When the attempt should be considered as a failure. You …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the slot assignment of the given peer, if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","Problem in question.","Index in the response where the problem happened.","Extrinsics root that was calculated from the body.","Extrinsics root found in the header.","","Hash of the best block according to this node.","Height of the best block according to this node.","","","","","Index of the chain the block relates to.","Index of the chain the message relates to.","Index of the chain the commit message relates to.","Index of the chain concerned by the request.","","Information about the request.","Problem that happened.","Error that happened.","","","","","","","","Identity of the sender of the block announce.","Identity of the sender of the message.","Identity of the sender of the message.","Peer that has caused the protocol error.","Remote that has sent the request.","Remote that has sent the request.","","Identifier of the request. Necessary to send back the …","Identifier of the request. Necessary to send back the …","","","","Role the node reports playing on the network.","Type of the slot that the peer has.","State of the remote.","Type of the slot that the peer had and no longer has.","Type of the slot that the peer had and no longer has.","Hash of the genesis block of the chain according to the …","Hash of the genesis block of the chain according to the …","All syncing strategies (optimistic, warp sync, all forks) …","<em>All-forks</em> header and body syncing.","Optimistic header and body syncing.","Parachains and parathreads syncing.","Warp syncing.","All blocks in the ancestry search response were already in …","","No block ready to be processed.","Finality proof concerns block that was already finalized.","Announced block has already been successfully verified and …","","Outcome of calling <code>AllSync::block_announce</code>.","","","See <code>AllSync::best_block_storage</code>.","State of the processing of blocks.","Error that can happen when verifying a block body.","Requesting blocks from the source is requested.","Requesting blocks from the source is requested.","Configuration for the <code>AllSync</code>.","See <code>Config::full</code>.","Block uses a different consensus than the rest of the …","See <code>AllSync::desired_requests</code>.","Header cannot be verified now and has been silently …","Message has been silently discarded.","Header verification failed.","Block verification failed.","","Information about the outcome of verifying a finality …","Loading a storage value of the finalized block is required …","Fetching the key of the finalized block storage that …","Fetching the list of keys of the finalized block with a …","Problem while verifying GrandPa commit.","See <code>AllSync::grandpa_commit_message</code>.","GrandPa commit cannot be verified yet and has been stored …","Sending a Grandpa warp sync request is requested.","Sending a Grandpa warp sync request is requested.","Response to a GrandPa warp sync request.","Error while verifying a header and body.","","Error while verifying a header.","","Header is ready to be verified. Calling …","Error that can happen when verifying a block header.","Outcome of calling <code>HeaderVerify::perform</code>.","Failed to decode announce header.","Error while decoding a header.","Problem while verifying justification.","Proof verification successful. The block and all its …","Announced block is known to not be a descendant of the …","Source has given blocks that aren’t part of the …","Request was no longer interesting for the state machine.","Outcome of calling <code>AllSync::process_one</code>.","Content of the response has been queued and will be …","Message has been queued for later verification.","See <code>AllSync::desired_requests</code>.","Identifier for a request in the <code>AllSync</code>.","Outcome of injecting a response in the <code>AllSync</code>.","Sending a call proof query is requested.","Sending a call proof query is requested.","Compiling a new runtime is necessary as part of the …","Compiling a runtime is required in order to continue.","Identifier for a source in the <code>AllSync</code>.","Status of the synchronization.","Loading a storage value is required in order to continue.","Sending a storage query is requested.","Sending a storage query is requested.","Fetching the key that follows a given one is required in …","Fetching the list of keys with a given prefix is required …","Header cannot be verified now because its parent hasn’t …","Header has been successfully verified.","Block has been successfully verified.","Regular syncing mode.","Announced block is too old to be part of the finalized …","","Block can’t be verified as it uses an unknown consensus …","The block verification has failed. The block is invalid …","Ready to start verifying a header and a body.","Ready to start verifying a proof of finality.","Ready to start verifying a header.","Ready to start verifying a warp sync fragment.","Warp syncing algorithm has reached the head of the …","Content of the response is erroneous in the context of …","Response has made it possible to finish warp syncing.","","","","Warp syncing algorithm is downloading Grandpa warp sync …","Inserts a new request in the data structure.","Adds a new source to the sync state machine.","If <code>false</code>, blocks containing digest items with an unknown …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>chain_information::ChainInformationRef</code> struct …","Returns consensus information about the current best block …","Returns the hash of the best block.","Returns the header of the best block.","Returns the number of the best block.","Returns access to the storage of the best block.","Injects a block announcement made by a source into the …","Returns the value that was initially passed in …","Number of bytes used when encoding/decoding the block …","Pre-allocated capacity for the number of blocks between …","Inject a response to a previously-emitted blocks request.","List of SCALE-encoded extrinsics that form the block’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the runtime.","Inject a response to a previously-emitted call proof …","Information about the latest finalized block and its …","","","","","","","","","","","","","","","","","Returns the details of a request to start towards a source.","Number of blocks to download ahead of the best verified …","","","","","","","","","","","","","","","","Returns the header of the finalized block.","Compiled runtime code of the finalized block.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If <code>Some</code>, the block bodies and storage are also …","Extra fields for full block verifications.","Returns the storage value at the given key. <code>None</code> if this …","","","Update the state machine with a Grandpa commit message …","Inject a failure to a previously-emitted GrandPa warp sync …","Inject a successful response to a previously-emitted …","Returns the hash of the block to be verified.","Returns the hash of the block to be verified.","","","Header of the block.","Returns the height of the block to be verified.","Returns the height of the block to be verified.","","","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if it is believed that we are near the head …","SCALE-encoded justifications of this block, if any.","Returns the key whose value must be passed to …","","Returns the list of sources for which …","Maximum number of blocks of unknown ancestry to keep in …","Maximum number of simultaneous pending requests made …","Initializes a new state machine.","Returns the header of all known non-finalized blocks in …","Returns the header of all known non-finalized blocks in …","Caps the number of blocks to request to <code>max</code>.","Caps the number of blocks to request to <code>max</code>.","Returns a list of requests that are considered obsolete …","List of changes to the off-chain storage that this block …","","","Perform the verification.","Perform the verification.","Perform the verification.","Returns the prefix whose keys to load.","","Process the next block in the queue of verification.","Returns the identifier and user data of the source that …","Removes a source from the state machine. Returns the user …","Returns the runtime built against this block.","","Returns the SCALE-encoded header of the block about to be …","","Header of a block in the chain.","Justification that proves the finality of …","","Returns the current best block of the given source.","Returns true if the source has earlier announced the block …","Returns the number of ongoing requests that concern this …","Returns the list of sources in this state machine.","Pre-allocated capacity for the number of block sources.","Start the verification process.","State trie version indicated by the runtime. All the …","Returns the current status of the syncing.","Inject a response to a previously-emitted storage proof …","Changes to the storage made by this block compared to its …","","","","","","","","","","Try register a new block that the source is aware of.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","User data associated to the block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Caps the number of blocks to request to <code>max</code>.","Caps the number of blocks to request to <code>max</code>.","Height of the announced block.","Height of the currently finalized block.","Error that happened.","True if the newly-verified block is considered the new …","State machine yielded back. Use to continue the processing.","State machine yielded back. Use to continue the processing.","User data that was passed to <code>HeaderVerify::perform</code> and is …","<code>True</code> if the <code>first_block_hash</code> is the response should …","Hash of the block whose storage is requested.","Hash of the block whose call is made against.","Hash of the first block to request. <code>None</code> if not known.","Height of the first block to request.","Name of the function to be called.","Keys whose values is requested.","Number of blocks the request should return.","Concatenated SCALE-encoded parameters to provide to the …","<code>True</code> if bodies should be included in the response.","<code>True</code> if headers should be included in the response.","<code>True</code> if the justification should be included in the …","Merkle value of the root of the storage trie of the block.","Hash of the known finalized block. Starting point of the …","List of finalized blocks, in decreasing block number.","If <code>true</code>, this operation modifies the best block of the …","Error that happened.","True if the newly-verified block is considered the new …","State machine yielded back. Use to continue the processing.","State machine yielded back. Use to continue the processing.","User data that was passed to <code>HeaderVerify::perform</code> and is …","Error that happened.","Runtime of the newly finalized block.","Storage value at the <code>:code</code> key of the finalized block.","Storage value at the <code>:heappages</code> key of the finalized block.","","","<code>True</code> if the <code>first_block_hash</code> is the response should …","Hash of the block whose storage is requested.","Hash of the block whose call is made against.","Hash of the first block to request. <code>None</code> if not known.","Height of the first block to request.","Name of the function to be called.","Keys whose values is requested.","Number of blocks the request should return.","Concatenated SCALE-encoded parameters to provide to the …","<code>True</code> if bodies should be included in the response.","<code>True</code> if headers should be included in the response.","<code>True</code> if the justification should be included in the …","Hash of the known finalized block. Starting point of the …","List of block headers that were pending verification and …","Hash of the highest block that is proven to be finalized.","Hash of the highest block that is proven to be finalized.","Height of the block indicated by …","Height of the block indicated by …","Source from which the fragments are currently being …","Source from which the chain information is being …","Result of calling <code>FinishAncestrySearch::add_block</code>.","See <code>FinishAncestrySearch::add_block</code> and <code>AddBlock</code>.","See <code>FinishAncestrySearch::add_block</code> and <code>AddBlock</code>.","Outcome of calling <code>AllForksSync::prepare_add_source</code>.","See <code>AddSource</code> and <code>AllForksSync::prepare_add_source</code>.","See <code>AddSource</code> and <code>AllForksSync::prepare_add_source</code>.","See <code>AddSource</code> and <code>AllForksSync::prepare_add_source</code>.","","No processing is necessary.","Finality proof concerns block that was already finalized.","The block is already in the list of verified blocks.","Announced block has already been successfully verified and …","The block is already in the list of unverified blocks.","Error when adding a block using …","See <code>BlockAnnounceOutcome</code> and <code>AllForksSync::block_announce</code>.","See <code>BlockAnnounceOutcome</code> and <code>AllForksSync::block_announce</code>.","The best block of the source has already been verified by …","The best block of the source is already known to this …","Outcome of calling <code>AllForksSync::block_announce</code>.","State of the processing of blocks.","Configuration for the <code>AllForksSync</code>.","Block uses a different consensus than the rest of the …","Header verification failed.","Finality proof verification to be performed.","A justification is ready for verification.","Information about the outcome of verifying a finality …","See <code>AllForksSync::finish_ancestry_search</code>.","Problem while verifying GrandPa commit.","See <code>AllForksSync::grandpa_commit_message</code>.","GrandPa commit cannot be verified yet and has been stored …","Header verification to be performed.","A header is ready for verification.","Error that can happen when verifying a block header.","Outcome of calling <code>HeaderVerify::perform</code>.","Failed to decode announce header.","Failed to decode block header.","Problem while verifying justification.","Announced block is already known by the state machine but …","Verification successful. The block and all its ancestors …","The block height is equal to the locally-known finalized …","The best block of the source is older or equal to the …","Failed to parse message. Commit has been silently …","State of the processing of blocks.","Message has been queued for later verification.","Identifier for a request in the <code>super::AllForksSync</code>.","Information about a blocks request to be performed on a …","","Header has been successfully verified.","Announced block is too old to be part of the finalized …","Height of the block is below the height of the finalized …","Provided block isn’t a block that we expect to be added.","Announced block isn’t in the state machine.","The best block of the source isn’t in this state machine …","The block hasn’t been heard of before.","Block can’t be verified as it uses an unknown consensus …","The block verification has failed. The block is invalid …","Adds a block coming from the response that the source has …","Registers a new block that the source is aware of.","Inserts a new request in the data structure.","Inserts a new source in the state machine.","Inserts a new source in the state machine.","Inserts a new source in the state machine, plus the best …","If <code>false</code>, blocks containing digest items with an unknown …","Call in response to a blocks request having failed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>chain_information::ChainInformationRef</code> struct …","Returns the hash of the best block.","Returns the header of the best block.","Returns the number of the best block.","Update the source with a newly-announced block.","Returns the value that was initially passed in …","Number of bytes used when encoding/decoding the block …","Gives access to the user data stored for a block of the …","Gives access to the user data stored for a block of the …","Pre-allocated capacity for the number of blocks between …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Do not update the state machine with this block. …","Do not update the state machine with this block. …","Do not actually proceed with the verification.","Do not actually proceed with the verification.","Information about the latest finalized block and its …","","","","","","","","","Returns the details of a request to start towards a source.","","","","","","","Returns the header of the finalized block.","Notifies of the end of the response, and returns back the …","Call in response to a blocks request being successful.","Hash of the first block to request.","Height of the first block to request.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If true, the block bodies and storage are also …","","","Update the state machine with a Grandpa commit message …","Returns the hash of the block to be verified.","","","Returns the height of the block to be verified.","","","Insert the block in the state machine, with the given user …","Inserts the block in the state machine and keeps track of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the list of sources for which …","Maximum number of blocks of unknown ancestry to keep in …","Maximum number of simultaneous pending requests made …","Initializes a new <code>AllForksSync</code>.","Returns the header of all known non-finalized blocks in …","Returns the header of all known non-finalized blocks in …","Number of blocks the request should return.","Returns a list of requests that are considered obsolete …","","","Perform the verification.","Perform the verification.","Starts the process of inserting a new source in the …","Process the next block in the queue of verification.","Removes the source from the <code>AllForksSync</code>.","Replace the existing user data of the block.","Returns the current best block of the given source.","Returns true if the source has earlier announced the block …","Returns the number of ongoing requests that concern this …","Collection of sources used for the <code>all_forks</code> syncing.","Returns the list of sources in this state machine.","Pre-allocated capacity for the number of block sources.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the state machine to keep track of the fact that …","Gives access to the user data of the block.","Gives access to the user data of the block.","Gives access to the user data of the block.","","","","","","","","","","","","","","","","","","","","","","","","","List of block headers that were pending verification and …","Height of the announced block.","Height of the currently finalized block.","List of finalized blocks, in decreasing block number.","If <code>true</code>, this operation modifies the best block of the …","Error that happened.","True if the newly-verified block is considered the new …","State machine yielded back. Use to continue the processing.","State machine yielded back. Use to continue the processing.","The state machine. The <code>AllForksSync::process_one</code> method …","Collection of sources and which blocks they know about.","Identifier for a source in the <code>AllForksSources</code>.","Registers a new block that the source is aware of.","Registers a new block that the source is aware of and sets …","Add a new source to the container.","","","","","Returns the current best block of the given source.","","","","","","","","Returns <code>true</code> if the <code>SourceId</code> is present in the collection.","","","","Returns the finalized block height this state machine …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns true if the data structure is empty.","Returns the list of all <code>SourceId</code>s.","Returns the list of sources for which …","Returns the number of sources in the data structure.","Creates a new container. Must be passed the height of the …","Returns the number of unique blocks in the data structure.","","Removes the source from the <code>AllForksSources</code>.","Removes a block from the list of blocks the sources are …","Updates the height of the finalized block.","Returns true if <code>AllForksSources::add_known_block</code> or …","Removes a block from the list of blocks the source is …","","","","","","","","Returns the list of all user datas of all sources.","","","","","See <code>OptimisticSync::best_block_storage</code>.","State of the processing of blocks.","Start the processing of a block verification.","Configuration for the <code>OptimisticSync</code>.","See <code>Config::full</code>.","Output of <code>OptimisticSync::disassemble</code>.","See <code>Disassemble::sources</code>.","Processing of the justification is over. The best block …","Loading a storage value of the finalized block is required …","Fetching the key of the finalized block storage that …","Fetching the list of keys of the finalized block with a …","","Error while verifying a header and body.","Error while verifying a header.","No processing is necessary.","Error while decoding a header.","Outcome of the verification of a justification.","Start the processing of a justification verification.","Processing of the block is over.","Received block isn’t a child of the current best block.","","Optimistic headers-only syncing.","State of the processing of blocks.","","Request that should be emitted towards a certain source.","Identifier for an ongoing request in the <code>OptimisticSync</code>.","","Iterator that drains requests after a source has been …","An issue happened when verifying the block or its …","An issue happened when verifying the justification, …","Problem that happened and caused the reset.","Compiling a new runtime is necessary as part of the …","Compiling a runtime is required in order to continue.","Identifier for a source in the <code>OptimisticSync</code>.","Loading a storage value is required in order to continue.","Fetching the key that follows a given one is required in …","Fetching the list of keys with a given prefix is required …","","","","Inform the <code>OptimisticSync</code> of a new potential source of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a <code>chain_information::ChainInformationRef</code> struct …","Returns consensus information about the current best block …","Returns the hash of the best block.","Returns the header of the best block.","Returns the number of the best block.","Best block that the source has reported having.","Returns access to the storage of the best block.","Height of the block to request.","Returns the value that was initially passed in …","Number of bytes used when encoding/decoding the block …","Pre-allocated capacity for the number of blocks between …","List of SCALE-encoded extrinsics that form the block’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the runtime.","Information about the latest finalized block and its …","Information about the latest finalized block and its …","","","","","","","Returns an iterator that yields all requests that could be …","Disassembles the state machine into its raw components.","Number of blocks to download ahead of the best block.","","","","","","","","Returns the header of the finalized block.","Compiled runtime code of the finalized block.","Update the <code>OptimisticSync</code> with the information that the …","Update the <code>OptimisticSync</code> with the successful outcome of a …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Extra fields for full block verifications.","If <code>Some</code>, the block bodies and storage are also …","Returns the storage value at the given key. <code>None</code> if this …","","","Returns the hash of the block about to be verified.","","","Header of the block.","Returns the height of the block about to be verified.","Identifier that the source had.","","","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","Updates the <code>OptimisticSync</code> with the fact that a request …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if <code>Config::full</code> was <code>Some</code> at initialization.","SCALE-encoded justification of this block, if any.","Returns the key whose value must be passed to …","","Returns a value that compares superior or equal to any …","Returns a value that compares inferior or equal to any …","","Builds a new <code>OptimisticSync</code>.","","Returns the header of all known non-finalized blocks in …","Returns the header of all known non-finalized blocks in …","Number of blocks to request. This might be equal to …","Returns an iterator that yields all the requests whose …","List of changes to the off-chain storage that this block …","","","Verify the justification.","Returns the prefix whose keys to load.","","Process the next block in the queue of verification.","Updates the best known block of the source.","Inform the <code>OptimisticSync</code> that a source of blocks is no …","List of the requests that were active.","Returns the runtime built against this block.","","Returns the SCALE-encoded header of the block about to be …","","","","Returns the current best block of the given source.","Source where to request blocks from.","Returns the number of ongoing requests that concern this …","Returns the list of sources in this state machine.","List of sources that were within the state machine.","Pre-allocated capacity for the number of block sources.","Start the verification of the block.","State trie version indicated by the runtime. All the …","Changes to the storage made by this block compared to its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","User data associated to the block.","","Opaque value passed to <code>OptimisticSync::add_source</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the best block before the reset.","Problem that happened and caused the reset.","The state machine. The <code>OptimisticSync::process_one</code> method …","The state machine. The <code>OptimisticSync::process_one</code> method …","Problem that happened and caused the reset.","Blocks that have been finalized.","Height of the best block before the reset.","The state machine. The <code>OptimisticSync::process_one</code> method …","Error that can happen during the decoding.","The core was not occupied to begin with.","The candidate occupying the core was made available and …","An assumption being made about the state of an occupied …","Name of the runtime function to call in order to obtain …","Decoded persisted validation data.","The candidate occupying the core timed out and freed the …","","","","","","","","","","","","","","","","","Attempt to decode the return value of the …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Maximum legal size of a POV block, in bytes.","Opaque data representing the best block (or similar …","Produces the input to pass to the …","","","Returns the SCALE encoding of this type.","","","","","","","","","","","","","","","","Ready to verify the parameters of the chain against the …","Ready to verify the parameters of the chain against the …","Ready to build the runtime of the finalized chain.","Ready to build the runtime of the chain..","Warp syncing algorithm has reached the head of the …","Error building the chain information.","The configuration for <code>start_warp_sync()</code>.","Information about a request that the warp sync state …","Problem encountered during a call to <code>start_warp_sync()</code>.","Warp syncing is over.","","Warp syncing algorithm is downloading Grandpa warp sync …","Nothing to verify at the moment. The state machine is …","Warp syncing is in progress,","Warp syncing process now obtaining the chain information.","The storage item at <code>:heappages</code> is in an incorrect format.","Failed to verify Merkle proof.","Merkle proof is missing the necessary entries.","The chain doesn’t include any storage item at <code>:code</code>.","Warp sync requires fetching the key that follows another …","Chain doesn’t use the Grandpa finality algorithm.","Return value of <code>InProgressWarpSync::process_one</code>.","Information about a request to add to the state machine.","Identifier for a request in the warp sync state machine.","Error building the runtime of the chain.","A call proof should be started.","See <code>DesiredRequest::RuntimeCallMerkleProof</code>.","Identifier for a source in the <code>WarpSync</code>.","See <code>InProgressWarpSync::status</code>.","A storage request of the runtime code and heap pages …","See <code>DesiredRequest::StorageGetMerkleProof</code>.","The result of a successful warp sync.","Chain uses an unrecognized consensus mechanism.","Ready to verify a warp sync fragment.","Ready to verify a warp sync fragment.","The warp sync state machine.","","Error potentially returned by <code>start_warp_sync()</code>.","A warp sync request should be start.","See <code>DesiredRequest::WarpSyncRequest</code>.","Inserts a new request in the data structure.","Add a source to the list of sources.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the chain information that is considered verified.","Returns the value that was initially passed in …","Number of bytes used when encoding/decoding the block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the runtime of the chain.","Build the information about the chain.","The synced chain information.","","","","","","","","","","","","","Returns a list of requests that should be started in order …","","","","","","","Removes the given request from the state machine. Returns …","The runtime constructed in <code>VirtualMachineParamsGet</code>. …","Storage value at the <code>:code</code> key of the finalized block.","Storage value at the <code>:heappages</code> key of the finalized block.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","The list of requests that were added to the state machine.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start processing one CPU operation.","Returns the source that has sent the fragments that we are …","Removes a source from the list of sources. In addition to …","The initial capacity of the list of requests.","Injects a successful response and removes the given …","Returns a list of all known sources stored in the state …","The list of sources that were added to the state machine.","The initial capacity of the list of sources.","The chain information of the starting point of the warp …","Initializes the warp sync state machine.","Returns the current status of the warp syncing.","Injects a successful Merkle proof and removes the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify one warp sync fragment.","","","","","","","","","","","","","","","","Injects a successful response and removes the given …","Starting point of the warp syncing. The first fragment of …","Hash of the block to request the parameters against.","Hash of the header of the block the call should be made …","Name of the function of the call proof.","Keys whose values are requested.","Parameters of the call.","State trie root hash found in the header of the block.","See <code>DesiredRequest::WarpSyncRequest::block_hash</code>.","See <code>DesiredRequest::StorageGetMerkleProof::block_hash</code>.","See <code>DesiredRequest::RuntimeCallMerkleProof::block_hash</code>.","See <code>DesiredRequest::RuntimeCallMerkleProof::function_name</code>.","See <code>DesiredRequest::StorageGetMerkleProof::keys</code>.","See …","Hash of the highest block that is proven to be finalized.","Hash of the highest block that is proven to be finalized.","Height of the block indicated by …","Height of the block indicated by …","Source from which the fragments are currently being …","Source from which the chain information is being …","Transactions pool specialized for light clients usage.","General-purpose transactions pool.","Runtime call to obtain the transactions validity status.","Configuration for <code>LightPool::new</code>.","Data structure containing transactions. See the …","See <code>LightPool::prune_finalized_with_body</code>.","See <code>PruneBodyFinalized</code>.","See <code>LightPool::set_best_block</code>.","Identifier of a transaction stored within the <code>LightPool</code>.","Adds a block to the collection of blocks.","Inserts a new unverified transaction in the pool.","","","","","","","","","","","","","Returns the hash of the best block.","Hash of the finalized block.","Returns the user data associated with a given block.","Returns the user data associated with a given block.","Number of blocks to initially allocate memory for.","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of the finalized block at initialization.","Tries to find the transactions in the pool whose bytes are …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns <code>true</code> if the block with the given hash is present …","","Id of this transaction in the state machine.","List of transactions that were included in this block, …","List of transactions that weren’t included in a block of …","Index of the transaction within the finalized block.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns a list of transactions which have been validated …","Returns a list of transactions which have been validated …","Returns <code>true</code> if the given transaction has been included in …","Returns <code>true</code> if the given transaction has been …","Returns the list of blocks whose bodies aren’t present …","Initializes a new transactions pool.","Returns the number of transactions in the pool.","Returns the number of blocks between the oldest block …","","Removes from the pool as many blocks as possible from the …","Removes from the pool the transaction with the given …","List of transactions that were included in a block of the …","Returns the bytes associated with a given transaction.","SCALE-encoded transaction.","Sets the passed block as the new best block of the chain.","Sets the list of single-SCALE-encoded transactions that …","Sets the finalized block of the chain.","Sets the outcome of validating the transaction with the …","","","","Returns the user data associated with a given transaction.","Returns the user data associated with a given transaction.","Number of transactions to initially allocate memory for.","Returns the list of all transactions within the pool.","Returns the list of all transactions within the pool.","","","","","","","","","","","","","","","","","","","Returns a list of transactions whose state is “not …","User data associated to this block.","Opaque user data that was insert alongside with the …","","","","","","","Wraps around <code>Pool</code> while a new best block is being …","See <code>AppendBlock::block_transaction</code>.","Configuration for <code>Pool::new</code>.","Transaction to add is present in the list of non-included …","Data structure containing transactions. See the …","Identifier of a transaction stored within the <code>Pool</code>.","Transaction to add isn’t in the list of non-included …","See <code>AppendBlockTransaction::Unknown</code>.","Inserts a new unverified transaction in the pool.","Adds a block to the chain tracked by the transactions pool.","","","","","","","","","","","","","Returns the best block height according to the pool.","Adds a single-SCALE-encoded transaction to the block being …","","","","","","","","","","","","","Number of transactions to initially allocate memory for.","","","","","","","Height of the finalized block at initialization.","Tries to find a transaction in the pool whose bytes are …","Finishes the block insertion process.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the block height at which the given transaction …","Returns the transactions from the pool that haven’t been …","Inserts the transaction in the pool.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns true if the pool is empty.","Returns the list of all transactions within the pool.","Returns the list of all transactions within the pool.","Returns the number of transactions in the pool.","Initializes a new transactions pool.","","Removes from the pool the transaction with the given …","Removes from the pool all the transactions that are …","Pop a certain number of blocks from the list of blocks.","Returns the bytes associated with a given transaction.","Sets the outcome of validating the transaction with the …","","","","","","","","","","","","","","","","","","","","Returns a list of transactions whose state is “not …","Returns the user data associated with a given transaction.","Returns the user data associated with a given transaction.","","","","","","","Identifier of the non-included transaction with the same …","User data stored alongside with that transaction.","The transaction birth block is ancient.","An extrinsic with a Mandatory dispatch resulted in Error. …","General error to do with the transaction’s proofs (e.g. …","The call of the transaction is not expected.","Could not lookup some information that is required to …","Configuration for a transaction validation process.","Any other custom invalid validity that is not covered by …","Any other custom unknown validity that is not covered by …","Error that can happen during the decoding.","The list of provided tags (<code>ValidTransaction::provides</code>) is …","Problem encountered during a call to <code>validate_transaction</code>.","The transaction would exhaust the resources of current …","Transaction has been received externally.","Validating the transaction is over.","General error to do with the transaction not yet being …","Transaction is already included in a block.","The transaction is invalid.","Error while decoding the block header against which to …","An invalid transaction validity.","Transaction is coming from a local source.","A transaction with a mandatory dispatch. This is invalid; …","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","No validator found for the given unsigned transaction.","Error while decoding the output of the runtime.","General error to do with the inability to pay some fees …","Fetching the list of keys with a given prefix from the …","Fetching the list of keys with a given prefix from the …","Current state of the operation.","General error to do with the transaction being outdated …","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Source of the transaction.","Errors that can occur while checking the validity of a …","","Transaction validity can’t be determined.","Transaction validation API version unrecognized.","An unknown transaction validity.","Name of the runtime function to call in order to validate …","Information concerning a valid transaction.","Error while starting the Wasm virtual machine.","Error while running the Wasm virtual machine.","Error while running the Wasm virtual machine.","","","","","","","","","","","","","","","","","","","","","","","","","Number of bytes used to encode the block number in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to decode the return value of the  …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cancels execution of the virtual machine and returns back …","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Transaction longevity.","Maximum log level of the runtime.","Returns the prefix whose keys to load.","Priority of the transaction.","A flag indicating whether the transaction should be …","Tags provided by the transaction.","Transaction dependencies.","Runtime used to get the validate the transaction. Must be …","Header of the block to verify the transaction against, in …","SCALE-encoded transaction.","Source of the transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validates a transaction by calling …","Produces the input to pass to the …","Produces the input to pass to the …","","","","","","","","","","","","","Outcome of the verification.","Virtual machine initially passed through the configuration.","Turns an iterator of bytes into an iterator of nibbles …","A single nibble with four bits.","Error when building a <code>Nibble</code> from a <code>u8</code>.","The integer value is too large.","The format of the nodes of trie has two different versions.","","","Returns an iterator of all possible nibble values.","","","","","","","","","","","","","Turns an iterator of bytes into an iterator of nibbles …","Freestanding function that calculates the root of a …","","","","","Returns the Merkle value of the root of an empty trie.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Turns an iterator of nibbles into an iterator of bytes.","Returns the Merkle value of a trie containing the entries …","Scanning, through trie proofs, the list of all keys that …","Decodes and verifies a trie proof.","","","","","","","Returns the Merkle value of a trie containing the entries …","Manages the structure of a trie. Allows inserting and …","","","","","","","","","","","","","","Request to return the list of all the keys in the storage. …","Request to return the list of all the keys in the trie. …","Cache containing intermediate calculation steps.","The calculation is finished.","Current state of the <code>RootMerkleValueCalculation</code> and how to …","Request the value of the node with a specific key. Call …","Request the value of the node with a specific key. Call …","","","","","","","","","","","","","","","","","","","","Builds a new empty cache.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Indicates the list of all keys of the trie and advances …","Indicates the storage value and advances the calculation.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the key whose value is being requested.","Notify the cache that all the storage values whose key …","Start calculating the Merkle value of the root node.","Notify the cache that a storage value at the given key has …","","","","","","","","","","","","","","","","","","Cache of the calculation that can be passed next time.","Root hash that has been calculated.","Configuration to pass to <code>prefix_scan</code>.","Possible error returned by <code>PrefixScan::resume</code>.","Scan must continue with the next storage proof query.","The proof has an invalid format.","One or more entries in the proof are missing.","Scan of a prefix in progress.","Outcome of calling <code>PrefixScan::resume</code>.","Scan has succeeded.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Prefix that all the keys must share.","Start a new scanning process.","Returns the list of keys whose storage proof must be …","Injects the proof presumably containing the keys returned …","","","Merkle value (or node value) of the root node of the trie.","","","","","","","","","","","","","","","","","List of keys with the requested prefix.","Child exists but isn’t present in the proof.","Information about a specific child in the list of children.","See <code>TrieNodeInfo::children</code>.","Configuration to pass to <code>decode_and_verify_proof</code>.","Decoded Merkle proof. The proof is guaranteed valid.","The same entry has been found multiple times in the proof.","Possible error returned by <code>decode_and_verify_proof</code>.","The hash of the storage value was found, but the un-hashed …","Child exists and can be found in the proof.","Proof is in an invalid format.","One of the node values in the proof has an invalid format.","The storage value was found in the proof.","Child doesn’t exist.","The node doesn’t have a storage value.","Information about an entry in the proof.","Storage value of the node.","Information about a node of the trie.","Trie root wasn’t found in the proof.","A node has been passed separately and referred to by its …","One of the entries of the proof is disconnected from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the information about the child in the given …","Returns an iterator of 16 items, one for each child.","Which children the node has.","","","","","","","","","","","","","Verifies whether a proof is correct and returns an object …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns <code>true</code> if a child in the direction of the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns a list of all elements of the proof, ordered by …","Returns a list of all elements of the proof, ordered by …","Node value of that proof entry.","List of node values of nodes found in the trie. At least …","Queries from the proof the storage value at the given key.","Storage value of the node, if any.","","","","","","","","Returns information about a trie node.","Information about the node of the trie associated to this …","Merkle value (or node value) of the root node of the trie.","","","","","","","","","","","","","","","","","","","","","","","","","If <code>ProofEntry::node_value</code> indicates that the storage value …","","","","","","","","","Key of the child. Always starts with the key of its parent.","<code>true</code> if the storage value was inline in the node. This …","The storage value.","A single nibble with four bits.","Prototype for a Merkle proof whose building is in progress.","","","","","","","","","Builds the Merkle proof.","Similar to <code>ProofBuilder::build</code>, but returns a <code>Vec</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Modifies the node values that have been inserted in the …","Returns a list of keys for which the node value must be …","Initializes a new empty proof builder.","","Inserts the node value of a given trie node into the …","","Returns the hash of the trie root node.","","","","","","","","","","Initializes a new empty proof builder.","Error while decoding length of child.","Child value is superior to 32 bytes.","End of data within the children bitmap.","Node value ends within a child value.","Decoded node value. Returned by <code>decode</code> or passed as …","Iterator to the nibbles of the partial key. See …","Node value is empty.","Node value indicates that it is the root of an empty trie …","Error potentially returned by <code>encode</code>.","Possible error returned by <code>decode</code>.","BLAKE2 hash of the storage value of the item is present in …","Bits in the header have an invalid format.","If partial key is of uneven length, then it must be padded …","Output of the calculation.","Item doesn’t have any storage value.","Nodes that have no children nor storage value are invalid …","Length of partial key is too large to be reasonable.","Node value ends while parsing partial key length.","Node value ends within partial key.","See <code>Decoded::storage_value</code>.","Error while decoding length of storage value.","Node value ends within the storage value.","Node value is longer than expected.","Storage value of the item is present in the node value.","The children bitmap is equal to 0 despite the header …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the Merkle value of the given node.","All 16 possible children. <code>Some</code> if a child is present, and …","Returns a bits map of the children that are present, as …","","","","","","","","","","","","","Decodes a node value found in a proof into its components.","Encodes the components of a node value into the node value …","","","Encodes the components of a node value into the node value …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Builds a <code>MerkleValueOutput</code> from a slice of bytes.","Returns a <code>DecodedPartialKey</code> iterator that produces the …","Equivalent to <code>DecodedPartialKey::from_bytes</code>, but skips the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Iterator to the nibbles of the partial key of the node.","","Storage value of this node.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removing the storage value removed two nodes from the …","Access to a node within the <code>TrieStructure</code> that is known to …","Access to a entry for a potential node within the …","Access to a node within the <code>TrieStructure</code>.","Index of a node in the trie. Never invalidated, except …","There exists a node with this key.","One node will be inserted in the trie.","Preparation for a new node insertion.","One node will be inserted in the trie.","Two nodes will be inserted in the trie.","Outcome of the removal of a storage value.","Removing the storage value removed the node that contained …","Removing the storage value removed the node that contained …","","Access to a node within the <code>TrieStructure</code> that is known to …","Removing the storage value didn’t change the structure …","The trie was empty apart from this node. It is now …","Stores the structure of a trie, including branch nodes …","Two nodes will be inserted in the trie.","Access to a non-existing node within the <code>TrieStructure</code>.","This entry is vacant.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key of the branch node that will be inserted.","Returns the number of nodes (storage or branch nodes) the …","Returns the child of this node at the given index.","Returns the child of this node at the given index.","Returns the child of this node at the given index.","Returns the user data of the child at the given index.","Returns the user data of the child at the given index.","Returns the user data of the child at the given index.","","","","","","","","","Returns the node with the given key, or <code>None</code> if no such …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the full key of the node.","Returns the full key of the node.","Returns the full key of the node.","","Returns true if the node has a storage value associated to …","","Insert the new node. <code>branch_node_user_data</code> is discarded if …","Insert the new node.","Insert the new node.","Adds a storage value to this node, turning it into a …","Prepare the operation of creating the node in question.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the child of this node given the given index.","Returns the child of this node given the given index.","Returns the child of this node given the given index.","Returns the first child of this node.","Returns the first child of this node.","Returns the first child of this node.","Returns the next sibling of this node.","Returns the next sibling of this node.","Returns the next sibling of this node.","Returns <code>Some</code> if <code>self</code> is an <code>Entry::Occupied</code>.","Returns the parent of this node, or <code>None</code> if this is the …","Returns the parent of this node, or <code>None</code> if this is the …","Returns the parent of this node, or <code>None</code> if this is the …","Returns <code>Some</code> if <code>self</code> is an <code>NodeAccess::Storage</code>.","Returns <code>Some</code> if <code>self</code> is an <code>Entry::Vacant</code>.","Returns <code>true</code> if the trie doesn’t contain any node.","Returns true if this node is the root node of the trie.","Returns true if this node is the root node of the trie.","Returns true if this node is the root node of the trie.","Returns a list of all nodes in the structure, without any …","Returns the number of nodes, both branch and storage …","Builds a new empty trie.","Returns an <code>Entry</code> corresponding to the node whose key is …","Returns the <code>NodeAccess</code> of the node at the given index, or …","Returns the key of the node at the given index, or <code>None</code> if …","Returns an opaque <code>NodeIndex</code> representing the node in the …","Returns an opaque <code>NodeIndex</code> representing the node in the …","Returns an opaque <code>NodeIndex</code> representing the node in the …","Returns the parent of this node, or <code>None</code> if this is the …","Returns the parent of this node, or <code>None</code> if this is the …","Returns the parent of this node, or <code>None</code> if this is the …","Returns the partial key of the node.","Returns the partial key of the node.","Returns the partial key of the node.","Removes the storage value and returns what this changes in …","Removes all nodes whose key starts with the given prefix.","Returns the root node of the trie, or <code>None</code> if the trie is …","Returns the user data associated with the root node of the …","Reduces the capacity of the trie as much as possible.","Returns true if the structure of this trie is the same as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user data stored in the node.","Returns the user data associated to this node.","Returns the user data associated to this node.","","","","","","","","","","","","Builds a new empty trie with a capacity for the given …","User data that was in the removed branch node (former …","Unique child that the removed node had. The parent and …","Parent that the removed node had.","Sibling of the removed node. The parent and partial key of …","User data that was in the removed storage node.","User data that was in the removed node.","User data that was in the removed node.","User data that was in the removed node.","AURA consensus.","BABE consensus.","","","Inherents, together with transactions, form the body of a …","Failed to parse Ed25519 public key.","Block header signature is invalid.","List of authorities is empty.","No pre-runtime digest in the block header.","The seal (containing the signature of the authority) is …","Parent block doesn’t contain any Aura information.","Slot number must be strictly increasing between a parent …","Slot number starts too far in the future.","Configuration for <code>verify_header</code>.","Failure to verify a block.","Information yielded back after successfully verifying a …","","","","","","","If true, the block has a change of authorities that must …","Number of bytes used to encode the block number in the …","","","","","","","Aura authorities that must validate the block.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Header of the block to verify.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Header of the parent of the block to verify.","Duration of a slot in milliseconds. Can be found by …","","","","","","","","","","","Verifies whether a block header provides a correct proof …","","","","Block is a secondary slot claim and its author is not the …","Block header signature is invalid.","VRF proof in the block header is invalid.","Type of slot claim forbidden by current configuration.","Authority index stored within block is out of range.","The header contains an epoch change that would put the …","Block is the first block after a new epoch, but it is …","No pre-runtime digest in the block header.","The seal (containing the signature of the authority) is …","VRF output is over threshold required to claim the primary …","Parent block doesn’t contain any Babe information.","Slot number must be strictly increasing between a parent …","Block contains an epoch change digest log, but no epoch …","Configuration for <code>verify_header</code>.","Failure to verify a block.","Information yielded back after successfully verifying a …","","","","","","","Number of bytes used to encode the block number in the …","","","","","","","If <code>Some</code>, the verified block contains an epoch transition …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Header of the block to verify.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Epoch the parent block belongs to. Must be <code>None</code> if and …","Header of the parent of the block to verify.","Epoch that follows the epoch the parent block belongs to.","Slot number the block belongs to.","Number of slots per epoch in the Babe configuration.","","","","","","","","","","","Verifies whether a block header provides a correct proof …","","","","Chain is using the Aura consensus engine.","Chain is using the Aura consensus engine.","Failed to verify the authenticity of the block with the …","Chain is using the Babe consensus engine.","Chain is using the Babe consensus engine.","Failed to verify the authenticity of the block with the …","Runtime has returned some errors when verifying inherents.","Failed to parse the output of <code>BlockBuilder_check_inherents</code>.","Block being verified has erased the <code>:code</code> key from the …","Configuration for a block verification.","Extra items of <code>Config</code> that are dependant on the consensus …","Error that can happen during the verification.","Verification is over.","Block has modified the <code>:heappages</code> key without modifying …","Block has modified the <code>:heappages</code> key in a way that fails …","Block header contains items relevant to multiple consensus …","Error while compiling new runtime.","Output of <code>Core_execute_block</code> wasn’t empty.","A new runtime must be compiled.","A new runtime must be compiled.","Loading a storage value is required in order to continue.","Loading a storage value is required in order to continue.","Fetching the key that follows a given one is required in …","Fetching the key that follows a given one is required in …","Fetching the list of keys with a given prefix is required …","Fetching the list of keys with a given prefix is required …","Block successfully verified.","Extra items in <code>Success</code> relevant to the consensus engine.","","Block header contains an unrecognized consensus engine.","Current state of the verification.","Error while starting the Wasm virtual machine to execute …","Error while running the Wasm virtual machine to execute …","If <code>false</code>, digest items with an unknown consensus engine …","","","","","","","","","","","","","","","","","","","","","Body of the block to verify.","Header of the block to verify.","Number of bytes used to encode the block number in the …","","","","","","","","","","","","","","","","","","","","","Performs the runtime compilation.","Configuration items related to the consensus engine.","Extra items in <code>Success</code> relevant to the consensus engine.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Injects the key.","Injects the list of keys ordered lexicographically.","Injects the corresponding storage value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the key whose value must be passed to …","Returns the key whose next key must be passed back.","Concatenation of all the log messages printed by the …","Optional cache corresponding to the storage trie root hash …","Cache used for calculating the main trie root.","Maximum log level of the runtime.","Contains <code>Some</code> if and only if …","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","List of changes to the off-chain storage that this block …","Header of the parent of the block to verify.","Runtime used to check the new block. Must be built using …","Runtime that was passed by <code>Config</code>.","Returns the prefix whose keys to load.","State trie version indicated by the runtime. All the …","List of changes to the storage main trie that the block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies whether a block is valid.","","","","","","","","","","","Aura authorities that must validate the block.","Epoch the parent block belongs to. Must be <code>None</code> if and …","Epoch that follows the epoch the parent block belongs to.","Duration of a slot in milliseconds. Can be found by …","Number of slots per epoch in the Babe configuration.","","List of errors produced by the runtime.","True if the list of authorities is modified by this block.","If <code>Some</code>, the verified block contains an epoch transition …","Slot number the block belongs to.","Chain is using the Aura consensus engine.","Chain is using the Aura consensus engine.","Failed to verify the authenticity of the block with the …","Chain is using the Babe consensus engine.","Chain is using the Babe consensus engine.","Failed to verify the authenticity of the block with the …","Hash of the parent block doesn’t match the hash in the …","Configuration for a block verification.","Extra items of <code>Config</code> that are dependant on the consensus …","Extra items of <code>Config</code> that are dependant on the finality …","Error that can happen during the verification.","Block header contains items that don’t match the …","Chain uses the Grandpa finality algorithm.","Block schedules a Grandpa authorities change while another …","Block header contains items relevant to multiple consensus …","Number of the block to verify isn’t equal to the parent …","Blocks themselves don’t contain any information …","Block successfully verified.","Block header contains an unrecognized consensus engine.","If <code>false</code>, digest items with an unknown consensus engine …","","","","","","","","","","","Header of the block to verify.","Number of bytes used to encode the block number in the …","","","","","","","","","","","Configuration items related to the consensus engine.","Configuration items related to the finality engine.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Header of the parent of the block to verify.","","","","","","","","","","","","","","","","","Verifies whether a block is valid.","","","","","","Aura authorities that must validate the block.","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Time elapsed since the Unix Epoch (i.e. 00:00:00 UTC on 1 …","Epoch the parent block belongs to. Must be <code>None</code> if and …","Epoch that follows the epoch the parent block belongs to.","Duration of a slot in milliseconds. Can be found by …","Number of slots per epoch in the Babe configuration.","","True if the list of authorities is modified by this block.","If <code>Some</code>, the verified block contains an epoch transition …","Slot number the block belongs to.","Values of the inherents to pass to the runtime.","","","Turns this list of inherents into a list that can be …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Number of milliseconds since the UNIX epoch when the block …","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,2,11,2,11,2,11,2,2,2,11,2,2,2,2,11,2,11,2,11,2,11,2,11,2,11,2,0,11,11,2,2,2,2,11,2,11,2,11,2,11,2,0,18,18,704,0,0,0,0,0,0,0,18,30,22,0,18,0,18,30,22,0,18,0,18,0,0,30,15,29,704,30,18,31,33,15,28,26,24,19,21,22,29,704,30,18,31,33,15,28,26,24,19,21,22,19,33,33,29,704,30,18,31,33,15,28,26,24,19,21,22,29,704,30,18,31,33,15,28,26,24,19,21,22,29,15,21,22,22,29,704,30,18,31,33,15,28,26,24,19,21,22,22,24,26,19,28,29,704,30,18,31,33,15,28,26,24,19,21,22,29,704,30,18,31,33,15,28,26,24,19,21,22,29,704,30,31,33,15,19,21,22,29,704,30,18,31,33,15,28,26,24,19,21,22,28,24,33,33,30,33,33,33,33,26,19,31,31,31,21,19,22,29,704,30,18,31,33,15,28,26,24,19,21,22,29,704,30,18,31,33,15,28,26,24,19,21,22,29,704,30,18,31,33,15,28,26,24,19,21,22,29,704,30,18,31,33,15,28,26,24,19,21,22,21,705,705,706,706,706,706,39,0,36,36,707,707,23,23,39,41,39,0,23,39,40,41,0,0,39,40,0,0,39,36,39,23,23,0,36,23,38,0,39,41,0,36,40,39,0,36,39,0,36,0,0,0,38,0,23,23,35,37,707,27,36,42,35,48,45,44,23,38,39,40,41,37,707,27,36,42,35,48,45,44,23,38,39,40,41,37,37,27,37,707,27,36,42,35,48,45,44,23,38,39,40,41,37,707,27,36,42,35,48,45,44,23,38,39,40,41,0,38,39,40,41,38,39,40,41,37,38,39,40,41,38,38,39,39,40,40,41,41,35,23,23,38,38,39,39,40,40,41,41,37,707,27,36,42,35,48,45,44,23,38,39,40,41,42,44,45,42,48,37,707,27,36,42,35,48,45,44,23,38,39,40,41,37,707,27,36,42,35,48,45,44,23,38,39,40,41,37,707,27,42,35,23,38,39,40,41,37,707,27,36,42,35,48,45,44,23,38,39,40,41,48,44,27,37,27,37,27,37,37,37,27,45,27,27,27,38,39,40,41,23,38,39,40,41,37,707,27,36,42,35,48,45,44,23,38,39,40,41,37,707,27,36,42,35,48,45,44,23,38,39,40,41,37,707,27,36,42,35,48,45,44,23,38,39,40,41,37,707,27,36,42,35,48,45,44,23,38,39,40,41,708,708,709,709,710,711,710,711,0,0,0,0,0,0,0,53,53,0,53,0,0,0,58,0,0,58,49,62,49,51,58,59,52,53,54,62,49,51,58,59,52,53,54,49,49,49,52,54,49,49,49,59,49,59,49,62,62,49,51,58,59,52,53,54,62,49,51,58,59,52,53,54,49,51,52,53,54,51,52,53,54,51,51,52,53,54,51,51,52,52,53,53,54,54,49,62,51,58,59,52,53,54,62,49,51,58,59,52,53,54,51,51,59,52,54,49,49,49,49,49,62,49,51,58,59,52,53,54,62,49,51,58,59,52,53,54,62,49,51,58,59,52,53,54,62,49,51,58,59,52,53,54,54,52,49,49,49,49,49,51,62,51,52,53,54,49,62,49,51,58,59,52,53,54,62,49,51,58,59,52,53,54,62,49,51,58,59,52,53,54,52,54,62,49,51,58,59,52,53,54,712,713,713,714,713,713,713,713,80,83,78,0,0,0,0,0,0,0,0,81,81,83,80,82,78,78,72,0,76,77,0,72,0,0,0,82,77,80,83,76,76,0,0,77,77,80,0,72,0,0,0,72,0,72,0,72,78,0,79,81,83,78,76,77,83,63,65,74,66,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,64,64,64,64,64,74,66,74,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,71,74,67,64,74,74,64,67,75,64,64,64,66,63,75,65,64,76,76,77,77,78,78,79,79,80,81,81,82,83,83,74,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,75,65,84,85,86,75,65,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,66,67,63,71,75,65,64,88,76,77,78,79,80,81,82,83,74,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,75,67,88,66,64,64,64,86,84,64,67,67,67,67,67,67,67,67,67,67,67,67,67,64,67,67,67,67,67,64,64,63,86,85,84,63,86,85,84,63,88,85,64,63,64,64,67,67,74,76,77,78,79,81,83,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,67,88,64,64,64,64,66,67,63,72,86,85,84,71,75,65,64,88,76,77,78,79,80,81,82,83,74,715,715,716,716,717,717,717,717,717,716,717,717,718,719,719,720,720,720,721,722,722,722,97,69,97,69,0,0,0,0,0,0,0,0,0,102,99,101,102,103,102,102,102,99,101,102,102,102,97,69,0,0,0,98,100,94,68,96,97,98,99,95,69,100,101,102,103,94,68,96,97,98,99,95,69,100,101,102,103,94,68,98,100,94,68,96,97,98,99,95,69,100,101,102,103,94,68,96,97,98,99,95,69,100,101,102,103,0,98,100,94,68,96,97,98,99,95,69,100,101,94,68,96,97,98,99,95,69,100,101,96,95,98,100,96,95,96,95,94,68,96,97,98,99,95,69,100,101,102,102,103,103,94,94,68,68,96,96,96,97,98,98,99,99,95,95,69,100,100,101,101,102,103,94,68,96,97,98,99,95,69,100,101,102,103,94,68,96,97,98,99,95,69,100,101,102,103,94,68,96,97,98,99,95,69,100,101,102,103,94,68,96,97,98,99,95,69,100,101,102,103,98,100,98,100,94,68,96,97,98,99,95,69,100,101,102,103,94,94,68,68,96,97,98,99,95,69,100,101,102,103,94,68,96,97,98,99,95,69,100,101,102,103,94,68,96,97,98,99,95,69,100,101,102,103,98,95,100,94,68,96,97,98,99,95,69,100,101,102,103,723,724,724,723,724,725,726,726,725,726,727,727,727,728,728,728,105,105,108,108,105,105,105,108,108,108,0,0,0,0,110,729,105,105,108,108,0,110,108,108,0,104,729,0,0,104,108,108,111,729,110,104,106,107,108,105,111,729,110,104,106,107,108,105,111,729,110,104,106,107,108,105,111,729,110,104,106,107,108,105,104,106,107,105,105,105,105,105,111,108,108,105,111,729,110,104,106,107,108,105,105,105,105,107,106,111,729,110,104,106,107,108,105,111,729,110,104,106,107,108,105,111,729,108,105,111,729,110,104,106,107,108,105,106,107,110,105,105,104,111,105,108,111,729,110,104,106,107,108,105,111,729,110,104,106,107,108,105,111,729,110,104,106,107,108,105,111,729,110,104,106,107,108,105,730,730,731,731,732,733,734,733,734,0,0,0,0,112,112,113,735,50,112,113,735,50,112,112,113,735,50,112,113,735,50,112,112,50,50,50,112,112,113,50,50,50,112,112,50,112,113,735,50,112,112,735,112,112,113,735,50,112,113,735,50,112,113,735,50,112,113,735,50,113,112,112,735,112,112,112,112,112,113,112,112,50,112,112,112,112,112,113,50,112,113,735,50,112,113,735,50,112,113,735,50,735,112,113,735,50,112,0,116,0,0,0,0,116,119,0,0,117,116,119,116,117,116,119,120,114,115,117,118,116,119,120,114,115,117,118,116,114,115,115,115,115,119,120,114,115,117,118,116,119,120,114,115,117,118,116,115,115,117,115,117,117,117,117,117,118,118,116,116,115,119,120,114,115,117,118,116,115,115,115,115,119,120,114,115,117,118,116,119,120,114,115,117,118,116,119,120,114,115,117,118,116,119,120,114,115,117,118,116,119,119,120,115,115,115,115,115,115,115,117,118,116,119,120,114,115,117,118,116,119,120,114,115,117,118,116,119,120,114,115,117,118,116,120,119,120,114,115,117,118,116,736,736,0,0,0,121,121,121,121,0,0,0,121,121,121,121,121,121,121,121,121,121,121,121,129,130,126,0,129,131,131,0,0,131,124,0,0,0,128,129,135,0,129,0,131,0,131,131,131,131,131,131,128,131,131,129,126,135,130,0,0,130,135,134,123,127,128,124,129,130,126,131,132,135,134,123,127,128,124,129,130,126,131,132,123,123,123,127,123,135,134,123,127,128,124,129,130,126,131,132,135,134,123,127,128,124,129,130,126,131,132,123,123,123,123,123,123,123,127,128,124,124,129,129,130,130,126,126,131,131,132,132,135,134,123,127,128,124,124,129,129,129,130,130,126,126,126,131,132,134,123,135,134,123,127,128,124,129,130,126,131,132,135,134,123,127,128,124,129,130,126,131,132,123,127,128,124,129,130,126,131,132,135,134,123,127,128,124,129,130,126,131,132,0,123,123,124,129,130,126,131,132,135,134,123,127,128,124,129,130,126,131,132,135,134,123,127,128,124,129,130,126,131,132,127,135,134,123,127,128,124,129,130,126,131,132,135,134,123,127,128,124,129,130,126,131,132,0,0,0,0,0,136,136,136,136,136,136,136,136,136,136,136,0,136,136,136,136,0,0,0,0,136,136,136,136,136,0,136,142,144,0,160,140,141,0,0,142,0,0,143,0,160,0,160,0,160,0,160,0,160,0,160,0,160,0,160,0,160,0,160,0,160,144,144,0,160,142,0,144,0,0,139,0,160,140,141,142,0,0,144,144,144,144,0,160,144,0,160,0,0,160,144,0,139,144,0,0,144,144,142,143,166,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,140,141,142,143,144,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,140,141,142,143,144,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,140,141,142,143,144,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,140,141,142,143,144,138,139,91,140,141,142,143,144,139,91,140,141,142,143,144,145,140,141,140,140,141,141,166,146,147,148,149,150,151,145,152,138,153,154,155,156,156,157,158,159,139,139,91,160,140,141,142,142,143,143,144,144,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,140,141,142,142,142,142,143,143,143,144,140,141,140,141,91,166,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,140,141,142,143,144,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,140,141,142,143,144,166,139,91,140,141,142,143,144,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,140,141,142,143,144,147,160,153,148,149,150,152,155,151,148,153,166,91,148,151,153,148,149,150,151,145,152,138,154,155,156,157,158,159,153,148,153,148,146,91,91,91,0,91,153,149,139,91,140,141,142,143,144,156,139,142,143,144,145,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,140,141,142,143,144,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,140,141,142,143,144,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,140,141,142,143,144,147,149,150,155,153,166,146,147,148,149,150,151,145,152,138,153,154,155,156,157,158,159,139,91,160,140,141,142,143,144,154,737,738,739,740,738,741,742,740,743,739,740,738,744,743,740,745,741,743,744,746,746,747,747,748,749,748,750,0,0,0,0,0,170,162,171,0,0,170,162,162,170,170,162,0,172,170,171,162,167,172,173,174,170,171,162,167,172,173,174,167,167,167,172,170,171,162,167,172,173,174,170,171,162,167,172,173,174,170,171,162,167,172,173,174,170,171,162,167,172,173,174,173,173,167,167,167,167,172,173,174,167,167,172,172,173,173,174,174,0,0,173,173,170,170,171,171,162,162,167,172,173,174,170,171,162,167,172,173,174,167,173,174,174,0,172,172,170,171,162,167,172,173,174,170,171,162,167,172,173,174,170,171,162,167,172,173,174,170,171,162,167,172,173,174,173,174,173,172,172,172,172,170,171,162,167,172,173,174,170,171,162,172,170,171,162,167,172,173,174,170,171,162,167,172,173,174,170,171,162,167,172,173,174,174,170,171,162,167,172,173,174,0,0,0,181,176,176,0,181,0,0,181,0,181,0,181,0,0,176,185,177,181,182,180,184,183,178,179,176,185,177,181,182,180,184,183,178,179,176,185,177,181,182,180,184,183,178,179,176,185,177,181,182,180,184,183,178,179,176,176,176,179,177,178,179,179,176,176,185,177,181,182,180,184,183,178,179,176,185,180,182,185,177,181,182,180,184,183,178,179,176,185,177,181,182,180,184,183,178,179,176,185,179,176,185,177,181,182,180,184,183,178,179,176,177,181,183,182,180,178,185,183,185,179,183,184,183,183,0,183,176,179,176,185,177,181,182,180,184,183,178,179,176,185,177,181,182,180,184,183,178,179,176,185,177,181,182,180,184,183,178,179,176,177,183,185,178,185,177,181,182,180,184,183,178,179,176,751,751,0,0,0,191,186,0,191,0,191,0,0,191,0,191,0,0,0,186,195,187,191,193,192,190,194,188,189,186,195,187,191,193,192,190,194,188,189,186,195,187,191,193,192,190,194,188,189,186,195,187,191,193,192,190,194,188,189,186,186,186,189,187,188,189,189,186,186,195,187,191,193,192,190,194,188,189,186,195,190,192,193,195,187,191,193,192,190,194,188,189,186,195,187,191,193,192,190,194,188,189,186,195,189,186,195,187,191,193,192,190,194,188,189,186,187,191,194,193,190,188,195,188,195,194,195,188,195,192,189,194,194,194,0,194,188,195,188,186,189,186,195,187,191,193,192,190,194,188,189,186,195,187,191,193,192,190,194,188,189,186,195,187,191,193,192,190,194,188,189,186,187,194,195,188,195,187,191,193,192,190,194,188,189,186,752,752,197,197,0,0,197,196,197,196,197,196,197,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,197,196,196,197,196,197,196,197,196,197,196,196,196,196,196,196,197,196,197,196,197,196,197,196,209,199,161,0,0,207,199,199,163,0,0,201,202,201,202,161,207,210,163,161,161,161,0,161,163,210,199,161,0,209,0,0,0,163,0,161,0,161,161,0,199,0,0,0,0,137,204,205,198,199,137,200,201,202,206,207,203,161,163,208,209,210,204,205,198,199,137,200,201,202,206,207,203,161,163,208,209,210,199,204,205,198,199,137,200,201,202,206,207,203,161,163,208,209,210,204,205,198,199,137,200,201,202,206,207,203,161,163,208,209,210,198,199,137,200,201,202,203,161,163,198,199,137,200,201,202,203,161,163,137,199,137,200,201,202,199,199,137,137,200,200,201,201,202,202,204,205,198,199,137,200,201,202,206,206,207,203,203,161,161,163,163,208,208,209,209,210,210,199,204,205,198,199,137,137,200,201,202,206,207,203,161,163,208,209,210,137,200,202,198,204,205,137,200,202,204,205,198,199,137,200,201,202,206,207,203,161,163,208,209,210,204,205,198,199,137,200,201,202,206,207,203,161,163,208,209,210,204,198,199,137,200,201,202,206,207,203,161,163,208,209,210,204,205,198,199,137,200,201,202,206,207,203,161,163,208,209,210,201,201,204,205,198,204,205,198,137,200,200,137,198,161,204,205,200,205,204,137,198,199,137,200,201,202,203,161,163,206,203,161,163,208,209,210,204,205,198,199,137,200,200,200,200,201,201,201,201,202,202,202,206,207,203,161,163,208,209,210,204,205,198,199,137,200,201,202,206,207,203,161,163,208,209,210,201,204,205,198,199,137,200,201,202,206,207,203,161,163,208,209,210,204,205,198,199,137,200,201,202,206,207,203,161,163,208,209,210,204,205,753,753,754,755,755,756,756,0,0,0,0,0,0,0,0,0,0,223,220,221,222,223,220,221,222,221,223,220,221,222,223,220,221,222,220,221,222,220,221,222,0,0,220,221,222,220,220,221,221,222,222,223,223,220,221,222,223,220,221,222,223,220,221,222,223,220,221,222,223,220,221,222,223,220,221,222,220,221,220,220,221,222,221,222,220,221,222,223,223,220,221,222,223,220,221,222,223,220,221,222,223,220,221,222,227,227,227,227,0,227,0,228,228,0,227,0,228,0,228,227,228,224,225,226,227,228,224,225,226,227,224,225,225,226,228,224,225,226,227,228,224,225,226,227,226,226,226,227,227,228,224,225,226,227,228,224,225,226,227,228,224,225,226,227,228,224,225,226,227,228,224,225,226,227,226,226,224,225,225,225,227,228,224,225,226,227,228,224,225,226,227,228,224,225,226,227,0,228,224,225,226,227,232,229,0,229,229,0,229,232,232,229,0,229,0,229,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,229,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,230,230,231,231,229,232,229,230,231,232,229,230,231,232,229,230,231,232,229,230,231,757,757,757,758,758,0,0,0,0,0,0,0,0,0,0,240,237,239,233,234,235,236,238,240,237,239,233,234,235,236,238,234,235,240,237,239,233,234,235,236,238,240,237,239,233,234,235,236,238,233,234,235,236,233,234,235,236,0,234,0,234,235,234,234,235,235,237,239,233,234,235,236,238,238,240,237,237,239,239,233,234,234,235,235,236,238,240,237,239,233,234,235,236,238,240,237,239,233,234,235,236,238,240,237,239,233,234,235,236,238,240,237,239,233,234,235,236,238,240,236,233,240,236,237,239,237,239,234,235,240,236,237,239,234,235,237,239,234,235,233,234,235,236,238,240,237,239,233,234,235,236,238,240,237,239,233,234,235,236,238,240,237,239,233,234,235,236,238,237,240,237,239,233,234,235,236,238,242,242,0,242,0,242,242,241,242,241,242,241,241,241,241,242,241,242,241,242,242,241,242,241,242,241,242,241,242,241,242,241,241,242,241,242,241,242,241,242,0,241,242,279,0,0,0,276,277,0,0,0,276,277,276,277,247,248,279,0,0,0,0,276,277,0,0,0,0,0,0,276,277,0,0,0,276,277,0,0,0,133,133,133,133,133,133,133,133,0,0,133,133,0,133,0,0,267,268,0,0,0,276,277,0,133,0,0,0,0,0,0,133,133,133,133,133,252,253,252,253,247,248,252,253,267,268,276,277,267,268,133,246,261,260,260,260,0,267,268,276,277,267,268,0,133,246,261,246,261,133,133,133,276,277,133,276,277,276,277,259,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,243,243,245,254,255,262,263,264,265,266,243,245,243,245,243,245,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,259,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,0,249,259,260,259,260,259,260,0,259,260,269,270,70,87,243,259,260,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,262,264,265,267,268,269,270,271,272,273,276,247,247,248,248,249,249,250,250,251,251,244,244,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,246,246,262,262,264,264,265,265,267,267,268,268,269,269,270,270,271,271,272,272,273,273,276,276,0,70,87,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,133,70,87,243,245,275,275,276,277,279,247,247,248,248,249,250,250,251,251,244,252,252,253,253,254,254,255,255,256,257,257,258,258,259,260,246,246,261,261,262,262,263,263,264,265,265,266,266,267,267,268,268,269,269,270,270,271,272,272,273,273,133,70,70,87,87,243,243,245,245,274,275,276,276,277,277,247,249,244,252,254,256,259,260,246,262,264,265,267,243,243,243,243,243,245,70,87,0,0,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,249,256,271,274,276,276,276,246,243,245,271,249,256,271,274,269,270,70,87,70,87,243,250,251,257,258,272,273,245,245,254,255,247,250,244,252,254,257,259,260,246,262,264,265,267,269,272,273,70,87,243,276,70,87,249,256,271,274,246,244,262,263,264,265,266,70,87,259,260,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,133,275,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,262,263,265,266,262,263,265,266,279,247,248,249,250,251,244,252,253,254,255,256,257,258,259,260,246,261,262,263,264,265,266,267,268,269,270,271,272,273,133,70,87,243,245,274,275,276,277,257,258,272,273,759,760,761,759,760,761,762,763,764,762,763,764,765,765,766,766,0,0,280,280,280,282,280,280,282,281,0,0,0,283,0,0,281,0,283,280,284,767,280,281,282,283,284,767,280,281,282,283,284,767,280,281,282,283,284,767,280,281,282,283,280,280,280,280,280,280,281,281,282,282,283,283,284,767,280,281,281,282,283,283,284,284,280,280,284,284,767,280,281,282,283,284,767,280,281,282,283,284,767,280,281,282,283,284,767,280,281,282,283,284,284,767,284,284,280,281,282,283,284,767,280,281,282,283,284,767,280,281,282,283,284,767,280,281,282,283,284,767,280,281,282,283,288,290,0,0,0,0,289,290,0,0,289,288,292,290,289,288,291,292,290,289,288,291,0,292,290,289,288,291,292,290,289,288,291,289,289,0,0,289,289,289,290,290,289,288,288,291,291,292,290,289,288,291,292,290,289,288,291,292,290,289,288,291,292,290,289,288,291,292,290,289,288,291,0,292,292,289,290,288,291,292,290,289,288,291,292,290,289,288,291,292,290,289,288,291,292,290,289,288,291,0,0,0,0,293,294,295,296,293,294,295,296,295,295,296,293,294,295,296,293,294,295,296,295,296,295,295,295,293,294,295,295,296,293,294,295,296,293,294,295,296,293,294,295,296,293,294,295,296,293,294,295,296,295,295,295,295,295,293,294,295,293,294,295,296,293,294,295,296,293,294,295,296,293,294,295,296,0,0,0,0,0,0,319,327,306,310,0,328,310,0,0,0,312,307,308,309,0,307,308,309,310,328,308,309,310,328,306,310,328,0,319,327,328,312,0,0,0,0,328,312,312,312,307,308,309,306,310,318,328,303,330,0,330,329,303,319,327,323,0,329,0,0,330,0,0,306,0,323,0,323,312,312,0,328,0,0,328,0,0,0,0,0,0,312,306,312,0,312,312,312,0,0,0,330,0,0,0,330,329,328,318,310,298,299,320,321,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,297,297,297,300,301,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,320,321,298,299,326,326,324,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,0,298,299,300,301,298,299,300,301,298,299,298,299,300,301,298,299,298,299,298,299,298,299,298,299,298,299,300,301,298,299,298,299,298,299,298,299,298,299,300,301,300,301,298,299,298,299,298,299,298,299,300,301,298,299,298,299,298,299,298,299,298,299,298,299,324,298,299,298,299,298,299,298,299,322,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,297,302,304,306,307,308,309,310,311,312,313,314,315,316,318,319,320,321,324,328,314,297,297,297,297,297,305,314,329,329,330,330,331,331,298,299,300,301,297,297,302,303,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,314,297,298,299,297,311,305,320,321,320,321,311,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,325,305,315,316,298,300,317,298,300,300,301,298,299,298,299,314,298,299,298,299,298,300,314,0,322,298,299,326,325,0,326,298,299,297,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,325,320,321,320,321,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,314,300,301,300,301,298,299,298,299,298,299,298,299,321,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,298,299,316,298,300,330,299,301,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,297,303,316,298,299,298,299,300,301,320,321,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,298,299,300,301,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,322,768,769,770,771,772,773,774,775,776,776,777,775,775,777,778,779,780,781,782,783,784,785,786,787,783,788,784,789,790,783,791,792,786,793,794,785,795,796,787,783,788,784,790,797,796,784,782,798,799,800,793,787,783,784,793,794,785,801,785,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,816,817,818,819,816,817,820,821,822,823,824,820,822,825,826,827,828,829,824,823,830,824,831,830,820,821,822,823,825,826,827,828,829,824,831,830,832,832,833,834,835,836,837,838,839,840,841,842,843,844,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,847,850,333,0,0,333,333,333,333,0,333,333,332,334,333,332,334,333,332,334,333,332,334,333,0,0,0,332,334,334,333,332,334,333,332,332,334,333,332,334,333,332,334,333,332,334,333,332,332,0,334,332,334,333,332,334,333,332,334,333,332,334,333,0,0,335,335,335,335,335,335,0,335,335,335,335,335,335,335,0,335,335,335,335,335,0,0,342,0,0,0,340,344,0,0,342,0,0,0,0,338,338,348,338,345,346,347,339,341,342,343,340,344,348,338,345,346,347,339,341,342,343,340,344,348,338,345,346,347,339,341,342,343,340,344,348,338,345,346,347,339,341,342,343,340,344,339,341,342,343,340,344,339,341,342,343,340,344,339,341,339,341,339,339,341,341,0,345,346,347,339,341,342,343,343,340,340,344,344,348,338,345,346,347,339,341,342,342,342,343,340,344,339,341,339,341,348,338,345,346,347,339,341,342,343,340,344,348,338,345,346,347,339,341,342,343,340,344,348,338,345,346,347,339,341,342,343,340,344,348,338,345,346,347,339,341,342,343,340,344,348,348,348,338,346,338,338,339,341,338,338,338,343,338,338,347,338,338,345,338,338,339,341,342,343,340,344,343,340,344,348,338,345,346,347,339,341,342,343,340,344,348,338,345,346,347,339,341,342,343,340,344,338,338,348,338,345,346,347,339,341,342,343,340,344,348,338,345,346,347,339,341,342,343,340,344,0,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,0,353,0,353,0,353,0,351,355,351,352,353,355,351,352,353,355,355,351,352,353,355,351,352,353,355,352,352,351,352,352,352,352,351,352,353,355,351,352,353,352,352,351,351,355,351,352,353,355,351,352,353,355,352,353,355,351,352,353,351,351,351,355,351,351,352,351,351,355,352,355,351,352,353,355,351,352,353,355,351,352,353,355,351,352,353,851,852,853,853,852,853,0,0,0,0,0,0,0,0,0,0,0,0,0,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,369,0,0,0,0,0,364,365,366,0,0,367,0,0,0,369,368,369,0,368,0,0,375,0,0,368,368,0,368,368,368,0,368,368,0,368,368,369,370,0,0,369,0,368,368,362,367,368,368,0,0,0,0,368,364,365,366,0,0,374,358,360,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,376,361,359,362,363,364,365,366,367,361,359,362,363,364,365,366,367,358,361,359,358,360,361,359,363,367,361,361,359,359,363,363,367,367,363,361,359,362,362,363,368,369,369,364,364,365,365,366,366,370,370,367,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,361,359,367,376,361,359,367,358,358,358,360,373,358,358,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,358,364,373,358,854,376,854,361,359,361,359,358,358,358,376,358,376,358,361,359,376,854,358,360,373,358,376,373,358,358,376,360,373,360,358,363,358,358,360,361,359,362,363,364,365,366,367,362,369,364,365,366,370,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,360,373,375,374,376,854,358,371,372,361,359,362,363,368,369,364,365,366,370,367,855,856,857,858,855,859,860,861,862,863,860,864,856,859,857,860,859,865,866,865,859,867,866,868,869,860,870,863,864,858,858,871,871,0,0,0,0,0,0,0,0,0,0,0,0,0,367,385,0,0,0,389,0,389,388,389,389,0,389,389,389,0,389,389,385,389,389,0,389,382,367,0,389,0,0,0,388,379,381,379,381,379,379,381,387,388,380,389,383,384,385,386,382,379,381,387,388,380,389,383,384,385,386,382,379,381,387,388,380,389,383,384,385,386,382,379,381,387,388,380,389,383,384,385,386,382,380,383,384,385,386,382,380,383,384,385,386,382,379,381,380,381,379,380,380,380,383,379,381,387,388,388,380,389,383,384,385,386,382,382,379,381,387,388,380,389,383,384,385,386,382,380,380,384,384,379,381,387,388,380,389,383,384,385,386,382,379,381,387,388,380,389,383,384,385,386,382,379,381,387,388,380,389,383,384,385,386,382,379,381,387,388,380,389,383,384,385,386,382,387,387,386,383,386,384,385,380,380,384,386,379,381,383,379,381,379,381,380,383,383,383,379,383,381,379,381,383,379,379,381,0,379,380,383,384,385,386,382,388,382,379,381,387,388,380,389,383,384,385,386,382,379,381,387,388,380,389,383,384,385,386,382,379,381,387,388,380,389,383,384,385,386,382,379,381,387,388,380,389,383,384,385,386,382,379,379,381,872,873,874,875,873,876,877,878,879,880,881,877,878,874,873,874,875,879,875,881,0,395,0,397,397,0,393,394,395,397,398,397,0,393,397,397,393,397,0,397,397,398,397,397,396,394,395,395,398,0,397,393,393,0,397,394,0,394,391,394,395,396,394,395,392,392,398,397,393,394,391,395,396,392,398,397,393,394,391,395,396,392,398,397,393,394,391,395,396,392,398,397,393,394,391,395,396,393,394,395,396,393,394,395,396,392,392,397,393,393,394,394,391,391,395,395,396,396,392,398,397,393,394,391,395,396,392,392,398,397,393,394,391,395,396,392,398,397,393,394,391,395,396,392,398,397,393,394,391,395,396,392,398,397,393,394,391,395,396,394,392,392,392,392,392,392,392,392,392,392,392,392,393,394,395,396,393,394,391,395,396,392,398,397,393,394,391,395,396,392,398,397,393,394,391,395,396,392,398,397,393,394,391,395,396,392,398,397,393,394,391,395,396,392,882,883,884,885,886,882,886,887,888,887,889,890,890,891,892,893,892,893,401,0,400,0,401,402,0,403,401,400,402,402,0,0,403,402,402,402,401,403,401,401,399,400,403,401,402,399,400,403,401,402,399,400,403,401,402,399,400,403,401,402,399,400,401,402,400,401,402,400,400,400,399,400,403,401,401,402,399,400,403,401,402,399,400,403,401,402,399,400,403,401,402,399,400,403,401,402,399,400,403,401,402,402,399,403,399,400,401,402,401,399,400,403,401,402,399,400,403,401,402,399,400,403,401,402,399,400,403,401,402,402,894,895,406,0,0,0,0,405,406,0,0,0,0,406,0,406,406,405,406,0,406,377,410,409,390,404,405,406,407,408,377,410,409,390,404,405,406,407,408,377,410,409,390,404,405,406,407,408,377,410,409,390,404,405,406,407,408,390,390,390,390,390,404,405,406,406,407,407,408,408,377,410,409,390,404,405,406,407,408,390,377,410,409,390,404,405,406,407,408,377,410,409,390,404,405,406,407,408,377,410,409,390,404,405,406,407,408,377,410,409,390,404,405,406,407,408,390,409,409,377,377,404,405,410,410,409,410,404,410,406,407,408,377,410,409,390,404,405,406,407,408,377,410,409,390,404,405,406,407,408,377,410,409,390,404,405,406,407,408,377,410,409,390,404,405,406,407,408,896,896,414,0,0,413,0,414,414,414,414,414,0,413,413,411,412,413,414,411,412,413,414,411,412,413,414,411,412,413,414,411,412,413,414,414,411,412,413,413,413,413,414,411,412,413,414,411,412,413,414,411,412,413,414,411,412,413,414,411,413,411,412,414,411,412,413,414,411,412,413,414,411,412,413,414,411,412,413,414,897,897,420,0,425,424,425,0,0,0,424,0,425,0,0,424,418,425,418,0,424,425,418,420,424,424,0,0,0,425,425,0,415,415,417,416,421,418,422,419,423,424,425,420,415,417,416,421,418,422,419,423,424,425,420,415,417,416,421,418,422,419,423,424,425,420,415,417,416,421,418,422,419,423,424,425,420,423,417,416,417,416,422,418,419,420,418,419,420,416,419,415,423,418,419,420,418,418,419,419,420,420,415,415,417,416,418,422,419,423,424,425,425,420,415,417,416,421,418,422,419,419,423,424,425,420,419,415,415,419,417,416,415,415,417,416,421,418,422,419,423,424,425,420,415,417,416,421,418,422,419,423,424,425,420,415,417,416,421,418,422,419,423,424,425,420,415,417,416,421,418,422,419,423,424,425,420,417,416,415,422,415,419,419,415,421,415,415,419,415,417,416,422,415,415,415,416,416,415,415,415,418,419,420,425,415,417,416,421,418,422,419,423,424,425,420,415,417,416,421,418,422,419,423,424,425,420,415,417,416,421,418,422,419,423,424,425,420,417,416,416,415,415,415,417,416,421,418,422,419,423,424,425,420,416,423,898,898,899,899,900,901,427,427,427,427,427,0,0,431,431,431,431,431,431,431,431,427,427,427,0,431,427,0,0,427,427,427,427,431,431,427,427,427,428,430,431,427,429,428,430,431,427,429,428,429,427,428,429,428,429,428,430,431,427,429,428,430,431,427,429,428,430,431,427,429,428,430,431,427,429,428,429,428,428,429,428,429,428,430,427,429,428,428,430,430,427,427,429,429,428,428,430,430,431,431,427,427,429,429,428,428,430,431,427,429,428,428,427,428,429,428,429,428,430,431,427,429,428,430,431,427,429,428,430,431,427,429,428,430,431,427,429,428,428,429,428,428,428,428,430,431,427,429,428,430,431,427,429,428,428,428,430,431,427,429,429,428,430,431,427,429,428,430,431,427,429,428,430,431,427,429,433,0,0,432,433,432,433,432,432,433,432,433,433,433,432,432,432,433,433,432,433,432,432,432,432,432,433,432,433,432,433,432,433,433,432,433,432,432,432,433,432,433,432,433,432,433,436,439,0,438,435,0,0,438,438,439,0,0,436,0,0,436,436,435,436,437,434,438,439,440,435,436,437,434,438,439,440,434,434,434,434,435,436,437,434,438,439,440,435,436,437,434,438,439,440,435,434,435,434,434,434,434,435,434,435,435,434,434,435,436,436,437,437,434,434,438,438,439,439,440,440,435,436,437,434,434,434,438,439,440,440,434,435,434,434,434,434,435,436,437,434,438,439,440,435,436,437,434,438,439,440,435,436,437,434,438,439,440,435,436,437,434,438,439,440,434,435,434,434,435,434,435,436,437,434,438,439,440,435,436,437,434,434,438,439,440,435,436,437,434,438,439,440,435,436,437,434,438,439,440,435,435,436,437,434,438,439,440,0,0,0,451,447,0,0,0,0,448,448,0,447,446,0,450,0,0,0,450,446,0,0,448,0,450,450,0,450,450,450,0,450,452,449,0,451,0,446,0,449,453,0,0,0,450,450,450,450,0,0,0,0,0,450,0,442,442,442,442,454,442,443,444,445,450,446,451,447,448,449,452,453,454,442,443,444,445,450,446,451,447,448,449,452,453,454,442,443,444,445,450,446,451,447,448,449,452,453,454,442,443,444,445,450,446,451,447,448,449,452,453,442,442,442,443,444,445,446,447,448,449,443,444,445,446,447,448,449,442,444,445,442,454,443,444,445,446,448,449,443,443,444,444,445,445,446,446,448,448,449,449,443,442,443,444,445,450,446,451,451,447,447,448,449,452,452,453,453,454,442,443,444,445,450,446,451,447,448,449,452,453,442,444,445,454,442,444,445,442,442,442,442,442,454,442,443,444,445,450,446,451,447,448,449,452,453,454,442,443,444,445,450,446,451,447,448,449,452,453,454,442,443,444,445,450,446,451,447,448,449,452,453,454,442,443,444,445,450,446,451,447,448,449,452,453,454,442,442,442,454,442,454,442,442,442,443,444,445,454,442,454,442,442,454,442,454,442,442,442,443,442,443,444,445,446,447,448,449,451,447,452,453,454,442,443,444,445,450,446,451,447,448,449,452,453,454,442,443,444,445,450,446,451,447,448,449,452,453,454,442,443,444,445,450,446,451,447,448,449,452,453,442,442,454,442,443,444,445,450,446,451,447,448,449,452,453,902,903,904,905,906,905,902,907,908,907,909,910,907,911,912,910,913,902,913,903,904,902,905,906,907,911,912,910,913,906,903,914,906,906,914,911,904,915,916,917,917,0,0,378,378,378,455,378,455,378,455,378,455,378,378,378,455,378,378,378,378,455,378,455,378,455,378,455,455,378,455,378,378,378,378,378,455,378,455,378,455,378,455,378,455,378,378,378,378,378,0,0,464,460,464,460,464,460,464,460,464,460,464,464,460,464,460,464,464,460,460,460,460,460,464,464,460,464,460,464,460,464,464,460,0,0,0,0,0,465,465,465,465,465,465,465,465,465,465,0,465,465,465,465,465,472,472,0,466,467,0,0,469,466,469,0,0,0,469,0,468,469,471,470,472,466,467,468,469,471,470,472,466,467,468,469,471,470,472,466,467,468,469,471,470,472,466,467,466,467,466,467,468,468,466,467,466,466,467,467,468,466,466,467,467,468,469,471,470,472,466,467,468,468,470,471,468,469,471,470,472,466,467,468,469,471,470,472,466,467,468,469,471,470,472,466,467,468,469,471,470,472,466,467,469,468,468,468,468,469,470,466,467,466,467,468,469,471,470,472,466,467,468,469,471,470,472,466,467,468,469,471,470,472,466,467,468,469,471,470,472,466,467,481,480,502,502,502,495,0,0,0,0,0,0,0,0,501,496,0,484,0,0,484,493,484,0,0,0,0,0,0,0,0,0,0,481,480,0,0,0,483,0,500,500,500,501,501,507,507,480,493,0,500,484,0,483,486,486,0,486,0,495,500,501,507,502,494,495,0,0,0,0,0,496,0,500,0,0,484,0,500,476,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,485,492,491,491,479,479,477,478,475,482,474,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,0,0,0,0,0,0,0,479,480,473,481,482,483,474,484,485,486,487,488,489,490,491,492,476,477,493,494,478,475,495,496,479,480,473,481,482,483,474,484,485,486,487,488,489,490,491,492,476,477,493,494,478,475,495,496,489,0,0,0,0,0,0,0,0,0,0,473,473,476,0,0,479,480,473,481,482,483,474,484,485,486,487,488,489,490,491,492,476,477,493,478,475,496,479,479,480,480,473,473,481,481,482,482,483,483,474,474,484,484,485,485,486,486,487,487,488,488,489,489,490,490,491,491,492,492,476,476,477,477,493,493,478,478,475,475,496,496,473,479,480,497,498,498,499,499,473,481,482,483,474,500,500,501,501,484,485,486,487,488,489,490,491,492,503,503,504,508,505,505,476,507,507,502,502,509,509,477,493,494,494,478,475,495,495,496,504,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,479,480,496,480,496,474,482,474,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,497,504,482,474,478,476,485,475,476,475,491,491,476,476,479,485,489,490,491,497,508,508,480,484,489,485,489,490,491,485,492,473,477,487,488,492,487,488,492,479,480,473,481,482,483,474,484,485,486,487,488,489,490,491,492,476,477,493,494,478,475,495,496,498,499,500,501,503,505,507,502,509,494,495,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,479,480,497,498,499,473,481,482,483,474,500,501,484,485,486,487,488,489,490,491,492,503,504,508,505,476,507,502,509,477,493,494,478,475,495,496,918,918,534,534,534,534,534,533,525,0,533,0,525,0,0,533,533,533,0,0,533,0,0,0,528,519,520,530,531,527,533,0,528,0,0,0,0,0,0,528,0,526,514,533,533,0,525,0,533,0,522,0,534,533,529,529,529,528,533,525,0,0,529,0,0,526,528,0,0,522,0,0,533,0,519,520,528,519,520,530,531,527,533,0,533,0,0,0,0,0,525,0,525,0,514,510,510,919,510,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,511,512,510,919,919,510,919,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,510,510,535,513,514,515,511,516,517,512,518,519,520,521,522,513,514,515,511,516,517,512,518,519,520,521,522,516,521,522,513,535,523,515,511,517,512,518,510,510,516,521,522,516,516,521,521,522,522,532,523,513,514,514,515,511,516,525,517,512,518,526,526,527,527,528,528,529,529,519,519,520,520,530,530,531,531,521,532,533,522,534,534,919,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,919,516,521,522,919,535,516,521,522,532,919,510,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,511,520,535,532,510,510,510,510,535,535,510,510,510,510,919,516,521,522,535,510,510,510,510,510,535,510,510,919,513,510,513,510,510,510,510,510,510,510,510,510,510,510,532,513,514,515,511,516,517,512,518,519,520,521,522,514,526,527,528,529,519,520,530,531,534,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,510,523,535,919,510,513,514,515,511,516,525,517,512,518,526,527,528,529,519,520,530,531,521,532,533,522,534,920,920,921,921,922,923,923,923,924,925,926,922,927,928,929,930,929,925,931,928,932,930,923,924,925,926,922,927,928,931,933,929,934,933,929,935,934,932,923,923,927,924,925,936,936,0,0,0,0,0,937,0,565,554,542,0,0,0,0,0,0,0,545,539,0,0,553,0,542,546,562,544,0,0,544,544,544,554,0,554,545,539,0,555,0,555,0,542,0,0,542,555,554,554,542,937,937,0,937,546,0,0,0,545,539,0,544,0,0,0,539,545,0,0,542,562,544,551,542,0,553,553,565,565,565,565,551,565,565,0,0,0,551,537,537,549,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,537,537,537,537,537,537,537,537,549,549,537,548,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,543,537,549,538,540,545,539,546,547,548,538,540,545,539,546,547,548,538,540,537,549,538,540,545,539,546,538,538,540,540,545,545,539,539,546,546,537,550,549,550,538,540,551,545,539,552,546,547,548,553,553,554,555,555,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,539,552,546,547,548,553,554,555,549,547,541,538,540,537,537,537,556,557,538,540,547,556,557,537,537,558,559,560,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,938,542,541,937,556,563,557,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,537,547,560,558,537,549,549,537,537,537,545,539,537,548,538,540,556,563,564,559,541,537,564,537,541,938,557,938,552,552,938,537,537,537,537,549,557,548,537,537,548,538,540,545,539,546,547,548,553,555,537,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,938,547,537,938,542,541,565,937,556,562,563,564,557,544,560,559,558,543,549,550,538,540,551,545,539,552,546,547,548,553,554,555,545,539,939,939,940,941,941,940,940,942,943,944,942,942,944,943,942,944,942,942,942,943,945,946,946,947,948,948,947,947,949,950,950,950,949,950,951,952,953,951,951,953,952,951,953,951,951,951,954,955,956,957,956,957,956,957,0,0,0,0,0,0,0,0,587,583,567,575,567,0,0,0,586,586,0,0,0,582,585,0,587,0,0,583,0,583,0,587,0,0,575,958,583,575,583,958,586,580,0,580,0,0,0,585,575,958,958,575,586,567,582,582,566,568,568,572,573,574,581,568,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,568,568,568,568,568,568,581,568,568,581,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,576,577,578,579,581,571,570,580,571,570,580,571,570,568,571,570,571,571,570,570,568,566,568,570,570,571,570,581,580,582,582,583,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,581,571,570,568,578,571,570,578,568,568,577,584,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,568,581,581,568,568,568,570,568,571,570,578,579,568,568,568,576,568,568,568,0,568,581,571,570,580,582,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,588,576,588,573,568,566,567,576,577,575,588,584,958,586,572,573,574,578,579,587,585,959,571,570,581,580,582,583,960,961,961,962,962,963,964,964,963,965,0,0,589,589,589,589,569,589,569,589,589,569,589,569,569,569,569,589,569,569,569,589,589,569,589,569,569,569,589,589,589,569,589,569,589,569,589,569,589,589,589,589,589,589,569,589,589,589,589,589,569,589,569,589,569,589,569,589,589,569,0,0,0,0,0,0,0,0,0,966,594,594,594,0,601,601,608,601,0,0,594,601,967,0,0,967,0,0,0,0,594,966,0,0,594,0,0,0,0,0,608,608,590,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,590,590,590,590,590,602,590,600,590,598,598,969,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,593,598,596,595,591,595,591,595,591,590,590,598,597,595,591,595,595,591,591,590,599,590,590,597,598,599,595,591,600,601,601,596,602,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,968,598,592,595,591,603,595,591,968,603,602,590,590,604,605,606,590,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,590,968,969,970,608,592,603,607,966,593,967,597,598,599,595,591,600,601,596,602,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,597,603,968,606,604,595,595,597,590,597,590,590,600,590,969,595,591,607,605,592,590,590,590,596,592,970,603,970,970,597,590,600,590,590,596,598,603,969,969,595,591,601,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,968,970,602,590,968,969,970,608,592,603,594,607,966,606,605,604,593,967,597,598,599,595,591,600,601,596,602,971,971,972,972,972,971,973,974,973,975,0,609,609,0,0,0,609,609,611,610,609,611,610,609,611,610,609,611,610,609,610,609,610,0,609,610,609,609,610,610,609,611,611,610,609,611,610,609,609,609,611,610,609,611,610,609,611,610,609,611,610,610,610,0,610,610,609,609,610,611,609,611,610,609,611,610,609,611,610,609,611,610,0,624,0,624,621,620,0,0,0,622,0,621,624,622,0,620,620,620,620,620,618,0,0,0,620,619,614,0,0,619,614,0,618,0,624,0,0,0,619,614,612,612,626,623,612,624,625,616,617,620,618,613,622,621,619,614,615,626,623,612,624,625,616,617,620,618,613,622,621,619,614,615,612,612,626,626,623,612,624,625,616,617,620,618,613,622,621,619,614,615,626,623,612,624,625,616,617,620,618,613,622,621,619,614,615,616,617,623,618,613,619,614,615,618,613,619,614,615,613,615,612,613,615,613,613,615,615,612,623,623,623,620,620,618,618,613,621,619,614,615,626,623,612,624,625,616,617,620,618,613,622,622,622,621,619,614,615,613,615,613,615,623,612,612,626,623,612,624,625,616,617,620,618,613,622,621,619,614,615,626,623,612,624,625,616,617,620,618,613,622,621,619,614,615,626,623,620,618,613,621,619,614,615,626,623,612,624,625,616,617,620,618,613,622,621,619,614,615,613,615,612,625,612,626,612,612,623,626,626,0,612,612,618,613,619,614,615,620,618,626,623,612,624,625,616,617,620,618,613,622,621,619,614,615,626,623,612,624,625,616,617,620,618,613,622,621,619,614,615,626,623,612,624,625,616,617,620,618,613,622,621,619,614,615,625,626,623,612,624,625,616,617,620,618,613,622,621,619,614,615,612,976,977,978,978,977,978,977,979,980,981,981,980,981,982,983,982,983,982,983,0,0,0,0,0,0,0,0,0,627,627,631,627,984,628,629,630,631,627,984,628,629,630,627,984,627,627,631,631,627,984,628,629,630,631,627,984,628,629,630,628,629,630,628,629,630,628,628,629,628,628,629,629,631,627,627,628,629,630,631,627,984,628,629,630,628,627,628,629,984,630,629,631,627,984,628,629,630,631,627,984,628,629,630,631,627,984,628,629,630,631,627,984,628,629,630,627,627,627,627,627,627,627,627,628,627,627,630,627,629,627,627,627,627,628,629,630,627,627,631,627,627,631,627,984,628,629,630,631,627,984,628,629,630,631,627,984,628,629,630,627,984,629,631,627,984,628,629,630,0,0,0,636,0,0,636,0,633,633,638,633,635,637,634,636,638,633,635,637,634,636,633,635,638,633,635,637,634,636,638,633,635,637,634,636,638,634,634,634,634,634,634,638,633,635,633,635,637,634,636,638,633,635,637,634,636,634,634,633,633,637,638,633,635,637,634,636,638,633,635,637,634,636,638,633,635,637,634,636,638,633,635,637,634,636,633,633,633,633,633,634,633,633,633,633,633,634,638,633,635,637,634,636,638,633,635,637,634,636,638,633,635,637,634,636,633,633,633,638,633,635,637,634,636,985,985,641,641,641,641,642,0,641,642,0,643,0,641,640,646,641,640,639,643,0,640,641,0,646,642,643,641,0,646,0,641,0,646,0,0,0,639,643,0,0,0,643,643,643,649,646,648,645,647,640,632,641,642,643,644,639,649,646,648,645,647,640,632,641,642,643,644,639,649,649,646,648,645,647,640,632,641,642,643,644,639,649,646,648,645,647,640,632,641,642,643,644,639,640,632,641,642,643,644,639,640,632,641,642,643,644,639,0,640,632,641,642,639,640,640,632,632,641,641,642,642,639,639,640,632,641,641,642,642,643,643,644,644,639,639,649,646,648,645,647,640,632,641,642,643,644,639,645,647,648,649,646,648,645,647,640,632,641,642,643,644,639,649,646,648,645,647,640,632,641,642,643,644,639,649,640,632,641,642,643,644,639,649,646,648,645,647,640,632,641,642,643,644,639,646,648,645,632,649,647,632,632,632,632,649,649,649,649,640,632,641,642,643,644,639,641,642,643,644,639,649,646,648,645,647,640,632,641,642,643,644,639,649,646,648,645,647,640,632,641,642,643,644,639,649,646,648,645,647,640,632,641,642,643,644,639,0,0,0,649,646,648,645,647,640,632,641,642,643,644,639,986,986,0,0,0,651,0,168,168,0,651,650,168,651,650,168,651,650,168,651,650,168,0,0,650,168,650,168,0,168,168,168,651,651,650,168,651,650,168,168,168,651,650,168,651,650,168,651,650,168,651,650,168,650,650,0,0,0,0,0,650,650,168,651,0,0,0,651,650,168,168,651,650,168,651,650,168,651,650,168,0,654,0,654,0,0,654,654,653,655,92,654,653,655,92,654,653,655,92,654,653,655,92,92,92,92,92,92,654,653,655,92,653,655,654,653,655,92,654,653,655,92,654,653,655,92,654,653,655,92,655,92,0,92,92,654,653,655,92,654,653,655,92,654,653,655,92,654,653,655,92,987,987,0,0,658,656,656,0,0,658,659,657,658,656,659,657,658,656,659,657,658,656,659,657,658,656,656,656,657,658,656,656,659,657,658,656,659,657,658,656,659,657,658,656,659,657,658,656,659,657,658,656,659,0,657,657,656,656,659,659,657,658,656,659,657,658,656,659,657,658,656,659,657,658,656,988,661,0,0,0,0,664,0,663,661,664,664,663,661,663,0,0,0,664,664,664,667,668,663,664,665,666,660,661,667,668,663,664,665,666,660,661,667,668,663,664,665,666,660,661,667,668,663,664,665,666,660,661,660,660,666,663,664,665,666,660,661,663,664,665,666,660,661,0,668,663,664,664,665,666,660,660,667,668,663,664,665,666,660,661,660,667,668,663,664,665,666,660,661,667,668,663,664,665,666,660,661,667,668,663,664,665,666,660,661,667,668,663,664,665,666,660,661,668,668,665,667,668,666,663,664,665,666,660,661,664,668,665,667,667,668,663,664,665,666,660,661,667,668,663,664,665,666,660,661,667,668,663,664,665,666,660,661,665,667,668,663,664,665,666,660,661,989,990,990,0,0,669,652,669,652,669,652,669,652,669,669,652,652,652,669,652,652,652,652,652,652,669,652,652,652,669,652,669,652,669,652,669,652,669,669,669,652,669,652,669,669,652,652,669,652,669,652,669,652,669,676,676,676,676,0,0,676,676,0,0,674,676,676,0,674,672,676,676,676,0,676,676,676,674,676,672,670,671,674,675,676,672,670,671,674,675,676,670,670,670,672,670,671,674,675,676,672,670,671,674,675,676,0,671,671,672,670,671,674,675,676,672,670,671,674,675,676,0,0,670,670,0,674,674,674,672,672,670,671,674,675,676,676,672,670,671,674,675,676,670,675,675,674,674,672,670,671,674,675,676,672,670,671,674,675,676,672,670,671,674,675,676,672,670,671,674,675,676,675,675,671,675,671,672,670,671,674,675,676,672,676,672,670,671,674,675,676,672,670,671,674,675,676,672,670,671,674,675,676,672,670,671,674,675,676,679,687,0,0,0,0,686,683,0,0,0,0,687,687,679,0,687,687,0,683,0,686,686,679,680,687,681,685,683,684,677,678,682,686,679,680,687,681,685,683,684,677,678,682,686,679,680,687,681,685,683,684,677,678,682,686,679,680,687,681,685,683,684,677,678,682,677,678,679,680,681,679,680,681,678,682,678,682,678,682,682,682,678,678,682,686,679,680,687,681,685,683,684,677,678,682,679,680,681,682,679,682,683,684,677,681,685,686,679,680,687,681,685,683,684,677,678,682,686,679,680,687,681,685,683,684,677,678,682,686,679,680,687,681,685,683,684,677,678,682,686,679,680,687,681,685,683,684,677,678,682,679,680,681,679,680,681,679,680,681,686,679,680,681,679,686,678,679,680,681,678,678,678,678,678,678,679,680,681,679,680,681,679,680,681,680,678,678,678,678,678,678,682,686,679,680,687,681,685,683,684,677,678,682,686,679,680,687,681,685,683,684,677,678,682,686,679,680,687,681,685,683,684,677,678,682,679,680,681,686,679,680,687,681,685,683,684,677,678,682,678,991,992,993,991,991,992,993,994,0,0,0,0,0,689,689,689,689,689,689,689,689,0,0,0,690,688,689,690,688,689,688,690,690,688,689,690,688,689,690,688,689,689,690,688,689,690,690,688,689,690,688,689,690,688,689,690,688,689,690,690,690,689,690,688,689,690,688,689,690,688,689,0,690,688,689,692,692,692,692,692,692,692,692,692,692,692,692,692,0,0,0,693,691,692,693,691,692,693,693,691,692,693,691,692,691,691,692,692,693,691,692,693,693,691,692,693,691,692,693,691,692,693,691,692,693,693,693,693,691,693,692,693,691,692,693,691,692,693,691,692,0,693,691,692,995,996,696,995,996,696,696,696,696,0,0,0,695,696,696,696,696,696,0,695,0,695,0,695,0,695,0,0,0,696,0,696,696,700,700,995,997,996,695,699,698,697,694,696,700,995,997,996,695,699,698,697,694,696,700,700,700,700,995,997,996,695,699,698,697,694,696,700,995,997,996,695,699,698,697,694,696,694,700,997,696,696,700,995,997,996,695,699,698,697,694,696,697,698,699,700,995,997,996,695,699,698,697,694,696,700,995,997,996,695,699,698,697,694,696,700,995,997,996,694,696,700,995,997,996,695,699,698,697,694,696,699,697,997,700,997,700,997,700,997,700,700,997,698,997,997,696,700,995,997,996,695,699,698,697,694,696,700,995,997,996,695,699,698,697,694,696,700,995,997,996,695,699,698,697,694,696,0,700,995,997,996,695,699,698,697,694,696,998,999,999,998,999,1000,1001,1002,1003,1003,1004,703,701,1004,703,701,701,0,0,0,0,701,1005,701,701,701,1005,0,701,702,702,1004,1005,703,701,702,1004,1005,703,701,702,702,702,1004,1005,703,701,702,1004,1005,703,701,702,702,701,701,702,1004,1005,703,701,702,1004,1005,703,701,702,1004,1005,703,701,702,1004,1005,703,701,702,1004,1005,703,701,702,701,702,1004,1005,703,701,702,1004,1005,703,701,702,1004,1005,703,701,0,702,1004,1005,703,701,1006,1006,1007,1007,1007,1006,1007,1008,1009,1010,1010,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[2,2],[[]],0,[[2,2],3],[[],3],[[],3],[[2,4],5],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,[[[11,[10]]],[[12,[2]]]],0,0,0,0,0,[[]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,[17,[16]]],18],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[19,20],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[15,18],[[21,4],5],[[22,4],5],[[22,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,22],[[]],[[24,[12,[25]]],18],[[26,10],18],[19,27],[[28,12],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[28,25],[24,25],0,0,[[[29,[10]]],30],0,0,0,0,[26,25],[19],[31,32],[31,32],[[31,33],18],[21,31],[19],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[35,[17,[16]]],36],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,36],[38,38],[39,39],[40,40],[41,41],[[]],[[]],[[]],[[]],0,[[38,38],3],[[39,39],3],[[40,40],3],[[41,41],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[35,36],[[23,4],5],[[23,4],5],[[38,4],5],[[38,4],5],[[39,4],5],[[39,4],5],[[40,4],5],[[40,4],5],[[41,4],5],[[41,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[42,43],36],[[44,[12,[25]]],36],[[45,10],36],[[42,[0,[46,47]]],36],[[48,12],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[48,25],[44,25],0,0,0,0,0,0,0,0,0,[45,25],0,0,0,[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[49,50],10],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[49,51],10],[[49,51]],[[49,51],[[17,[50]]]],0,0,[49,12],[[49,50],12],[[49,50],12],0,[[49,50]],0,[[49,50]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,[12,[50]]],10],[51,51],[[[52,[47,47]]],[[52,[47,47]]]],[[[53,[47,47]]],[[53,[47,47]]]],[[[54,[47,47]]],[[54,[47,47]]]],[[]],[[]],[[]],[[]],[[51,51],55],[[51,51],3],[[[52,[56,56]],52],3],[[[53,[56,56]],53],3],[[[54,[56,56]],54],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[49],0,[[51,4],5],[[[58,[57,57]],4],5],[[[59,[57]],4],5],[[[52,[57,57]],4],5],[[[53,[57,57]],4],5],[[[54,[57,57]],4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[51],0,0,0,[[49,50,50]],[[49,[12,[50]],3,3],50],[49,10],[49,10],[[49,50]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,[[49,61],49],[62,49],[49,58],[49,20],[[49,50],[[12,[50]]]],[[51,51],[[12,[55]]]],0,[[]],[[]],[[]],[[]],[49,[[12,[53]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[63,64],[65,64],0,[66,67],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[64,68],[64,69],[64],[64,70],[64,20],0,[66],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,72],0,[[],73],[64],[74,74],[[]],[64,3],[67],[75],[64,10],[64],[64,70],[[66,4],5],[[63,4],5],[[75,4],5],[[65,4],5],[[64,4],5],[[76,4],5],[[76,4],5],[[77,4],5],[[77,4],5],[[78,4],5],[[78,4],5],[[79,4],5],[[79,4],5],[[[80,[57]],4],5],[[81,4],5],[[81,4],5],[[[82,[57]],4],5],[[83,4],5],[[83,4],5],[[74,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,70],[65,70],[[84,[12,[25]]],72],[[85,10],72],[[86,12],72],[75],[65,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[75,87],[[]],[88],[66,3],[64,3],[64,10],[64,10],[86,25],[84,25],[64,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,64],[67,12],[[],89],[[],90],[[],89],[[],90],[64,[[12,[88]]]],[64,12],[[63,60],[[12,[88]]]],[[86,60],[[12,[88]]]],[[85,60],[[12,[88]]]],[[84,60],[[12,[88]]]],[63,60],[86,60],[85,60],[84,60],[63,[[12,[88]]]],[88,[[13,[88,88]]]],[85,25],[[64,20]],[[63,91,[0,[46,47]],[12,[92]]],72],[64,[[13,[67,79]]]],[64],[67],[[],93],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[67,3],[88],[[64,[17,[16]],32],80],[64,[[13,[66,77]]]],[[64,[17,[16]],32],[[13,[82,83]]]],[64,[[13,[66,76]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[94,95],[68,95],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[94,94],[68,68],[96,96],[97,97],[98,98],[99,99],[95,95],[69,69],[100,100],[101,101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[94,4],5],[[68,4],5],[[96,4],5],[[97,4],5],[[98,4],5],[[99,4],5],[[95,4],5],[[69,4],5],[[100,4],5],[[101,4],5],[[102,4],5],[[102,4],5],[[103,4],5],[[103,4],5],[68,94],[[]],[94,68],[[]],[94,96],[[]],[95,96],[[]],[100,98],[[]],[[]],[101,99],[[]],[96,95],[[]],[[]],[98,100],[99,101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[96,[[13,[94]]]],[[],13],[95,[[13,[68]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[98,[[13,[103]]]],[95,[[13,[102]]]],[100,[[13,[103]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,105],[106,105],[107,105],[105,105],[[]],[[105,105],3],[[],3],[[],3],0,[[108,4],5],[[108,4],5],[[105,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105,109],[[],60],[105],[[107,[12,[25]]],110],[[106,[12,[10]]],110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[106,25],[107,25],[111,110],[105,[[0,[10,47]]]],[105,[[17,[16]]]],[104,10],0,[[]],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[112,50],10],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[112,50,50]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[112,[12,[50]]],10],[112],[50,50],[[]],[[50,50],55],[[112,50,50],[[12,[50]]]],[[],112],[113],[[50,50],3],[[],3],[[],3],[[112,61],[[12,[50]]]],[[112,4],5],[[50,4],5],[[]],[[]],[[]],[[]],[[112,50],12],[[112,50],12],0,[[112,[12,[50]]],50],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[112,50,50],3],[112,3],0,[112,10],[112,10],[112,20],[[112,61],112],[[],112],[113,12],[[112,50],[[0,[10,47]]]],[[112,50],[[12,[50]]]],[[50,50],[[12,[55]]]],[[112,50],113],[[112,50],113],[[112,20]],[[112,50],[[0,[10,47]]]],[112],[113],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[20,112],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[114,96],[115,[[13,[116]]]],[115,10],[115,16],[115,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[115,109],[115,115],[117,117],[[]],[[]],[[117,117],3],[[],3],[[],3],[[117,4],5],[[118,4],5],[[118,4],5],[[116,4],5],[[116,4],5],[115,[[12,[109]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,[[13,[115,118]]]],[115,119],[115,3],[115,109],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[119,[[12,[120]]]],[119,12],[120,[[0,[46,47]]]],[115,[[12,[114]]]],[115,109],[115,109],[115,109],[115,12],[115,10],[[]],[[]],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[120,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[109,20],[[13,[121]]]],[[[122,[68]],20],34],[[[122,[68]],20,[12,[10]]],34],[[121,4],5],[[121,4],5],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[],34],[[],13],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[123,[[13,[124]]]],[123,[[13,[[12,[46]],124]]]],[[123,60],[[13,[46,124]]]],0,[123,[[13,[[12,[[17,[16]]]],124]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123],[123,[[13,[124]]]],[123,[[13,[125,126]]]],[123,[[13,[12,126]]]],[123,[[13,[[17,[[17,[16]]]],126]]]],[123,[[13,[[12,[[17,[16]]]],126]]]],[[123,4],5],[[127,4],5],[[128,4],5],[[124,4],5],[[124,4],5],[[129,4],5],[[129,4],5],[[130,4],5],[[130,4],5],[[126,4],5],[[126,4],5],[[131,4],5],[[131,4],5],[[132,4],5],[[132,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[131,124],[124,129],[[]],[133,129],[124,130],[[]],[[]],[[],126],[124,126],[[]],[[]],[[134,[122,[95]],46,[12,[[17,[16]]]],[0,[10,47]],16],[[13,[123,124]]]],[[123,3,46,[0,[10,47]],16],[[13,[129]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[127,[[13,[135,132]]]],[123,[[13,[130]]]],[123,[[13,[94,126]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[136,136],[[]],[[136,4],5],[[136,4],5],[[]],0,[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],0,0,0,[12,[[13,[137,136]]]],[[]],[[],34],[[],13],[[],13],[[],14],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138,[[12,[25]]]],[139,139],[91,91],[[[140,[47]]],[[140,[47]]]],[[[141,[47]]],[[141,[47]]]],[142,142],[143,143],[144,144],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[145,3],[[[140,[56]],140],3],[[[141,[56]],141],3],[[],3],[[],3],[[],3],[[],3],0,[[146,4],5],[[147,4],5],[[148,4],5],[[149,4],5],[[150,4],5],[[151,4],5],[[145,4],5],[[152,4],5],[[138,4],5],[[153,4],5],[[154,4],5],[[155,4],5],[[156,4],5],[[156,4],5],[[157,4],5],[[158,4],5],[[159,4],5],[[139,4],5],[[139,4],5],[[91,4],5],[[160,4],5],[[140,4],5],[[[141,[57]],4],5],[[142,4],5],[[142,4],5],[[143,4],5],[[143,4],5],[[144,4],5],[[144,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[151,160],[[]],[155,160],[156,160],[138,160],[147,160],[153,160],[148,160],[157,160],[150,160],[154,160],[145,160],[158,160],[149,160],[152,160],[146,160],[[]],[[]],[161,142],[162,142],[139,142],[[]],[163,143],[[],143],[[]],[[]],[[],60],[[],60],[[[140,[164]]]],[[[141,[164]]]],[91,137],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[147,91],[160,91],[153,3],[148,[[140,[25]]]],[149,[[140,[25]]]],[150,[[140,[25]]]],[152,[[140,[25]]]],[155,25],[151,[[12,[165]]]],[148,165],[153,25],0,[[[166,[25]]],[[13,[91,142]]]],[148,165],[151,[[140,[25]]]],[153,25],[[148,12],160],[149,160],[150,160],[[151,165,3],160],[[145,12],160],[[152,12],160],[[138,12],160],[[154,13],160],[155,160],[156,160],[[157,165],160],[158,160],[159,160],[153,160],[[148,12],160],[153,160],[[148,12],160],[146,160],[[91,109],[[13,[146]]]],[[91,109],[[13,[146]]]],[[91,109,[0,[10,47]]],[[13,[146]]]],0,[91,167],[153,25],[149,168],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[145,[[141,[25]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[147,25],[149,[[12,[25]]]],[150,25],[155,[[12,[25]]]],[153,160],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[154,25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[167],[[],[[13,[169]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[170,170],[171,171],[162,162],[167,167],[172,172],[173,173],[174,174],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[173,109,[175,[165]]],3],[[173,[175,[165]]],3],[167,172],[[]],[[]],[[167,167],3],[[172,172],3],[[173,173],3],[[174,174],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],[[13,[[12,[167]],170]]]],[[],[[13,[171]]]],[[173,109],[[12,[165]]]],[173],[[170,4],5],[[170,4],5],[[171,4],5],[[171,4],5],[[162,4],5],[[162,4],5],[[167,4],5],[[172,4],5],[[173,4],5],[[174,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[17,[16]]],[[13,[167,[17,[16]]]]]],[[],[[13,[173]]]],[[],60],[174],[109],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],0,[173,12],[172,[[17,[16]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[176,176],[[]],0,[[177,4],5],[[178,4],5],[[179,4],5],[[179,4],5],[[176,4],5],[[176,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[180,[12,[25]]],181],[[182,[12,[10]]],181],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[177,91],[181,91],[183,3],[182,25],[180,25],0,0,[183,25],0,0,[183,25],[184,181],[183,181],[183,181],[[[185,[[0,[10,47]]]]],[[13,[181]]]],[183,25],[[]],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[177,25],[183,181],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[186,186],[[]],0,[[187,4],5],[[188,4],5],[[189,4],5],[[189,4],5],[[186,4],5],[[186,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[190,[12,[25]]],191],[[192,10],191],[[193,12],191],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[187,91],[191,91],[194,3],[193,25],[190,25],0,0,0,0,[194,25],0,0,0,[192,25],0,[194,25],[194,191],[194,191],[[[195,[[0,[10,47]]]]],[[13,[191]]]],[194,25],0,0,0,[[]],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[187,25],[194,191],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[196],[[[196,[47]]],[[196,[47]]]],[[]],[[],196],[196,12],[[196,[122,[[17,[16]]]],[122,[[17,[16]]]]],12],[[196,[122,[[17,[16]]]]],12],[196,46],[196,[[0,[46,47]]]],[[196,25],12],[[],196],[[196,196],3],[[],3],[[],3],[[196,4],5],[[]],[[]],[[],196],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[196,196]],[[196,196,61]],[[196,12],197],[[196,10],10],[[]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[137,137],137],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[198,198],[199,199],[137,137],[200,200],[201,201],[202,202],[203,203],[161,161],[163,163],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[137,137],55],[[199,199],3],[[137,137],3],[[200,200],3],[[201,201],3],[[202,202],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[204,4],5],[[205,4],5],[[198,4],5],[[199,4],5],[[137,4],5],[[200,4],5],[[201,4],5],[[202,4],5],[[206,4],5],[[206,4],5],[[207,4],5],[[203,4],5],[[203,4],5],[[161,4],5],[[161,4],5],[[163,4],5],[[163,4],5],[[208,4],5],[[208,4],5],[[209,4],5],[[209,4],5],[[210,4],5],[[210,4],5],[[],[[12,[199]]]],[[]],[[]],[[]],[[]],[165,137],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[],60],[[],60],[[198,109],[[13,[165,210]]]],[[204,137],[[13,[208]]]],[[205,137],[[13,[208]]]],[137],[200],[202],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[201,[[12,[211]]]],[201,[[12,[212]]]],[204,198],[205,198],[198,[[12,[137]]]],[204,137],[205,137],[[25,199,61],[[13,[198,161]]]],[165,137],[[10,[122,[[12,[202]]]]],200],[200,46],[[137,137],[[12,[55]]]],[198,204],[213],[[204,165,165],[[13,[25,208]]]],[[205,165,165],[[13,[25,208]]]],[200,[[12,[202]]]],[[205,[12,[201]]],[[13,[207,209]]]],[[204,109],[[13,[205]]]],[[137,137],137],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[214,[[13,[200]]]],[[],13],[215,[[13,[200]]]],[215,[[13,[200]]]],[216,[[13,[201]]]],[217,[[13,[201]]]],[[],13],[216,[[13,[201]]]],[[],13],[218,[[13,[202]]]],[219,[[13,[202]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[201,202],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[204,165],[[13,[208]]]],[[205,165],[[13,[208]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[220,220],[221,221],[222,222],[[]],[[]],[[]],[20,[[13,[220,223]]]],[20,[[13,[223]]]],[[220,220],3],[[221,221],3],[[222,222],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[223,4],5],[[223,4],5],[[220,4],5],[[221,4],5],[[222,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[224,[25]]]],[[[225,[25]]]],[[[225,[25]]],60],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[226,[57]],4],5],[[227,4],5],[[227,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,[[[224,[25]],3],[[228,[25]]]],[[[225,[25]],[12,[3]]],[[228,[25]]]],[[[225,[25]]]],[[[225,[25]]],60],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[[226,[25]]],[[228,[25]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[229,4],5],[[229,4],5],[[230,4],5],[[231,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[101,20,[17,[231]],3],230],[230,[[13,[232,229]]]],0,0,[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[233,233],[234,234],[235,235],[236,236],[[]],[[]],[[]],[[]],[20,[[13,[237,238]]]],[20,[[13,[238]]]],[20,[[13,[238]]]],[[234,234],3],[[235,235],3],[[],3],[[],3],[[],3],[[],3],[[237,4],5],[[239,4],5],[[233,4],5],[[234,4],5],[[235,4],5],[[236,4],5],[[238,4],5],[[238,4],5],[[]],[239,237],[[]],[[]],[237,239],[[]],[235,234],[[]],[[]],[234,235],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[233,46],[240,12],[236,12],0,0,0,0,0,0,[240],[236],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],0,0,0,[[]],[[]],[[]],[[]],[[[241,[57]],4],5],[[242,4],5],[[242,4],5],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,[[],34],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[[241,[[0,[10,47]]]]],[[13,[242]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[243,[[12,[244]]]],[243,12],[245,12],0,0,0,0,0,0,0,[243,12],[245,12],[243,[[12,[246]]]],[245,[[12,[246]]]],[243,12],[245,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[247,247],[248,248],[249,249],[250,250],[251,251],[244,244],[252,252],[253,253],[254,254],[255,255],[256,256],[257,257],[258,258],[259,259],[260,260],[246,246],[261,261],[262,262],[263,263],[264,264],[265,265],[266,266],[267,267],[268,268],[269,269],[270,270],[271,271],[272,272],[273,273],[133,133],[70,70],[87,87],[243,243],[245,245],[274,274],[275,275],[276,276],[277,277],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,[[13,[70,133]]]],[[],[[13,[249,133]]]],[[],[[13,[259,278]]]],[[],[[13,[260,278]]]],[[],[[13,[278]]]],[[],[[13,[278]]]],[165,[[13,[278]]]],[165,[[13,[278]]]],[20,[[13,[133]]]],[165,[[13,[278]]]],[165,[[13,[278]]]],0,0,0,0,[[],243],[259],[260],[[247,247],3],[[248,248],3],[[249,249],3],[[250,250],3],[[251,251],3],[[244,244],3],[[252,252],3],[[253,253],3],[[254,254],3],[[255,255],3],[[256,256],3],[[257,257],3],[[258,258],3],[[259,259],3],[[260,260],3],[[246,246],3],[[262,262],3],[[264,264],3],[[265,265],3],[[267,267],3],[[268,268],3],[[269,269],3],[[270,270],3],[[271,271],3],[[272,272],3],[[273,273],3],[[276,276],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],0,0,[[247,4],5],[[248,4],5],[[249,4],5],[[250,4],5],[[251,4],5],[[244,4],5],[[252,4],5],[[253,4],5],[[254,4],5],[[255,4],5],[[256,4],5],[[257,4],5],[[258,4],5],[[259,4],5],[[260,4],5],[[246,4],5],[[261,4],5],[[262,4],5],[[263,4],5],[[264,4],5],[[265,4],5],[[266,4],5],[[267,4],5],[[268,4],5],[[269,4],5],[[270,4],5],[[271,4],5],[[272,4],5],[[273,4],5],[[133,4],5],[[133,4],5],[[70,4],5],[[87,4],5],[[243,4],5],[[245,4],5],[[275,4],5],[[275,4],5],[[276,4],5],[[277,4],5],[[]],[248,247],[[]],[[]],[247,248],[[]],[251,250],[[]],[[]],[250,251],[[]],[[]],[253,252],[252,253],[[]],[[]],[255,254],[254,255],[[]],[[]],[[]],[258,257],[257,258],[[]],[[]],[[]],[[]],[261,246],[246,261],[[]],[263,262],[[]],[[]],[262,263],[[]],[266,265],[[]],[265,266],[[]],[268,267],[[]],[[]],[267,268],[[]],[270,269],[269,270],[[]],[[]],[273,272],[[]],[272,273],[[]],[[]],[87,70],[[]],[[]],[70,87],[245,243],[[]],[[]],[243,245],[[]],[[]],[[]],[277,276],[276,277],[[]],[[],[[13,[247,133]]]],[[],249],[[],[[13,[244,133]]]],[[],[[13,[252,133]]]],[[],[[13,[254,133]]]],[[],256],[[],[[13,[259,133]]]],[[],[[13,[260,133]]]],[[],[[13,[246,133]]]],[[],[[13,[262,133]]]],[[],[[13,[264,133]]]],[[],[[13,[265,133]]]],[20,[[13,[267,133]]]],[[],[[13,[243,133]]]],[243,3],[243,3],[243,3],[243,3],[245,3],[[70,20]],[[87,20]],[25],[10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[]],[[]],[[]],[276,3],[276,3],[276,3],[246,3],[243,274],[245,274],[[],271],[249,12],[256,12],[271,12],[274,12],0,0,0,0,0,0,[243,[[12,[279]]]],0,0,0,0,0,0,[245,[[13,[275]]]],[245,[[13,[275]]]],0,0,[247,[[0,[10,47]]]],[250,[[0,[10,47]]]],[244,[[0,[10,47]]]],[252,[[0,[10,47]]]],[254,[[0,[10,47]]]],[257,[[0,[10,47]]]],[259,[[0,[10,47]]]],[260,[[0,[10,47]]]],[246,[[0,[10,47]]]],[262,[[0,[10,47]]]],[264,[[0,[10,47]]]],[265,[[0,[10,47]]]],[[267,20],[[0,[10,47]]]],[[269,20],[[0,[10,47]]]],[272,[[0,[10,47]]]],[273,[[0,[10,47]]]],[[70,20],[[0,[10,47]]]],[[87,20],[[0,[10,47]]]],[[243,20],[[0,[10,47]]]],[[276,20],[[0,[10,47]]]],[[70,20],[[17,[16]]]],[[87,20],[[17,[16]]]],[249],[256],[271],[274],[246,60],0,0,0,0,0,0,0,0,[[],[[17,[16,6]]]],[[],[[17,[16,6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],46],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[280,280],[[]],[[280,280],3],[[],3],[[],3],[[280,4],5],[[281,4],5],[[281,4],5],[[282,4],5],[[282,4],5],[[283,4],5],[[283,4],5],[[]],[[]],[[]],[282,281],[[]],[[]],[282,283],[[]],[[284,280,3],[[13,[285]]]],[[284,280,3],[[13,[285]]]],[[],60],[280],[[284,10]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[284,10],[[[12,[286]]],[[13,[284,285]]]],0,[[284,280],[[13,[281]]]],[[284,280,10],287],[[]],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[109,109],[[13,[288]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[289,289],[[]],[109,[[13,[290]]]],[109,[[13,[290]]]],[[289,289],3],[[],3],[[],3],[[290,4],5],[[290,4],5],[[289,4],5],[[288,4],5],[[288,4],5],[[291,4],5],[[291,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[109,[[13,[292,290]]]],0,0,[[]],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[293,4],5],[[294,4],5],[[295,4],5],[[295,4],5],[[296,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,0,0,0,[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[297],[[],[[13,[169]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[109]],298],34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[298,298],[299,299],[300,300],[301,301],[297,297],[302,302],[303,303],[304,304],[305,305],[306,306],[307,307],[308,308],[309,309],[310,310],[311,311],[312,312],[313,313],[314,314],[315,315],[316,316],[317,317],[318,318],[319,319],[320,320],[321,321],[322,322],[323,323],[324,324],[325,325],[326,326],[327,327],[328,328],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[13,[297]]]],[[],[[13,[302]]]],[[],[[13,[304]]]],[[],[[13,[306]]]],[[],[[13,[307]]]],[[],[[13,[308]]]],[[],[[13,[309]]]],[[],[[13,[310]]]],[[],[[13,[311]]]],[[],[[13,[312]]]],[[],[[13,[313]]]],[[],[[13,[314]]]],[[],[[13,[315]]]],[[],[[13,[316]]]],[[],[[13,[318]]]],[[],[[13,[319]]]],[[],[[13,[320]]]],[[],[[13,[321]]]],[[],[[13,[324]]]],[[],[[13,[328]]]],0,[[]],[[]],[[297,297],3],[[],3],[[],3],0,0,[[329,4],5],[[329,4],5],[[330,4],5],[[330,4],5],[[331,4],5],[[331,4],5],[[298,4],5],[[299,4],5],[[300,4],5],[[301,4],5],[[297,4],5],[[297,4],5],[[302,4],5],[[303,4],5],[[303,4],5],[[304,4],5],[[305,4],5],[[306,4],5],[[307,4],5],[[308,4],5],[[309,4],5],[[310,4],5],[[311,4],5],[[312,4],5],[[313,4],5],[[314,4],5],[[315,4],5],[[316,4],5],[[317,4],5],[[318,4],5],[[319,4],5],[[320,4],5],[[321,4],5],[[322,4],5],[[323,4],5],[[324,4],5],[[325,4],5],[[326,4],5],[[327,4],5],[[328,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,[[13,[314,133]]]],[[],60],0,0,[297],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,0,0,[[],46],[[],46],0,[298,109],[300,109],0,0,0,0,0,0,0,0,0,0,0,[298,34],[300,34],0,[109,[[13,[329]]]],0,0,0,0,0,[[],[[13,[303]]]],0,0,0,[297,13],[302,13],[304,13],[305,13],[306,13],[307,13],[308,13],[309,13],[310,13],[311,13],[312,13],[313,13],[314,13],[315,13],[316,13],[317,13],[318,13],[319,13],[320,13],[321,13],[322,13],[324,13],[325,13],[326,13],[327,13],[328,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[298,[12,[109]]],34],[[300,[12,[109]]],34],[[330,109],34],[[299,109],34],[[301,109],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],0,0,0,0,0,0,0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[332,34],[[109,333,[12,[109]]],34],[[109,109],34],[[332,4],5],[[334,4],5],[[334,4],5],[[333,4],5],[[]],[[]],[[]],0,[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,[109,[[13,[332,334]]]],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[]],[[]],[165,[[13,[322,335]]]],[[335,4],5],[[335,4],5],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[],[[0,[10,47]]]],[[],34],[[],13],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[338,[[0,[336,337]]]]],[[13,[339,340]]]],[[[338,[[0,[336,337]]]]],[[13,[339,340]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[339,339],[341,341],[342,342],[343,343],[340,340],[344,344],[[]],[[]],[[]],[[]],[[]],[[]],[[339,339],55],[[341,341],55],[[339,339],3],[[341,341],3],[[],3],[[],3],[[],3],[[],3],0,[[345,4],5],[[346,4],5],[[347,4],5],[[339,4],5],[[341,4],5],[[342,4],5],[[343,4],5],[[343,4],5],[[340,4],5],[[340,4],5],[[344,4],5],[[344,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[339,342],[341,342],[[]],[[]],[[]],[[]],[[],60],[[],60],[339],[341],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,0,[348,[[338,[[0,[336,337]]]]]],[346],[[[338,[[0,[336,337]]]]]],[[[338,[[0,[336,337]]]],339],34],[[339,339],[[12,[55]]]],[[341,341],[[12,[55]]]],[[[338,[[0,[336,337]]]],[122,[342]],109,34]],[[[338,[[0,[336,337]]]],339,34]],[[[338,[[0,[336,337]]]],339],12],0,[[[338,[[0,[336,337]]]],341,34]],[[[338,[[0,[336,337]]]]]],[347],[[[338,[[0,[336,337]]]],20]],[[[338,[[0,[336,337]]]],[122,[342]],109,20,34]],[[[345,[[0,[336,337]]]],[0,[287,336]]]],[[[338,[[0,[336,337]]]],[122,[342]],20],[[13,[344]]]],[[[338,[[0,[336,337]]]],[122,[342]],109,[0,[336,337]]],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[338,[[0,[336,337]]]],[122,[342]],109,34],13],[[[338,[[0,[336,337]]]],339,34],[[13,[343]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[[349,4],5],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[[],[[8,[349]]]],[[8,350]],[8],[[],13],[[],13],[[],14],[[]],0,0,0,0,0,0,0,[351,352],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[352,352],[[]],[[351,352]],[[352,352],55],[[352,352],3],[[],3],[[],3],[[[351,[57]],4],5],[[352,4],5],[[[353,[57]],4],5],[[]],[[]],[[]],[[]],[[],60],[352],[[351,352]],[[351,352]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[351,3],[351,20],[351,[[13,[354,285]]]],0,[355,[[13,[351,285]]]],[351,353],[[352,352],[[12,[55]]]],[[351,352,34]],[351],0,[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[356,20,20]],[[],1],[[],1],[[]],[[]],[356,[[13,[285]]]],[356],[[[357,[356]]]],[[[356,[57]],4],5],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[356,3],[[],356],[[[357,[356]]]],[[],13],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[358,359,[17,[16]]]],[[360,3]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[361,361],[359,359],[362,362],[363,363],[364,364],[365,365],[366,366],[367,367],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[358,359]],[[361,361],55],[[359,359],55],[[358,361],363],[360,165],[[361,361],3],[[359,359],3],[[363,363],3],[[367,367],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[361,4],5],[[359,4],5],[[362,4],5],[[362,4],5],[[363,4],5],[[[368,[57]],4],5],[[369,4],5],[[369,4],5],[[364,4],5],[[364,4],5],[[365,4],5],[[365,4],5],[[366,4],5],[[366,4],5],[[370,4],5],[[370,4],5],[[367,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[],60],[[],60],0,[361],[359],[367],[[358,361]],[[358,361]],[[358,361,371]],[[360,372]],[[373,372]],[[358,374,3]],[[358,375,3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[358,3],[364,3],[373,3],[358,20],0,0,0,[[],361],[[],359],[[],361],[[],359],[376,358],[358,[[12,[368]]]],[358,377],0,[358,46],0,[[358,361,20,[122,[[17,[16]]]]],359],[[361,361],[[12,[55]]]],[[359,359],[[12,[55]]]],0,0,[358,12],[360],[373],[[358,359,[122,[[17,[16]]]]],[[13,[370]]]],0,[[373,378]],[[358,359]],[358,46],0,[360],[373],[360],[[358,359,[13,[[17,[16]]]]]],0,[[358,361,20,[122,[[17,[16]]]]],[[13,[359,362]]]],[[358,361]],[[360,378],367],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[379,380,[17,[16]]]],[[381,380,[17,[16]]]],[[379,20,[17,[16]]],[[13,[380,382]]]],[[381,20,[17,[16]]],[[13,[380,382]]]],[[379,3]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[380,380],[[[383,[47]]],[[383,[47]]]],[384,384],[385,385],[386,386],[382,382],[[]],[[]],[[]],[[]],[[]],[[]],[[379,380]],[[381,380]],[[380,380],55],[381],[379,165],[[380,380],3],[[],3],[[],3],0,[[379,4],5],[[381,4],5],[[387,4],5],[[388,4],5],[[388,4],5],[[380,4],5],[[[389,[57,57]],4],5],[[[383,[57]],4],5],[[384,4],5],[[385,4],5],[[386,4],5],[[382,4],5],[[382,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[380],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[387,383],381],[387,390],0,0,0,0,[385,20],[[],380],[[],380],0,0,[[379,380],20],[[381,380],20],0,[[379,380],12],[[381,380],12],[[379,20,[17,[16]]],380],[[381,20,[17,[16]]],380],[[380,380],[[12,[55]]]],0,0,0,[379,[[12,[389]]]],0,[[381,378],[[13,[388]]]],[[379,380]],[[381,380]],0,[379],[[379,380,[13,[[17,[16]]]]],[[13,[391]]]],[[381,380,[13,[[17,[16]]]]],[[13,[391]]]],0,[[379,378],367],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[383,379],[[379,380,[17,[16]]]],[[381,380,[17,[16]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[392,[17,[16]],20]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[393,393],[394,394],[395,395],[396,396],[[]],[[]],[[]],[[]],[392],[[392,4],5],[[[397,[57,57]],4],5],[[393,4],5],[[393,4],5],[[394,4],5],[[394,4],5],[[391,4],5],[[391,4],5],[[395,4],5],[[395,4],5],[[396,4],5],[[396,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[17,[34]]],392],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[394,3],[392,20],[[34,[17,[16]],20],392],[392,12],[34,392],[392],[[392,378]],[392],[[34,[12,[[17,[16]]]],20],392],[392,12],[392,[[12,[397]]]],[[392,[13,[[17,[16]]]]],[[13,[391]]]],[[392,398]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[392,[17,[16]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[399,3],[[[400,[47,47]]],[[400,[47,47]]]],[401,401],[[[402,[47,47]]],[[402,[47,47]]]],[[]],[[]],[[]],[[[400,[56,56]],400],3],[[],3],[[],3],[[399,4],5],[[[400,[57,57]],4],5],[[[403,[57,57]],4],5],[[401,4],5],[[401,4],5],[[[402,[57,57]],4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[402,10],[400,399],[400,403],[[399,378],[[13,[403,401]]]],[[]],[[]],[[]],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[402,20,378],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[390,20]],[390],[[390,10]],[[390,20],20],[[390,4],5],[[404,4],5],[[405,4],5],[[406,4],5],[[406,4],5],[[407,4],5],[[407,4],5],[[408,4],5],[[408,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[390,[[13,[20,407]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[390,3],0,0,[377],[[],377],[409,404],[409,405],[410,10],[410,[[17,[16]]]],0,[[],410],[[404,378],[[13,[405,406]]]],[410,377],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[411,4],5],[[412,4],5],[[413,4],5],[[414,4],5],[[414,4],5],[[]],[[]],[[]],[412,413],[411,413],[[],413],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[3,411],[3,413],[[411,378],[[13,[413,414]]]],[[412,377],411],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[415,416],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[417,3],[416,3],[417,3],[416,3],0,[418,418],[419,419],[420,420],[[]],[[]],[[]],[416],[[419,419],55],[415,10],0,[[418,418],3],[[419,419],3],[[420,420],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[415,20],421],[[415,4],5],[[417,4],5],[[416,4],5],[[418,4],5],[[422,4],5],[[419,4],5],[[[423,[57]],4],5],[[424,4],5],[[425,4],5],[[425,4],5],[[420,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[426,419],[[]],[[]],[[]],[[]],[[],60],[415,3],[415,3],[419],[417,419],[416,419],[415,[[13,[423,425]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[417],[416],[415,3],0,[415,20],[[],419],[[],419],[422,415],[421,[[12,[25]]]],[415,20],[415,416],[[419,419],[[12,[55]]]],[415],[417,20],[416,20],0,[415,[[12,[418]]]],[415],[[415,419]],[[416,60]],[416],[[415,418]],[[415,419],[[12,[417]]]],[[415,419],[[12,[416]]]],[[]],[[]],[[]],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[417],[416],[416],[415,46],[415,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[416,[17,[16]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[427,10],[428],[429],[[],[[13,[169]]]],[[],[[13,[169]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[428,428],[430,430],[431,431],[427,427],[429,429],[[]],[[]],[[]],[[]],[[]],[[428,428],55],[[429,429],55],[[],428],[[]],[[]],[[]],[[]],[[428,428],3],[[430,430],3],[[427,427],3],[[429,429],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[428,4],5],[[428,4],5],[[430,4],5],[[430,4],5],[[431,4],5],[[431,4],5],[[427,4],5],[[427,4],5],[[429,4],5],[[429,4],5],[[]],[427,428],[[]],[[]],[[]],[[]],[[],428],[109,[[13,[428]]]],[10,[[13,[427,431]]]],[[],60],[[],60],[428],[429],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[428,10],[[428,428],[[12,[55]]]],[[429,429],[[12,[55]]]],[428],[[428,427]],[428],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[428,[[17,[16]]]],[[],13],[[[17,[16]]],[[13,[428]]]],[[],13],[[],13],[[],13],[[],13],[109,[[13,[429]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[432,10],[[]],[[]],[[]],[[]],[433,433],[[]],[432],[[432,4],5],[[432,4],5],[[433,4],5],[[433,4],5],[[]],[[]],[[],[[13,[432,433]]]],[[],[[13,[433]]]],[432,165],[[],432],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[],34],[[],34],[432,[[17,[16]]]],[[],13],[[],[[13,[432]]]],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[434],[434],[[],[[13,[169]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[435,435],[434,434],[[]],[[]],[[434,434],55],[[]],[[]],[[435,435],3],[[434,434],3],[[],3],[[],3],[[],3],[[],3],[[435,4],5],[[436,4],5],[[436,4],5],[[437,4],5],[[437,4],5],[[434,4],5],[[434,4],5],[[438,4],5],[[438,4],5],[[439,4],5],[[439,4],5],[[440,4],5],[[440,4],5],[[]],[[]],[[]],[435,434],[435,434],[[]],[[]],[[]],[[]],[441,440],[[[17,[16]]],[[13,[434]]]],[[],[[13,[435,436]]]],[435,434],[109,[[13,[434]]]],[[],60],[434],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[434,[[17,[16]]]],[435,434],[[434,434],[[12,[55]]]],[434,34],[[]],[[]],[435,[[17,[16]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[[17,[16]]],[[13,[434]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[435,[[13,[437]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[442,374]],[[442,374,434]],[[442,375]],[[442,375,434]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[442,20,[122,[[17,[16]]]]]],[[442,434,20],3],[[442,434],3],[443,443],[444,444],[445,445],[446,446],[447,447],[448,448],[449,449],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[442,434,20],449],[[444,444],55],[[445,445],55],[[442,361],443],0,[[443,443],3],[[444,444],3],[[445,445],3],[[446,446],3],[[448,448],3],[[449,449],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[442,434],10],[[443,4],5],[[444,4],5],[[445,4],5],[[[450,[57]],4],5],[[446,4],5],[[451,4],5],[[451,4],5],[[447,4],5],[[447,4],5],[[448,4],5],[[449,4],5],[[452,4],5],[[452,4],5],[[453,4],5],[[453,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[442,10],[[],60],[[],60],0,[[442,434],10],[444],[445],[[442,359,[17,[16]]]],[[442,359]],[[442,361]],[[442,361]],[[442,361,371]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,[454,442],[442,[[12,[450]]]],[442,377],0,[442,46],0,[[442,20],20],[[442,434,20,[17,[16]]]],[[442,20],10],0,[[444,444],[[12,[55]]]],[[445,445],[[12,[55]]]],0,[442,10],0,[442,12],[[442,434,20,[122,[[17,[16]]]]],[[13,[453]]]],0,[442,46],0,[[442,444,[13,[[17,[16]]]]]],[[442,434,3]],[[442,434,20,448]],0,[[442,434,20,[17,[16]]],[[13,[445,362]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[442,3],10],[442,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[378,20]],[[378,20]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[378],[378],[[]],[[]],0,[378,20],[378,455],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[378,3],[455,[[12,[16]]]],0,0,[378,20],[378],0,[455],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]],[378],0,[[378,456]],[378],0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[357,[[460,[[0,[457,458,336,459]]]]]],461],[[463,[462]]]],[[[357,[[460,[[0,[457,458,336,459]]]]]],461],[[463,[462]]]],[[[357,[[460,[[0,[457,458,336,459]]]]]],461],[[463,[[462,[20]]]]]],[[[357,[[460,[[0,[457,458,336,459]]]]]],461],[[463,[[462,[20]]]]]],0,[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,[[]],[[]],[[[464,[[0,[457,458,336,459]]]]],[[13,[[460,[[0,[457,458,336,459]]]],285]]]],0,0,0,0,[[],1],[[],1],[[]],[[]],[[],465],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],0,[[],465],[[],13],[[],13],[[],14],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[466,466],[467,467],[[]],[[]],[468,10],[468,469],[[466,466],3],[[467,467],3],[[],3],[[],3],[[],3],[[],3],[[468,4],5],[[466,4],5],[[466,4],5],[[467,4],5],[[467,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[468,12],[468,12],[470],[[471,472],[[13,[467]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[469,[[12,[470]]]],[468,10],[468,10],[468],[32,468],[[469,472],[[13,[470,466]]]],[[470,472]],[[]],[[]],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[20,473],10],[[[17,[474]]],10],[[[475,[10]]],10],[[],[[17,[16]]]],[[[476,[10,10]]],10],[477,10],[[[478,[10]]],10],[479,479],[480,480],[473,473],[481,481],[482,482],[483,483],[474,474],[484,484],[485,485],[486,486],[487,487],[488,488],[489,489],[490,490],[491,491],[492,492],[[[476,[47,47]]],[[476,[47,47]]]],[477,477],[493,493],[494,494],[[[478,[47]]],[[478,[47]]]],[[[475,[47]]],[[475,[47]]]],[495,495],[496,496],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[20,[[13,[497,498]]]],[20,[[13,[479,499]]]],[20,[[13,[473,500]]]],[[],[[13,[[17,[474]],501]]]],[[],[[13,[17,502]]]],[20,[[13,[484,503]]]],[20,[[13,[504,505]]]],[[],[[13,[[476,[[506,[428]],[506,[109]]]],507]]]],[[],[[13,[494]]]],[496,[[13,[12,495]]]],0,0,0,[497,10],[[479,20],10],[[479,479],3],[[480,480],3],[[473,473],3],[[481,481],3],[[482,482],3],[[483,483],3],[[474,474],3],[[484,484],3],[[485,485],3],[[486,486],3],[[487,487],3],[[488,488],3],[[489,489],3],[[490,490],3],[[491,491],3],[[492,492],3],[[[476,[56,56]],476],3],[[477,477],3],[[493,493],3],[[[478,[56]],478],3],[[[475,[56]],475],3],[[496,496],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[479,4],5],[[480,4],5],[[497,4],5],[[498,4],5],[[498,4],5],[[499,4],5],[[499,4],5],[[473,4],5],[[481,4],5],[[482,4],5],[[483,4],5],[[474,4],5],[[500,4],5],[[500,4],5],[[501,4],5],[[501,4],5],[[484,4],5],[[485,4],5],[[486,4],5],[[487,4],5],[[488,4],5],[[489,4],5],[[490,4],5],[[491,4],5],[[492,4],5],[[503,4],5],[[503,4],5],[[504,4],5],[[508,4],5],[[505,4],5],[[505,4],5],[[[476,[57,57]],4],5],[[507,4],5],[[507,4],5],[[502,4],5],[[502,4],5],[[509,4],5],[[509,4],5],[[477,4],5],[[493,4],5],[[494,4],5],[[494,4],5],[[[478,[57]],4],5],[[[475,[57]],4],5],[[495,4],5],[[495,4],5],[[496,4],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],60],[[],60],[480],[496],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[480],[[484,20],[[0,[10,47]]]],[[489,20],[[0,[10,47]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[510,374,428]],[[510,375,428]],0,[[510,434,20],[[13,[453]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[511],[512],[[510,20,434]],0,0,[[510,20],20],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[510,434,20],3],[[510,434],3],0,[513,513],[514,514],[515,515],[511,511],[516,516],[517,517],[512,512],[518,518],[519,519],[520,520],[521,521],[522,522],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[516,516],55],[[521,521],55],[[522,522],55],0,0,[523,479],[515,497],[511,220],[517],[512,504],[518],[[510,20,434,524]],[[510,20],10],[[516,516],3],[[521,521],3],[[522,522],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[523,4],5],[[513,4],5],[[514,4],5],[[514,4],5],[[515,4],5],[[511,4],5],[[516,4],5],[[525,4],5],[[517,4],5],[[512,4],5],[[518,4],5],[[526,4],5],[[526,4],5],[[527,4],5],[[527,4],5],[[528,4],5],[[528,4],5],[[529,4],5],[[529,4],5],[[519,4],5],[[519,4],5],[[520,4],5],[[520,4],5],[[530,4],5],[[530,4],5],[[531,4],5],[[531,4],5],[[521,4],5],[[[532,[57]],4],5],[[533,4],5],[[522,4],5],[[534,4],5],[[534,4],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],60],[[],60],[[],60],0,0,[516],[521],[522],0,0,[[510,361,371]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[511,[[17,[16]]]],[520,3],0,0,[535,510],[510,[[12,[533]]]],[[510,536],[[12,[532]]]],[510,377],0,0,[510,20],[510,20],[[510,20],20],[[510,20],10],0,[[516,516],[[12,[55]]]],[[521,521],[[12,[55]]]],[[522,522],[[12,[55]]]],0,[510,10],[[510,521,3]],[[510,521,374]],[[510,521,375]],[510,12],0,[[510,444,[12,[[17,[474]]]]]],[[510,444,109]],0,0,[[510,434,20,3],[[13,[453]]]],0,[[510,20,60]],[[510,20,513]],[[510,20],10],[[510,434,20,473,32],445],[[510,434,20,473,32],445],[[510,434,20,[475,[10]],32],[[13,[445,362]]]],[[510,434,20,32],445],[[510,20],516],[[510,434,20],445],[[510,434,20,493,32],445],[[510,434,20,[478,[10]],32],[[13,[445,362]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[510,20,434],[[12,[522]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[537,538,539],540],[[537,60],538],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[537,68],[537,69],[537],[537,70],[537,60],[537,[[12,[541]]]],[[537,538,[17,[16]],3],542],[537,20],0,0,[[537,540,[13,[10]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[543,544],[[537,540,[13,[[17,[16]]]]]],0,[538,538],[540,540],[545,545],[539,539],[546,546],[[[547,[47]]],[[547,[47]]]],[548,548],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[538,538],55],[[540,540],55],[537,10],0,[[538,538],3],[[540,540],3],[[545,545],3],[[539,539],3],[[546,546],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[537,70],0,[[549,4],5],[[550,4],5],[[538,4],5],[[540,4],5],[[[551,[57]],4],5],[[545,4],5],[[539,4],5],[[552,4],5],[[546,4],5],[[[547,[57]],4],5],[[548,4],5],[[553,4],5],[[553,4],5],[[[554,[57]],4],5],[[555,4],5],[[555,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[545,539],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[541,536],12],[[],60],[[],60],[[537,538,[17,[16]]],546],[[537,540]],[[537,540,[17,[231]],3]],[556],[557],[538],[540],0,[556,60],[557,60],[[537,538]],[[537,538]],[[558,[12,[25]]],544],[[559,10],544],[[560,12],544],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[537,3],0,[560,25],[558,25],[[537,60],10],0,0,[549,537],[537,10],[537,10],[[545,561]],[[539,561]],[537,10],0,[[538,538],[[12,[55]]]],[[540,540],[[12,[55]]]],[[556,32],562],[563],[564],[559,25],[[541,10],10],[537,565],[564],[[537,538]],[541,91],0,[557],0,0,0,0,[[537,538]],[[537,538,60],3],[[537,538],20],[537,10],0,[[557,32],544],0,[537,551],[[537,540,[13,[[17,[16]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[537,538,60]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[545,561],545],[[539,561],539],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[566,10],[[13,[567]]]],[[568,569,60]],[[568,569,570],571],[572,569],[573,569],[574,569],0,[[568,571]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[568,68],[568],[568,70],[568,60],[[568,569,[17,[16]],3],575],[568,20],0,[[568,60]],[[568,60]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[576,568],[577,568],[578,568],[579,568],0,[571,571],[570,570],[580,580],[[]],[[]],[[]],[[571,571],55],[[570,570],55],[568,10],[[571,571],3],[[570,570],3],[[],3],[[],3],[[],3],[[],3],[568,70],[566,568],[[568,571]],0,0,[[571,4],5],[[570,4],5],[[581,4],5],[[580,4],5],[[582,4],5],[[582,4],5],[[[583,[57]],4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],60],[[],60],[[568,569,[17,[16]]],580],[578],[571],[570],[578,60],[[568,569]],[[568,569]],[577,566],[584],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[568,60],10],0,0,[581,568],[568,10],[568,10],0,[568,10],[[571,571],[[12,[55]]]],[[570,570],[[12,[55]]]],[[578,32],585],[579],[[568,60],586],[568,587],[[568,569]],[576],[[568,569]],[[568,569,60],3],[[568,569],20],0,[568,46],0,[[]],[[]],[[]],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[588],[576],[588],[573],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[589,569,60]],[[589,569,60]],[[589,60],569],[[],1],[[],1],[[],1],[[],1],[[589,569]],[[]],[[]],[[]],[[]],[569,569],[[]],[[569,569],55],[[589,569],3],[[569,569],3],[[],3],[[],3],[589,60],[[[589,[57]],4],5],[[569,4],5],[[]],[[]],[[],60],[569],[[589,569]],[[589,569]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[589,3],[589,46],[[589,60],10],[589,20],[[20,60],589],[589,20],[[569,569],[[12,[55]]]],[[589,569]],[[589,60]],[[589,60]],[[589,569,60],3],[[589,569,60]],[[]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[589,46],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[590,60],591],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[590,68],[590,69],[590],[590,70],[590,60],0,[590,[[12,[592]]]],0,[590,20],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[593,594],0,0,[595,595],[591,591],[[]],[[]],[[595,595],55],[[591,591],55],[590,10],[590,596],0,[597],[[595,595],3],[[591,591],3],[[],3],[[],3],[[],3],[[],3],[590,70],0,[[590,595]],[[590,595,10]],[[597,4],5],[[598,4],5],[[599,4],5],[[595,4],5],[[591,4],5],[[600,4],5],[[601,4],5],[[601,4],5],[[[596,[57,57]],4],5],[[[602,[57]],4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[592,536],12],[[],60],[[],60],[603],[595],[591],0,[603,60],0,[[590,591]],[[590,591]],[[604,[12,[25]]],594],[[605,10],594],[[606,12],594],[[590,600],595],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[603,3],0,[606,25],[604,25],[[],595],[[],595],[[]],[598,590],[597,12],[590,10],[590,10],0,[590,10],0,[[595,595],[[12,[55]]]],[[591,591],[[12,[55]]]],[607],[605,25],[[592,10],10],[590,608],[[590,591,60]],[[590,591]],0,[592,91],0,[603],0,0,[597],[[590,591],60],0,[[590,591],20],[590,46],0,0,[[603,32],594],0,0,[[]],[[]],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[609,609],[610,610],[[]],[[]],[20,[[13,[[12,[610]],611]]]],[[609,609],3],[[610,610],3],[[],3],[[],3],[[],3],[[],3],[[609,4],5],[[611,4],5],[[611,4],5],[[610,4],5],[[]],[[]],[[]],[[],60],[609],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,[[165,609],[[0,[10,47]]]],0,0,[609,[[0,[25,47]]]],[[]],[[]],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[612,613,614],615],[612,613],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[612,68],[612,20],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[616,199,3]],[617],0,[618,618],[613,613],[619,619],[614,614],[615,615],[[]],[[]],[[]],[[]],[[]],[[613,613],55],[[615,615],55],[612,10],[[613,613],3],[[615,615],3],[[],3],[[],3],[[],3],[[],3],[[612,615]],0,0,0,[[620,4],5],[[620,4],5],[[618,4],5],[[618,4],5],[[613,4],5],[[[621,[57]],4],5],[[619,4],5],[[614,4],5],[[615,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[612,622],[623,622],[[]],[[]],[[]],[[]],[[],60],[[],60],[613],[615],0,[[612,613]],[[612,613]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[613,613],[[12,[55]]]],[[615,615],[[12,[55]]]],[612,624],[625],[[612,613]],0,[[612,615,[17,[16]]]],[612,10],0,0,0,[626,[[13,[612]]]],[612,621],[[612,615,[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[625],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[612,615,[17,[231]],3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[627],[[627,[17,[16]]],628],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[627],0,[627,12],[627,12],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[628,628],[[[629,[47]]],[[629,[47]]]],[630,630],[[]],[[]],[[]],[[628,628],55],[[628,628],3],[[[629,[56]],629],3],[[],3],[[],3],[[],3],[[],3],0,[627,10],[[[627,[57]],4],5],[[628,4],5],[[[629,[57]],4],5],[[630,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[627,3],[628],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[627,10],[627,10],[[627,628],3],[[627,628],3],[627,10],[631,627],[627,20],[627,20],[[628,628],[[12,[55]]]],[627,10],[[627,628]],0,[[627,628],12],0,[627,630],[[627,10],10],[627,10],[[627,628,[13,[632]]]],[[]],[[]],[[]],[[627,628],12],[[627,628],12],0,[627,10],[627,10],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[627,10],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[633,[17,[16]]],634],[633,635],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[633,60],[635,636],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[634,634],[[]],[[634,634],55],[[634,634],3],[[],3],[[],3],0,[633,10],[635,633],[[[633,[57]],4],5],[[[635,[57]],4],5],[[[637,[57]],4],5],[[634,4],5],[[[636,[57]],4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[634],[[633,634],[[12,[60]]]],[633,10],[637,634],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[633,3],[633,10],[633,10],[633,20],[638,633],[[634,634],[[12,[55]]]],[[633,634]],[[633,60],10],[[633,60],10],[[633,634],12],[[633,634,60,[13,[632,639]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[633,46],[[633,634],12],[[633,634],12],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[640,640],[632,632],[641,641],[642,642],[643,643],[644,644],[639,639],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[13,[[13,[632,639]],644]]]],[[640,640],3],[[632,632],3],[[641,641],3],[[642,642],3],[[639,639],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[640,4],5],[[632,4],5],[[641,4],5],[[641,4],5],[[642,4],5],[[642,4],5],[[643,4],5],[[643,4],5],[[644,4],5],[[644,4],5],[[639,4],5],[[639,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[645,[12,[25]]],646],[[647,10],646],[[648,12],646],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[646,91],[648,25],[645,25],0,0,[647,25],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[649,[[0,[46,47]]]]],646],[[[0,[10,47]],640],[[0,[10,47]]]],[[[0,[10,47]],640],[[0,[10,47]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],46],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[],650],0,[[[650,[47]]],[[650,[47]]]],[168,168],[[]],[[]],[[]],[[168,168],3],[[],3],[[],3],[[651,4],5],[[651,4],5],[[[650,[57]],4],5],[[168,4],5],[[]],[[]],[[]],[[],60],[168],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[[[650,[10]]],[[12,[652]]]],[10,10],[168],0,0,0,[[[650,[10]]]],[[]],[[]],[[],34],0,[168],0,[[],13],[[],13],[16,[[13,[168]]]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92,92],[[]],[[],92],[[],92],[[92,4],5],[[]],[[]],[[]],[[]],[[653,10],654],[[655,12],654],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[655,10],[92],[[[12,[92]]],654],[[92,3]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[656,656],[[]],[[657,4],5],[[658,4],5],[[656,4],5],[[656,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,[659,657],[657,10],[657,[[13,[658]]]],[[]],[[],34],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[660,652],661],[660,[[0,[662,46]]]],0,[663,663],[664,664],[665,665],[666,666],[660,660],[661,661],[[]],[[]],[[]],[[]],[[]],[[]],[667,[[13,[668,664]]]],[[[668,[25]],4],5],[[663,4],5],[[664,4],5],[[664,4],5],[[665,4],5],[[666,4],5],[[660,4],5],[[660,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[660,652],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[[668,[25]]],10],[[[668,[25]]],10],0,0,[[[668,[25]]],[[12,[12]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[[668,[25]]],[[12,[666]]]],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[669,10],[669,[[17,[16]]]],[652,652],[[]],[[652,652],55],[[],669],[[652,652],3],[[],3],[[],3],[[652,4],5],[[652,4],5],[[652,4],5],[[]],[[]],[[],60],[652],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[669],[669,10],[[],669],[[652,652],[[12,[55]]]],[[669,12]],[[]],[669,12],[[],13],[16,[[13,[652]]]],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]],[20,669],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[670],[[],[[13,[169]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[671,[[0,[46,47]],[0,[25,47]]]],3],[[13,[670,672]]]],0,[671,673],[672,672],[670,670],[[[671,[47,47]]],[[671,[47,47]]]],[674,674],[675,675],[676,676],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[13,[[671,[675]],676]]]],[[[671,[[0,[46,47]],[0,[25,47]]]]],[[13,[[0,[10,47]],672]]]],[[]],[[]],[[[671,[[0,[46,47]],[0,[25,47]]]]],[[13,[[17,[16]],672]]]],[[674,674],3],[[],3],[[],3],[[672,4],5],[[672,4],5],[[670,4],5],[[[671,[57,57]],4],5],[[674,4],5],[[675,4],5],[[676,4],5],[[676,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],670],[[],675],[[],675],[[],60],[674],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[]],[675,[[12,[652]]]],0,[675],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[677,10],[678,20],[[679,652],[[12,[679]]]],[[680,652],[[12,[679]]]],[[681,652],[[12,[679]]]],[[679,652],12],[[680,652],12],[[681,652],12],[[[678,[47]]],[[678,[47]]]],[682,682],[[]],[[]],[[],678],[[682,682],3],[[],3],[[],3],[[678,[0,[10,47]]],[[12,[679]]]],[[[678,[57]],4],5],[[682,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[679,10],[680,10],[681,10],[[],60],[679,3],[682],[683,680],[684,680],[677,680],[681,680],[685,683],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[[679,652],[[13,[679,679]]]],[[680,652],[[13,[679,680]]]],[[681,652],[[13,[679,681]]]],[679,[[13,[679,679]]]],[680,[[13,[679,680]]]],[681,[[13,[679,681]]]],[679,[[13,[679,679]]]],[680,[[13,[679,680]]]],[681,[[13,[679,681]]]],[686,[[12,[679]]]],[679,[[12,[679]]]],[680,[[12,[679]]]],[681,[[12,[679]]]],[679,[[12,[680]]]],[686,[[12,[685]]]],[678,3],[679,3],[680,3],[681,3],[678,10],[678,20],[[],678],[678,686],[[678,682],[[12,[679]]]],[[678,682],[[12,[10]]]],[679,682],[680,682],[681,682],[679,[[12,[679]]]],[680,[[12,[679]]]],[681,[[12,[679]]]],[679,[[0,[46,47]]]],[680,[[0,[46,47]]]],[681,[[0,[46,47]]]],[680,687],[[678,[0,[10,47]]],[[12,[679]]]],[678,[[12,[679]]]],[678,12],[678],[[678,678],3],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[679],[680],[681],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,678],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[688,4],5],[[689,4],5],[[689,4],5],[[]],[[]],[[]],0,[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,0,[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[[690,[46]]],[[13,[688,689]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[691,4],5],[[692,4],5],[[692,4],5],[[]],[[]],[[]],0,[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,0,0,0,0,0,[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[693,[[13,[691,692]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[694,695],0,0,[[696,4],5],[[696,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[697,[12,[25]]],695],[[698,10],695],[[699,12],695],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[699,25],[697,25],0,0,0,0,0,0,0,0,0,0,[698,25],0,0,[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[700,[[0,[46,47]]]]],695],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[701,4],5],[[701,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],[9,[[9,[1]]]],0,[[],34],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[702,[[13,[703,701]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[43,[[0,[46,47]]]],[[]],[[]],[[43,4],5],[[]],[[]],[[[7,[6]]],[[7,[1,6]]]],[8,[[8,[1]]]],[9,[[9,[1]]]],0,[[],13],[[],13],[[],14],[[]]],"p":[[8,"Any"],[3,"SlotClaim"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Iterator"],[3,"Config"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"ApplyExtrinsic"],[15,"u8"],[3,"Vec"],[4,"BuilderAuthoring"],[3,"Seal"],[15,"usize"],[3,"WaitSlot"],[4,"Error"],[4,"Error"],[3,"NextKey"],[8,"AsRef"],[3,"PrefixKeys"],[3,"Success"],[3,"StorageGet"],[3,"Config"],[4,"Builder"],[3,"AuthoringStart"],[3,"Duration"],[3,"AuthoringStartConfig"],[3,"String"],[3,"ApplyExtrinsic"],[4,"BlockBuild"],[3,"Config"],[4,"TransactionValidityError"],[4,"InvalidTransaction"],[4,"UnknownTransaction"],[4,"DispatchError"],[3,"InherentExtrinsics"],[3,"InherentData"],[3,"NextKey"],[3,"PrefixKeys"],[8,"ExactSizeIterator"],[8,"Clone"],[3,"StorageGet"],[3,"AsyncTree"],[3,"NodeIndex"],[3,"AsyncOpId"],[3,"InputIterItem"],[4,"OutputUpdate"],[3,"OutputUpdateBlock"],[4,"Ordering"],[8,"PartialEq"],[8,"Debug"],[4,"NextNecessaryAsyncOp"],[3,"AsyncOpParams"],[15,"u64"],[8,"FnMut"],[3,"Config"],[3,"BodyVerifyRuntimeRequired"],[3,"NonFinalizedTree"],[3,"BodyInsert"],[3,"FinalityApply"],[3,"SetFinalizedBlockIter"],[3,"ValidChainInformationRef"],[4,"ChainInformationConsensusRef"],[3,"HeaderRef"],[3,"RuntimeCompilation"],[4,"BodyVerifyStep2"],[3,"Replacements"],[3,"Config"],[3,"HeaderInsert"],[4,"JustificationVerifyError"],[4,"CommitVerifyError"],[4,"FinalityVerifyError"],[4,"SetFinalizedError"],[4,"BodyVerifyStep1"],[4,"BodyVerifyError"],[4,"HeaderVerifySuccess"],[4,"HeaderVerifyError"],[3,"StorageNextKey"],[3,"StoragePrefixKeys"],[3,"StorageGet"],[3,"Header"],[3,"BlockAccess"],[3,"Recompositions"],[3,"Decompositions"],[3,"HostVmPrototype"],[3,"CalculationCache"],[3,"StreamSafe"],[3,"ValidChainInformation"],[3,"ChainInformationRef"],[3,"ChainInformation"],[4,"ChainInformationConsensus"],[3,"BabeEpochInformation"],[4,"ChainInformationFinality"],[3,"BabeEpochInformationRef"],[4,"ChainInformationFinalityRef"],[4,"ValidityError"],[4,"BabeValidityError"],[4,"InProgress"],[4,"RuntimeCall"],[3,"StorageGet"],[3,"NextKey"],[4,"Error"],[15,"str"],[4,"ChainInformationBuild"],[3,"Config"],[3,"ForkTree"],[3,"PruneAncestorsIter"],[3,"LightSyncState"],[3,"ChainSpec"],[4,"FromGenesisStorageError"],[4,"Bootnode"],[3,"ParseError"],[4,"GenesisStorage"],[3,"GenesisStorageItems"],[3,"CorruptedError"],[8,"Into"],[3,"SqliteFullDatabase"],[4,"AccessError"],[8,"FromIterator"],[4,"FinalizedAccessError"],[3,"Config"],[4,"ConfigTy"],[4,"InsertError"],[4,"SetFinalizedError"],[4,"CorruptedError"],[3,"InternalError"],[4,"Error"],[3,"DatabaseEmpty"],[4,"DatabaseOpen"],[4,"InvalidHeapPagesError"],[3,"HeapPages"],[3,"ExternalStorageNextChildTrie"],[4,"ModuleFormatError"],[4,"StorageKey"],[4,"Trie"],[4,"NewErr"],[4,"StartErr"],[4,"Error"],[3,"ExternalStorageRoot"],[3,"ReadyToRun"],[3,"Finished"],[3,"ExternalStorageGet"],[3,"ExternalStorageSet"],[3,"ExternalStorageAppend"],[3,"ExternalStorageClearPrefix"],[3,"ExternalStorageNextKey"],[3,"SignatureVerification"],[3,"CallRuntimeVersion"],[3,"ExternalOffchainStorageSet"],[3,"LogEmit"],[3,"GetMaxLogLevel"],[3,"StartStorageTransaction"],[3,"EndStorageTransaction"],[4,"HostVm"],[4,"NewErr"],[4,"CoreVersionError"],[4,"StartErr"],[8,"Hash"],[15,"u32"],[3,"Config"],[3,"CoreVersion"],[4,"TrieEntryVersion"],[4,"Error"],[4,"FindEmbeddedRuntimeVersionError"],[4,"FindEncodedEmbeddedRuntimeVersionApisError"],[3,"CoreVersionRef"],[3,"CoreVersionApisRefIter"],[3,"CoreVersionApi"],[8,"RangeBounds"],[4,"ErrorDetail"],[3,"SuccessVirtualMachine"],[3,"Success"],[3,"Error"],[3,"NextKey"],[4,"RuntimeHostVm"],[3,"StorageGet"],[3,"SignatureVerification"],[3,"StorageRoot"],[3,"Config"],[4,"ErrorDetail"],[3,"SuccessVirtualMachine"],[3,"Success"],[3,"Error"],[3,"NextKey"],[4,"RuntimeHostVm"],[3,"PrefixKeys"],[3,"StorageGet"],[3,"SignatureVerification"],[3,"Config"],[3,"TrieDiff"],[4,"StorageNextKey"],[3,"VirtualMachinePrototype"],[4,"ExecHint"],[3,"Signature"],[4,"WasmValue"],[4,"ValueType"],[3,"Trap"],[3,"Prepare"],[3,"VirtualMachine"],[3,"UnsupportedTypeError"],[4,"ExecOutcome"],[3,"OutOfBoundsError"],[4,"RunErr"],[4,"GlobalValueErr"],[15,"i32"],[15,"i64"],[3,"Demand"],[3,"FuncType"],[3,"FuncType"],[4,"Value"],[4,"Val"],[4,"ValueType"],[4,"ValType"],[3,"CommitMessageRef"],[3,"CompactCommitRef"],[3,"UnsignedPrecommitRef"],[3,"Error"],[3,"IsAuthority"],[3,"IsParent"],[3,"Config"],[4,"Error"],[4,"InProgress"],[4,"Error"],[3,"Verifier"],[3,"WarpSyncFragment"],[4,"Next"],[3,"PrecommitsRef"],[3,"PrecommitRef"],[3,"Precommit"],[3,"VotesAncestriesIter"],[3,"GrandpaJustificationRef"],[3,"Error"],[3,"GrandpaJustification"],[3,"PrecommitsRefIter"],[3,"Config"],[4,"Error"],[3,"DigestRef"],[3,"AuraPreDigest"],[3,"Digest"],[4,"BabePreDigestRef"],[4,"AuraConsensusLogRef"],[4,"AuraConsensusLog"],[3,"AuraAuthoritiesIter"],[3,"AuraAuthorityRef"],[3,"AuraAuthority"],[4,"BabeConsensusLogRef"],[4,"BabeConsensusLog"],[3,"BabeNextEpochRef"],[3,"BabeNextEpoch"],[3,"BabeAuthoritiesIter"],[3,"BabeAuthorityRef"],[3,"BabeAuthority"],[3,"BabeNextConfig"],[4,"BabeAllowedSlots"],[4,"BabePreDigest"],[3,"BabePrimaryPreDigestRef"],[3,"BabePrimaryPreDigest"],[3,"BabeSecondaryPlainPreDigest"],[3,"BabeSecondaryVRFPreDigestRef"],[3,"BabeSecondaryVRFPreDigest"],[4,"GrandpaConsensusLogRef"],[4,"GrandpaConsensusLog"],[3,"GrandpaScheduledChangeRef"],[3,"GrandpaScheduledChange"],[3,"GrandpaAuthoritiesIter"],[3,"GrandpaAuthorityRef"],[3,"GrandpaAuthority"],[3,"LogsIter"],[3,"PushSealError"],[4,"DigestItemRef"],[4,"DigestItem"],[3,"Error"],[4,"Seal"],[4,"KeyNamespace"],[4,"SignError"],[4,"KeyLoadError"],[4,"SignVrfError"],[3,"Keystore"],[3,"Error"],[3,"PathBuf"],[8,"Future"],[4,"Bip39ToSeedError"],[4,"DeriveJunction"],[4,"ParsePrivateKeyError"],[3,"Bip39DecodeError"],[3,"ParsedPrivateKey"],[3,"HashDisplay"],[3,"BytesDisplay"],[3,"InformantLine"],[3,"RelayChain"],[3,"HexString"],[4,"MethodCall"],[4,"Response"],[4,"ServerToClient"],[4,"ServerToClientResponse"],[3,"HashHexString"],[4,"RemoveMetadataLengthPrefixError"],[3,"AccountId"],[3,"Block"],[4,"FollowEvent"],[4,"ChainHeadBodyEvent"],[4,"ChainHeadCallEvent"],[4,"ChainHeadStorageEvent"],[4,"TransactionWatchEvent"],[3,"TransactionWatchEventBlock"],[4,"NetworkEvent"],[3,"NumberAsString"],[3,"Header"],[3,"HeaderDigest"],[3,"NetworkConfig"],[3,"RpcMethods"],[4,"MaybeRuntimeSpec"],[4,"NodeRole"],[3,"RuntimeSpec"],[3,"RuntimeVersion"],[3,"RuntimeDispatchInfo"],[4,"DispatchClass"],[3,"StorageChangeSet"],[3,"SystemHealth"],[3,"SystemPeer"],[4,"SystemPeerRole"],[4,"TransactionStatus"],[4,"ParseError"],[4,"MethodError"],[3,"InvalidParameterError"],[3,"Call"],[4,"ErrorResponse"],[3,"ParseError"],[4,"DecodeError"],[8,"Send"],[8,"Sync"],[3,"RequestsSubscriptions"],[3,"ClientId"],[4,"AddClientError"],[3,"RequestId"],[4,"ClientOrRequestIdRef"],[3,"TryQueueClientRequestError"],[4,"StartSubscriptionError"],[3,"SubscriptionStart"],[3,"MessagesReceiver"],[3,"ConfirmationSend"],[3,"Config"],[3,"TasksQueue"],[6,"BoxFuture"],[3,"WsServer"],[3,"ConnectionId"],[4,"Event"],[4,"SocketAddr"],[3,"Config"],[3,"WithBuffers"],[3,"Pin"],[3,"Network"],[3,"SubstreamId"],[3,"MultiStreamConnectionTask"],[3,"ConnectionId"],[4,"StartRequestError"],[3,"ConnectionState"],[4,"RequestError"],[4,"NotificationsOutErr"],[4,"NotificationsInClosedErr"],[4,"SubstreamFate"],[4,"Event"],[4,"ShutdownCause"],[4,"QueueNotificationError"],[3,"ConnectionToCoordinator"],[3,"CoordinatorToConnection"],[3,"SingleStreamConnectionTask"],[4,"MultiStreamHandshakeKind"],[4,"SingleStreamHandshakeKind"],[3,"Config"],[3,"NoiseKey"],[3,"ReadWrite"],[3,"MultiStream"],[3,"SubstreamId"],[3,"SingleStream"],[4,"AddRequestError"],[3,"Config"],[3,"ConfigRequestResponse"],[4,"ConfigRequestResponseIn"],[3,"ConfigNotifications"],[3,"ConnectionPrototype"],[4,"Error"],[4,"Event"],[3,"Noise"],[4,"RespondInRequestError"],[3,"Substream"],[4,"InboundError"],[4,"RequestError"],[4,"NotificationsOutErr"],[4,"NotificationsInClosedErr"],[4,"Event"],[4,"InboundTy"],[3,"InProgress"],[4,"Config"],[4,"Error"],[4,"MessageOut"],[4,"Negotiation"],[3,"HandshakeInProgress"],[4,"NoiseHandshake"],[4,"HandshakeError"],[3,"CipherError"],[3,"PayloadDecodeError"],[3,"Config"],[3,"UnsignedNoiseKey"],[3,"HealthyHandshake"],[3,"NoiseKeyRequired"],[4,"Handshake"],[4,"HandshakeError"],[3,"Yamux"],[3,"SubstreamMut"],[3,"SubstreamRef"],[4,"GoAwayErrorCode"],[3,"SubstreamId"],[4,"DeadSubstreamTy"],[3,"ExtractOut"],[3,"Config"],[3,"IncomingDataOutcome"],[4,"IncomingDataDetail"],[4,"Error"],[3,"NonZeroU32"],[4,"ProtocolRef"],[3,"Multiaddr"],[3,"DomainNameRef"],[3,"FromVecError"],[4,"ParseError"],[3,"MultihashRef"],[4,"FromBytesError"],[3,"PeerId"],[4,"PublicKey"],[4,"FromProtobufEncodingError"],[3,"SignatureVerifyFailed"],[4,"FromBytesError"],[4,"ParseError"],[3,"Bs58DecodeError"],[4,"Error"],[3,"Peers"],[3,"ConnectionState"],[3,"InRequestId"],[3,"OutRequestId"],[4,"ShutdownPeer"],[4,"InboundError"],[4,"DesiredState"],[4,"OpenOrPending"],[4,"Event"],[4,"ShutdownCause"],[4,"InNotificationAcceptError"],[4,"QueueNotificationError"],[3,"Config"],[3,"IncomingBytes"],[3,"VecDeque"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"Unpin"],[3,"Connection"],[3,"Context"],[6,"Result"],[4,"Poll"],[3,"Config"],[3,"Kademlia"],[4,"OrInsertError"],[4,"InsertError"],[3,"KBuckets"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[4,"PeerState"],[3,"BlocksRequestConfig"],[3,"BlockData"],[3,"CallProofRequestConfig"],[3,"IdentifyResponse"],[3,"StateRequest"],[3,"StorageProofRequestConfig"],[3,"BlockAnnouncesHandshakeRef"],[4,"Role"],[4,"BlocksRequestDirection"],[3,"BlocksRequestFields"],[4,"BlocksRequestConfigStart"],[4,"GrandpaNotificationRef"],[3,"VoteMessageRef"],[4,"MessageRef"],[3,"UnsignedPrevoteRef"],[3,"PrimaryProposeRef"],[3,"NeighborPacket"],[3,"CatchUpRequest"],[3,"CatchUpRef"],[3,"PrevoteRef"],[4,"StateRequestStart"],[4,"DecodeStateResponseError"],[4,"DecodeStorageCallProofResponseError"],[4,"StorageOrCallProof"],[3,"BlockAnnounceRef"],[3,"DecodeBlockAnnounceError"],[3,"BlockAnnouncesHandshakeDecodeError"],[4,"DecodeBlockRequestError"],[4,"DecodeBlockResponseError"],[4,"DecodeFindNodeResponseError"],[3,"DecodeGrandpaNotificationError"],[3,"GrandpaWarpSyncResponse"],[3,"DecodeGrandpaWarpSyncResponseError"],[3,"IntoIter"],[4,"DecodeIdentifyResponseError"],[3,"GrandpaWarpSyncResponseFragment"],[3,"ProtobufDecodeError"],[3,"ChainNetwork"],[3,"EncodedGrandpaCommitMessage"],[3,"EncodedGrandpaWarpSyncResponse"],[3,"GrandpaState"],[4,"NotificationsOutErr"],[3,"EncodedBlockAnnounce"],[3,"KademliaOperationId"],[3,"EncodedMerkleProof"],[3,"EncodedStateResponse"],[4,"StorageProofRequestError"],[4,"CallProofRequestError"],[3,"PendingId"],[4,"SlotTy"],[3,"EncodedBlockAnnounceHandshake"],[8,"IntoIterator"],[4,"RequestResult"],[4,"DiscoveryError"],[4,"KademliaFindNodeError"],[4,"BlocksRequestError"],[4,"BlocksRequestResponseEntryError"],[4,"GrandpaWarpSyncRequestError"],[4,"StateRequestError"],[3,"StartConnect"],[4,"Event"],[4,"ProtocolError"],[3,"Config"],[8,"FnOnce"],[3,"AllSync"],[3,"SourceId"],[4,"RequestDetail"],[3,"RequestId"],[3,"BlockStorage"],[4,"BlockAnnounceOutcome"],[3,"RuntimeCompilation"],[4,"BlockVerification"],[4,"DesiredRequest"],[4,"GrandpaCommitMessageOutcome"],[3,"Block"],[3,"BlockFull"],[3,"Config"],[3,"ConfigFull"],[4,"Status"],[3,"GrandpaWarpSyncResponseFragment"],[4,"HeaderVerifyError"],[4,"FinalityProofVerifyOutcome"],[4,"BlockVerificationError"],[3,"HeaderVerify"],[3,"HeaderBodyVerify"],[3,"StorageNextKey"],[3,"StoragePrefixKeys"],[3,"StorageGet"],[3,"NonZeroU64"],[4,"HeaderVerifyOutcome"],[3,"FinalityProofVerify"],[3,"WarpSyncFragmentVerify"],[4,"ProcessOne"],[3,"FinishAncestrySearch"],[4,"AddBlock"],[3,"AllForksSync"],[3,"SourceId"],[3,"RequestParams"],[3,"RequestId"],[3,"AddSourceOldBlock"],[3,"AddSourceKnown"],[3,"AddSourceUnknown"],[4,"BlockAnnounceOutcome"],[3,"AddBlockOccupied"],[3,"AddBlockVacant"],[3,"HeaderVerify"],[3,"FinalityProofVerify"],[4,"GrandpaCommitMessageOutcome"],[3,"Config"],[4,"HeaderVerifyError"],[4,"FinalityProofVerifyOutcome"],[3,"AnnouncedBlockUnknown"],[4,"HeaderVerifyOutcome"],[4,"AddSource"],[4,"ProcessOne"],[3,"AnnouncedBlockKnown"],[3,"AllForksSources"],[3,"OptimisticSync"],[3,"SourceId"],[3,"BlockStorage"],[3,"RuntimeCompilation"],[4,"BlockVerification"],[3,"RequestId"],[3,"Disassemble"],[3,"RequestsDrain"],[3,"Config"],[3,"ConfigFull"],[3,"RequestDetail"],[4,"ResetCause"],[3,"DisassembleSource"],[3,"BlockVerify"],[3,"StorageNextKey"],[3,"StoragePrefixKeys"],[3,"StorageGet"],[3,"JustificationVerify"],[4,"ProcessOne"],[4,"OccupiedCoreAssumption"],[3,"PersistedValidationDataRef"],[3,"Error"],[3,"InProgressWarpSync"],[3,"SourceId"],[4,"RequestDetail"],[3,"RequestId"],[3,"BuildRuntime"],[3,"BuildChainInformation"],[4,"WarpSyncInitError"],[4,"DesiredRequest"],[4,"Error"],[4,"Status"],[4,"WarpSync"],[3,"Success"],[4,"ProcessOne"],[3,"VerifyWarpSyncFragment"],[3,"Config"],[3,"LightPool"],[3,"TransactionId"],[3,"RemovedTransaction"],[3,"SetBestBlock"],[3,"Config"],[3,"ValidTransaction"],[3,"Pool"],[3,"TransactionId"],[3,"AppendBlock"],[4,"AppendBlockTransaction"],[3,"Vacant"],[3,"Config"],[4,"TransactionValidityError"],[4,"TransactionSource"],[4,"InvalidTransaction"],[4,"UnknownTransaction"],[4,"Error"],[3,"DecodeError"],[3,"NextKey"],[4,"Query"],[3,"PrefixKeys"],[3,"StorageGet"],[3,"Config"],[3,"BytesToNibbles"],[4,"NibbleFromU8Error"],[3,"Nibble"],[3,"AllKeys"],[4,"RootMerkleValueCalculation"],[3,"StorageValue"],[4,"Error"],[3,"PrefixScan"],[4,"ResumeOutcome"],[3,"Config"],[3,"Children"],[4,"Child"],[8,"DoubleEndedIterator"],[4,"StorageValue"],[4,"Error"],[3,"ProofEntry"],[3,"TrieNodeInfo"],[3,"Config"],[3,"DecodedTrieProof"],[3,"ProofBuilder"],[3,"MerkleValueOutput"],[3,"Decoded"],[4,"EncodeError"],[15,"u16"],[4,"StorageValue"],[3,"DecodedPartialKey"],[4,"Error"],[3,"PrepareInsertTwo"],[3,"TrieStructure"],[4,"NodeAccess"],[3,"StorageNodeAccess"],[3,"BranchNodeAccess"],[3,"NodeIndex"],[4,"PrepareInsert"],[3,"PrepareInsertOne"],[3,"Vacant"],[4,"Entry"],[4,"Remove"],[3,"VerifySuccess"],[4,"VerifyError"],[3,"VerifyConfig"],[3,"VerifySuccess"],[4,"VerifyError"],[3,"VerifyConfig"],[3,"RuntimeCompilation"],[4,"Verify"],[4,"Error"],[3,"StorageNextKey"],[3,"StoragePrefixKeys"],[3,"StorageGet"],[3,"Config"],[4,"Error"],[3,"Config"],[4,"Success"],[4,"ConfigConsensus"],[13,"ApplyExtrinsicResult"],[13,"Aura"],[4,"ConfigPreRuntime"],[13,"ApplyExtrinsicResult"],[13,"Module"],[13,"InherentExtrinsicDispatchError"],[13,"InherentExtrinsicTransactionValidityError"],[13,"NotReady"],[13,"Finalized"],[13,"BestBlockChanged"],[13,"BadParent"],[13,"Error"],[13,"Finished"],[13,"NotEnoughKnownBlocks"],[13,"UnknownTargetBlock"],[13,"TooFarAhead"],[13,"BadParent"],[13,"Insert"],[13,"Aura"],[13,"Babe"],[13,"Aura"],[13,"Babe"],[13,"Grandpa"],[13,"Grandpa"],[4,"ConfigFinalizedBlockHeader"],[13,"Finished"],[13,"NonGenesis"],[13,"Genesis"],[13,"WasmStart"],[13,"WasmVm"],[3,"PrunedNode"],[13,"Parsed"],[13,"BadReturnValue"],[13,"Utf8Error"],[13,"UnresolvedFunctionCalled"],[13,"ParamOutOfRange"],[13,"OutOfMemory"],[13,"HostFunctionNotImplemented"],[13,"ReturnedPtrOutOfRange"],[13,"StateVersionMismatch"],[13,"FreeError"],[13,"Error"],[13,"EndStorageTransaction"],[13,"ChildTrieDefault"],[13,"MainTrie"],[13,"ChildTrieDefault"],[13,"WasmVm"],[13,"WasmVm"],[13,"Interrupted"],[13,"Finished"],[13,"UnresolvedFunctionImport"],[13,"BadValueTy"],[13,"TargetHashMismatch"],[13,"Success"],[13,"UnknownConsensus"],[13,"UnknownPreRuntime"],[13,"UnknownSeal"],[13,"UnknownConsensus"],[13,"UnknownPreRuntime"],[13,"UnknownSeal"],[13,"ForcedChange"],[13,"ForcedChange"],[3,"VrfSignature"],[13,"Done"],[13,"Inaccessible"],[13,"Error"],[13,"Done"],[13,"Error"],[13,"Done"],[13,"BestBlockChanged"],[13,"NewBlock"],[13,"Initialized"],[13,"Finalized"],[13,"Invalid"],[13,"Valid"],[13,"system_accountNextIndex"],[13,"state_getRuntimeVersion"],[13,"state_queryStorageAt"],[13,"chainHead_unstable_call"],[13,"chainHead_unstable_storage"],[13,"state_getKeysPaged"],[13,"payment_queryInfo"],[13,"chainHead_unstable_body"],[13,"chainHead_unstable_header"],[13,"chainHead_unstable_unfollow"],[13,"chainHead_unstable_unpin"],[13,"chain_getBlock"],[13,"chain_getHeader"],[13,"state_call"],[13,"state_getKeys"],[13,"state_getMetadata"],[13,"state_getStorage"],[13,"chain_getBlockHash"],[13,"state_subscribeStorage"],[13,"chainHead_unstable_finalizedDatabase"],[13,"sudo_unstable_p2pDiscover"],[13,"chainHead_unstable_follow"],[13,"author_unwatchExtrinsic"],[13,"chain_unsubscribeAllHeads"],[13,"chain_unsubscribeFinalizedHeads"],[13,"chain_unsubscribeNewHeads"],[13,"state_unsubscribeRuntimeVersion"],[13,"state_unsubscribeStorage"],[13,"chainHead_unstable_stopBody"],[13,"chainHead_unstable_stopCall"],[13,"chainHead_unstable_stopStorage"],[13,"transaction_unstable_unwatch"],[13,"network_unstable_unsubscribeEvents"],[13,"author_submitAndWatchExtrinsic"],[13,"author_submitExtrinsic"],[13,"transaction_unstable_submitAndWatch"],[13,"TooManyParameters"],[13,"InvalidParameter"],[13,"MissingParameters"],[13,"InvalidParametersFormat"],[13,"StartConnect"],[13,"Connected"],[13,"HandshakeFinished"],[13,"Stop"],[13,"SubstreamOutOpen"],[13,"OutSlotAssign"],[13,"OutSlotUnassign"],[13,"InSlotAssign"],[13,"InSlotUnassign"],[13,"InSlotToOutSlot"],[13,"SubstreamOutStop"],[13,"SubstreamOutAccept"],[13,"Method"],[13,"author_extrinsicUpdate"],[13,"chain_finalizedHead"],[13,"chain_newHead"],[13,"chain_allHead"],[13,"state_runtimeVersion"],[13,"state_storage"],[13,"chainHead_unstable_bodyEvent"],[13,"chainHead_unstable_callEvent"],[13,"chainHead_unstable_followEvent"],[13,"chainHead_unstable_storageEvent"],[13,"transaction_unstable_watchEvent"],[13,"network_unstable_event"],[13,"BestChainBlockIncluded"],[13,"Finalized"],[13,"Dropped"],[13,"Error"],[13,"Invalid"],[13,"Broadcasted"],[13,"ConnectionOpen"],[13,"ConnectionError"],[13,"TextFrame"],[3,"NotificationProtocolConfig"],[13,"InboundError"],[13,"HandshakeFinished"],[13,"StartShutdown"],[13,"Shutdown"],[13,"RequestIn"],[13,"NotificationsInOpen"],[13,"PingOutSuccess"],[13,"PingOutFailed"],[13,"NotificationsIn"],[13,"NotificationsInClose"],[13,"Response"],[13,"NotificationsOutResult"],[13,"RequestInCancel"],[13,"NotificationsOutCloseDemanded"],[13,"NotificationsOutReset"],[13,"NotificationsInOpenCancel"],[13,"WebRtc"],[13,"Payload"],[13,"NotificationsInOpen"],[13,"RequestIn"],[13,"Response"],[13,"NotificationsInOpenCancel"],[13,"NotificationIn"],[13,"NotificationsInClose"],[13,"NotificationsOutResult"],[13,"NotificationsOutCloseDemanded"],[13,"NotificationsOutReset"],[13,"NotificationsInOpen"],[13,"NotificationIn"],[13,"PingOutError"],[13,"NotificationsInClose"],[13,"RequestIn"],[13,"Response"],[13,"NotificationsOutResult"],[13,"NotificationsOutReset"],[13,"NotificationsInError"],[13,"NotificationsInUnexpectedEof"],[13,"Notifications"],[13,"Request"],[13,"Dialer"],[13,"Listener"],[13,"Success"],[13,"Success"],[13,"GoAway"],[13,"DataFrame"],[13,"StreamClosed"],[13,"StreamReset"],[13,"HandshakeFinished"],[13,"StartShutdown"],[13,"Shutdown"],[13,"InboundError"],[13,"RequestIn"],[13,"NotificationsInOpen"],[13,"RequestInCancel"],[13,"NotificationsInOpenCancel"],[13,"NotificationsIn"],[13,"NotificationsOutResult"],[13,"NotificationsOutClose"],[13,"NotificationsInClose"],[13,"Response"],[13,"DuplicateNotificationsSubstream"],[13,"OutgoingHandshake"],[13,"Established"],[13,"ChildTrieDefault"],[3,"ChainConfig"],[13,"Entry"],[13,"InvalidExtrinsicsRoot"],[13,"BlockAnnounce"],[13,"ChainConnected"],[13,"ChainDisconnected"],[13,"ChainConnectAttemptFailed"],[13,"InboundSlotAssigned"],[13,"GrandpaNeighborPacket"],[13,"GrandpaCommitMessage"],[13,"BlocksRequestIn"],[13,"Disconnected"],[13,"ProtocolError"],[13,"KademliaDiscoveryResult"],[13,"IdentifyRequestIn"],[13,"RequestResult"],[13,"RequestInCancel"],[13,"GenesisMismatch"],[4,"ResponseOutcome"],[3,"BlockRequestSuccessBlock"],[13,"TooOld"],[13,"Error"],[13,"Success"],[13,"BlocksRequest"],[13,"StorageGetMerkleProof"],[13,"RuntimeCallMerkleProof"],[13,"GrandpaWarpSync"],[13,"NewFinalized"],[13,"Error"],[13,"Success"],[13,"WarpSyncError"],[13,"WarpSyncFinished"],[13,"BlocksRequest"],[13,"StorageGet"],[13,"RuntimeCallMerkleProof"],[13,"GrandpaWarpSync"],[13,"NotFinalizedChain"],[13,"WarpSyncFragments"],[13,"WarpSyncChainInformation"],[4,"AncestrySearchResponseError"],[4,"BlockBodyVerify"],[13,"NotFinalizedChain"],[13,"TooOld"],[13,"NewFinalized"],[13,"Error"],[13,"Success"],[13,"AllSync"],[4,"JustificationVerification"],[4,"FinishRequestOutcome"],[3,"Block"],[3,"BlockFull"],[3,"RequestSuccessBlock"],[13,"NewBest"],[13,"Reset"],[13,"Reset"],[13,"Finalized"],[13,"Idle"],[13,"WarpSyncRequest"],[13,"StorageGetMerkleProof"],[13,"RuntimeCallMerkleProof"],[13,"WarpSyncRequest"],[13,"StorageGetMerkleProof"],[13,"RuntimeCallMerkleProof"],[13,"Fragments"],[13,"ChainInformation"],[3,"PruneBodyFinalized"],[13,"NonIncludedUpdated"],[13,"Finished"],[13,"Finished"],[13,"Success"],[13,"InProof"],[13,"Known"],[13,"BranchAlsoRemoved"],[13,"SingleRemoveChild"],[13,"SingleRemoveNoChild"],[13,"TrieNowEmpty"],[4,"ConfigConsensus"],[4,"SuccessConsensus"],[3,"Success"],[13,"Aura"],[13,"Babe"],[13,"UnknownConsensusEngine"],[13,"CheckInherentsError"],[13,"Aura"],[13,"Babe"],[4,"ConfigConsensus"],[4,"ConfigFinality"],[13,"Aura"],[13,"Babe"],[13,"UnknownConsensusEngine"],[13,"Aura"],[13,"Babe"]]},\
"smoldot_light":{"doc":"Smoldot light client library.","t":[3,4,3,3,13,13,3,3,4,13,13,3,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,0,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,13,3,16,16,16,13,16,13,16,13,13,8,4,4,4,13,13,16,16,16,10,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AddChainConfig","AddChainError","AddChainSuccess","ChainId","ChainSpecNeitherGenesisStorageNorCheckpoint","ChainSpecParseError","Client","ClientConfig","HandleRpcError","InvalidCheckpoint","InvalidGenesisStorage","JsonRpcResponses","MalformedJsonRpc","MultipleRelayChains","NoRelayChainFound","Overloaded","PeerId","add_chain","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_byte_slice","as_bytes","as_ref","as_slice_of","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_user_data_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","database_content","disable_json_rpc","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_public_key","from_str","get_hash","get_hash","hash","hash","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bytes","into_json_rpc_error","json_rpc_request","json_rpc_responses","new","next","partial_cmp","partial_cmp","platform","potential_relay_chains","remove_chain","specification","system_name","system_version","tasks_spawner","to_base58","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","json_rpc_request","Closed","ConnectError","ConnectFuture","Connection","Delay","Inbound","Instant","MultiStreamWebRtc","NextSubstreamFuture","Open","Outbound","Platform","PlatformConnection","PlatformSubstreamDirection","ReadBuffer","Reset","SingleStreamMultistreamSelectNoiseYamux","Stream","StreamUpdateFuture","Yield","advance_read_cursor","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","async_std","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","close_send","connect","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_bad_addr","message","next_substream","now","now_from_unix_epoch","open_out_substream","read_buffer","send","sleep","sleep_until","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_stream","vzip","vzip","vzip","vzip","writable_bytes","yield_after_cpu_intensive","connection","local_tls_certificate_multihash","remote_tls_certificate_multihash","AsyncStdTcpWebSocket","Stream","advance_read_cursor","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","close_send","connect","from","from","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","next_substream","now","now_from_unix_epoch","open_out_substream","read_buffer","send","sleep","sleep_until","try_from","try_from","try_into","try_into","type_id","type_id","update_stream","vzip","vzip","writable_bytes","yield_after_cpu_intensive"],"q":["smoldot_lightsmoldot_light::HandleRpcError","smoldot_light::platform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","smoldot_light::platform::PlatformConnection","","","smoldot_light::platform::async_std","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["See <code>Client::add_chain</code>.","Error potentially returned by <code>Client::add_chain</code>.","Returns by <code>Client::add_chain</code> on success.","Chain registered in a <code>Client</code>.","The chain specification must contain either the storage of …","Failed to decode the specification of the chain.","Holds a list of chains, connections, and JSON-RPC services.","Configuration for a client.","Error potentially returned when queuing a JSON-RPC request.","Checkpoint provided in the chain specification is invalid.","Failed to build the information about the chain from the …","Stream of JSON-RPC responses or notifications.","The request isn’t a valid JSON-RPC request.","The list of potential relay chains contains more than one …","The list of potential relay chains doesn’t contain any …","The JSON-RPC service cannot process this request, as it is …","Identifier of a node of the network.","Adds a new chain to the list of chains smoldot tries to …","","","","","","","","","","","","","","","","","","","","Returns a raw bytes representation of this <code>PeerId</code>.","","","","","","","","","","","","","","","","","","","","","Newly-allocated identifier for the chain.","Returns the user data associated to the given chain.","","","","","","","","","Opaque data containing the database content that was …","If <code>true</code>, then no JSON-RPC service is started for this …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Checks whether <code>data</code> is a valid <code>PeerId</code>.","Builds the <code>PeerId</code> corresponding to a public key.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a raw bytes representation of this <code>PeerId</code>.","Builds the JSON-RPC error string corresponding to this …","Enqueues a JSON-RPC request towards the given chain.","Stream of JSON-RPC responses or notifications.","Initializes the smoldot client.","Returns the next response or notification, or <code>None</code> if the …","","","","If <code>AddChainConfig</code> defines a parachain, contains the list …","Removes the chain from smoldot. This instantaneously and …","JSON text containing the specification of the chain (the …","Value returned when a JSON-RPC client requests the name of …","Value returned when a JSON-RPC client requests the version …","In order for the client to function, it needs to be able …","Returns a base-58 encoded string of this <code>PeerId</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opaque user data that the <code>Client</code> will hold for this chain.","","","","","","","","","","Request that was being queued.","The reading side of the stream has been closed by the …","Error potentially returned by <code>Platform::connect</code>.","","A multi-stream connection.","","Substream has been opened by the remote.","","The connection is made of multiple substreams. The …","","Reading side of the stream is fully open. Contains the …","Substream has been opened locally in response to …","Access to a platform’s capabilities.","Type of opened connection. See <code>Platform::connect</code>.","Direction in which a substream has been opened. See …","State of the read buffer, as returned by …","The stream has been abruptly closed by the remote.","The connection is a single stream on top of which Noise …","Opaque object representing either a single-stream …","","","Discards the first <code>bytes</code> bytes of the read buffer of this …","","","","","","","","","","","","","","","","","","Closes the sending side of the given stream.","Starts a connection attempt to the given multiaddress.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","<code>true</code> if the error is caused by the address to connect to …","Human-readable error message.","Waits until a new incoming substream arrives on the …","Returns an object that represents “now”.","Returns the time elapsed since the Unix Epoch (i.e. …","Queues the opening of an additional outbound substream.","Gives access to the content of the read buffer of the …","Queues the given bytes to be sent out on the given stream.","Creates a future that becomes ready after at least the …","Creates a future that becomes ready after the given …","","","","","","","","","","","","","Synchronizes the stream with the “actual” stream.","","","","","Returns the maximum size of the buffer that can be passed …","Should be called after a CPU-intensive operation in order …","Object representing the WebRTC connection.","Multihash encoding of the TLS certificate used by the …","Multihash encoding of the TLS certificate used by the …","Implementation of the <code>Platform</code> trait that uses the …","Implementation detail of <code>AsyncStdTcpWebSocket</code>.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,6,6,0,0,0,6,6,0,15,6,6,15,0,2,32,2,5,33,15,4,11,6,9,32,2,5,33,15,4,11,6,9,9,9,9,9,32,2,5,33,15,4,11,6,9,32,2,5,33,15,4,11,6,9,5,2,4,11,9,4,11,9,11,9,4,4,9,9,11,9,11,11,9,9,15,15,4,11,6,6,9,9,32,2,5,33,15,4,11,6,9,9,9,9,9,9,11,9,11,9,32,2,5,33,15,4,11,6,9,32,2,5,33,15,4,11,6,9,32,2,5,33,15,4,11,6,9,32,2,5,33,15,4,11,6,9,9,15,2,5,2,33,11,9,0,4,2,4,32,32,32,9,4,11,9,15,6,9,32,2,5,33,15,4,11,6,9,9,32,2,5,33,15,4,11,6,9,32,2,5,33,15,4,11,6,9,4,32,2,5,33,15,4,11,6,9,40,38,0,1,1,1,37,1,36,1,38,37,0,0,0,0,38,36,1,1,1,1,41,36,37,38,41,36,37,38,0,41,36,37,38,41,36,37,38,1,1,36,37,38,41,36,37,38,41,36,37,38,41,36,37,38,41,36,37,38,41,36,37,38,41,41,1,1,1,1,1,1,1,1,41,36,37,38,41,36,37,38,41,36,37,38,1,41,36,37,38,1,1,42,42,42,0,0,43,43,44,43,44,43,44,43,44,43,43,43,44,43,44,43,44,43,43,44,43,43,43,43,43,43,43,43,43,44,43,44,43,44,43,43,44,43,43],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],[4,[3]]],[[7,[5,6]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[9],[9],[[],[[7,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[2,[1]],11]],[[[4,[12,12]]],[[4,[12,12]]]],[11,11],[9,9],[[]],[[]],[[]],[[11,11],13],[[9,9],13],0,0,[[]],[[]],[[11,11],14],[[9,9],14],[[],14],[[],14],[[],14],[[],14],[[15,16],17],[[15,16],17],[[[4,[18,18]],16],17],[[11,16],17],[[6,16],17],[[6,16],17],[[9,16],[[7,[19]]]],[[9,16],[[7,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,9],[20,9],[[[23,[21,22]]],[[7,[9]]]],[20,9],[24,[[7,[9]]]],[[],25],[[],25],[11],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[27,[[27,[8]]]],[27,[[27,[8]]]],[27,[[27,[8]]]],[27,[[27,[8]]]],[27,[[27,[8]]]],[27,[[27,[8]]]],[27,[[27,[8]]]],[27,[[27,[8]]]],[27,[[27,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],[9,[[23,[21,22]]]],[15,[[30,[29]]]],[[[2,[1]],[31,[29]],11],[[7,[15]]]],0,[32,[[2,[1]]]],[33,[[30,[29]]]],[[11,11],[[30,[13]]]],[[9,9],[[30,[13]]]],0,0,[[[2,[1]],11]],0,0,0,0,[9,29],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[23,[21,22]]],[[7,[9]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[35],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24],[[[36,[18,18]],16],17],[[37,16],17],[[38,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[27,[[27,[8]]]],[27,[[27,[8]]]],[27,[[27,[8]]]],[27,[[27,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],0,0,[[]],[[]],[[],39],[[]],[[],38],[[]],[39],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[],35],[[]],0,0,0,0,0,[35],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[24],[[]],[[]],[[]],[[]],[[[26,[22]]],[[26,[8,22]]]],[[[26,[22]]],[[26,[8,22]]]],[27,[[27,[8]]]],[28,[[28,[8]]]],[28,[[28,[8]]]],[[]],[[]],[[],39],[[]],[[],38],[[]],[39],[[]],[[],7],[[],7],[[],7],[[],7],[[],34],[[],34],[[]],[[]],[[]],[[],35],[[]]],"p":[[8,"Platform"],[3,"Client"],[8,"Iterator"],[3,"AddChainConfig"],[3,"AddChainSuccess"],[4,"AddChainError"],[4,"Result"],[8,"Any"],[3,"PeerId"],[4,"Error"],[3,"ChainId"],[8,"Clone"],[4,"Ordering"],[15,"bool"],[4,"HandleRpcError"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Error"],[4,"PublicKey"],[15,"u8"],[3,"Global"],[3,"Vec"],[15,"str"],[15,"u64"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"String"],[4,"Option"],[8,"Into"],[3,"ClientConfig"],[3,"JsonRpcResponses"],[3,"TypeId"],[15,"usize"],[4,"PlatformConnection"],[4,"PlatformSubstreamDirection"],[4,"ReadBuffer"],[3,"Duration"],[13,"Overloaded"],[3,"ConnectError"],[13,"MultiStreamWebRtc"],[3,"AsyncStdTcpWebSocket"],[3,"Stream"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
